(window.webpackJsonp=window.webpackJsonp||[]).push([[0],{100:function(e,t,n){"use strict";n.r(t);var a=n(2),o=n.n(a),i=n(4),r=n.n(i),l=n(0),s=n.n(l),d=function(e){return r()(" ",{"uk-panel":e.panel},{"uk-panel-scrollable":e.scrollable}," ")};d.propTypes={panel:s.a.bool,scrollable:s.a.bool},d.defaultProps={panel:!1,scrollable:!1};var m=d,c=n(52),p=n(42),u=function(e){return r()(" ",{"uk-hidden":e.hidden},{"uk-hidden@s":e.hiddenSmall},{"uk-hidden@m":e.hiddenMedium},{"uk-hidden@l":e.hiddenLarge},{"uk-hidden@xl":e.hiddenXLarge},{"uk-visible":e.visible},{"uk-visible@s":e.visibleSmall},{"uk-visible@m":e.visibleMedium},{"uk-visible@l":e.visibleLarge},{"uk-visible@xl":e.visibleXLarge},{"uk-invisible":e.invisible}," ")};u.propTypes={hidden:s.a.bool,hiddenSmall:s.a.bool,hiddenMedium:s.a.bool,hiddenLarge:s.a.bool,hiddenXLarge:s.a.bool,visible:s.a.bool,visibleSmall:s.a.bool,visibleMedium:s.a.bool,visibleLarge:s.a.bool,visibleXLarge:s.a.bool,invisible:s.a.bool},u.defaultProps={hidden:!1,hiddenSmall:!1,hiddenMedium:!1,hiddenLarge:!1,hiddenXLarge:!1,visible:!1,visibleSmall:!1,visibleMedium:!1,visibleLarge:!1,visibleXLarge:!1,invisible:!1};var g=u,h=n(53),f=n(110),y=n(13),x=n(54),b=n(111),C=function(e){return r()(" ",{"uk-float-left":e.floatLeft},{"uk-float-right":e.floatRight},{"uk-clearfix":e.clearFix}," ")};C.propTypes={floatLeft:s.a.bool,floatRight:s.a.bool,clearFix:s.a.bool},C.defaultProps={floatLeft:!1,floatRight:!1,clearFix:!1};var S=C,v=function(e){return r()(" ",{"uk-overflow-hidden":e.overflowHidden},{"uk-overflow-auto":e.overflowAuto}," ")};v.propTypes={overflowHidden:s.a.bool,overflowAuto:s.a.bool},v.defaultProps={overflowHidden:!1,overflowAuto:!1};var w=v,P=function(e){return r()(" ",{"uk-inline":e.displayBlock},{"uk-inline-clip":e.displayInline}," ")};P.propTypes={inline:s.a.bool,inlineClip:s.a.bool},P.defaultProps={inline:!1,inlineClip:!1};var k=P,R=function(e){return r()(" ",{"uk-box-shadow-small":e.boxShadowSmall},{"uk-box-shadow-medium":e.boxShadowMedium},{"uk-box-shadow-large":e.boxShadowLarge},{"uk-box-shadow-xlarge":e.boxShadowXLarge}," ")};R.propTypes={boxShadowSmall:s.a.bool,boxShadowMedium:s.a.bool,boxShadowLarge:s.a.bool,boxShadowXLarge:s.a.bool},R.defaultProps={boxShadowSmall:!1,boxShadowMedium:!1,boxShadowLarge:!1,boxShadowXLarge:!1};var L=R,j=function(e){return r()(" ",{"uk-padding":e.padding},{"uk-padding-small":e.paddingSmall},{"uk-padding-large":e.paddingLarge},{"uk-padding-remove":e.paddingRemove},{"uk-padding-remove-top":e.paddingRemoveTop},{"uk-padding-remove-bottom":e.paddingRemoveBottom},{"uk-padding-remove-left":e.paddingRemoveLeft},{"uk-padding-remove-right":e.paddingRemoveRight},{"uk-padding-remove-vertical":e.paddingRemoveVerticle},{"uk-padding-remove-horizontal":e.paddingRemoveHorizontal}," ")};j.propTypes={padding:s.a.bool,paddingSmall:s.a.bool,paddingLarge:s.a.bool,paddingRemove:!1,paddingRemoveTop:!1,paddingRemoveBottom:!1,paddingRemoveLeft:!1,paddingRemoveRight:!1,paddingRemoveVerticle:!1,paddingRemoveHorizontal:!1},j.defaultProps={padding:!1,paddingSmall:!1,paddingLarge:!1,paddingRemove:!1,paddingRemoveTop:!1,paddingRemoveBottom:!1,paddingRemoveLeft:!1,paddingRemoveRight:!1,paddingRemoveVerticle:!1,paddingRemoveHorizontal:!1};var A=j,_=function(e){return e.animationToggle?o.a.createElement("div",Object.assign({className:I(e)+T(e)},y.a.applyHeightAttributes(e),{tabIndex:"0"}),e.children):o.a.createElement("div",Object.assign({className:I(e)+T(e)},y.a.applyHeightAttributes(e)),e.children)},T=function(e){return m(e)+Object(c.a)(e)+Object(p.a)(e)+g(e)+Object(h.a)(e)+Object(f.a)(e)+y.a.applyHeightClasses(e)+Object(x.a)(e)+Object(b.a)(e)+S(e)+w(e)+k(e)+L(e)+A(e)},I=function(e){return r()(" ")};_.defaultProps={animationToggle:!1,children:void 0},t.default=_},101:function(e,t,n){"use strict";n.r(t);var a=n(2),o=n.n(a),i=n(4),r=n.n(i),l=(n(97),n(42)),s=n(0),d=n.n(s),m=function(e){return r()(" ",{"uk-align-left":e.alignLeft},{"uk-align-center":e.alignCenter},{"uk-align-right":e.alignRight},{"uk-align-left@s":e.alignLeftSmall},{"uk-align-right@s":e.alignRightSmall},{"uk-align-left@m":e.alignLeftMedium},{"uk-align-right@m":e.alignRightMedium},{"uk-align-left@l":e.alignLeftLarge},{"uk-align-right@l":e.alignRightLarge},{"uk-align-left@xl":e.alignLeftXLarge},{"uk-align-right@xl":e.alignRightXLarge}," ")};m.propTypes={alignLeft:d.a.bool,alignCenter:d.a.bool,alignRight:d.a.bool,alignLeftSmall:d.a.bool,alignRightSmall:d.a.bool,alignLeftMedium:d.a.bool,alignRightMedium:d.a.bool,alignLeftLarge:d.a.bool,alignRightLarge:d.a.bool,alignLeftXLarge:d.a.bool,alignRightXLarge:d.a.bool},m.defaultProps={alignLeft:!1,alignCenter:!1,alignRight:!1,alignLeftSmall:!1,alignRightSmall:!1,alignLeftMedium:!1,alignRightMedium:!1,alignLeftLarge:!1,alignRightLarge:!1,alignLeftXLarge:!1,alignRightXLarge:!1};var c=m,p=function(e){return r()(" ",{"uk-border-rounded":e.borderRounded},{"uk-border-circle":e.borderCircle},{"uk-border-pill":e.borderPill}," ")};p.propTypes={borderRounded:d.a.bool,borderCircle:d.a.bool,borderPill:d.a.bool},p.defaultProps={borderRounded:!1,borderCircle:!1,borderPill:!1};var u=p,g=n(13),h=function(e){return o.a.createElement("img",Object.assign({className:f(e)+Object(l.a)(e)+c(e)+u(e)},g.a.applyHeightAttributes(e),{"data-src":e.src,width:e.width,height:e.height,alt:e.alt,"uk-img":""}),e.children)},f=function(e){return r()(" "," ")};h.defaultProps={src:!1,width:!1,height:!1,children:void 0},t.default=h},102:function(e,t,n){"use strict";n.r(t);var a=n(2),o=n.n(a),i=n(4),r=n.n(i),l=function(e){return o.a.createElement("fieldset",{className:s(e)},e.children)},s=function(e){return r()("uk-fieldset")};l.defaultProps={children:void 0};var d=l,m=function(e){return o.a.createElement("legend",{className:c(e)},e.children)},c=function(e){return r()("uk-legend")};m.defaultProps={children:void 0};var p=m,u=n(227),g=n.n(u),h=function(e){return o.a.createElement("form",null,e.children)};h.defaultProps={children:void 0},h.Fieldset=d,h.Legend=p,h.Input=g.a,t.default=h},103:function(e,t,n){"use strict";n.r(t);var a=n(2),o=n.n(a),i=n(4),r=n.n(i),l=n(52),s=function(e){return o.a.createElement("h3",{className:d(e)},e.children)},d=function(e){return r()("uk-card-title")};s.defaultProps={children:void 0};var m=s,c=n(110),p=n(42),u=n(13),g=n(53),h=n(54),f=n(111),y=n(0),x=function(e){return r()(" ",{"uk-transform-origin-top-left":e.transformOriginTopLeft},{"uk-transform-origin-top-center":e.transformOriginTopCenter},{"uk-transform-origin-top-right":e.transformOriginTopRight},{"uk-transform-origin-center-left":e.transformOriginCenterLeft},{"uk-transform-origin-center-right":e.transformOriginCenterRight},{"uk-transform-origin-bottom-left":e.transformOriginBottomLeft},{"uk-transform-origin-bottom-center":e.transformOriginBottomCenter},{"uk-transform-origin-bottom-right":e.transformOriginBottomRight}," ")};x.propTypes={textLeft:n.n(y).a.bool},x.defaultProps={textLeft:!1};var b=x,C=function(e){return o.a.createElement("div",Object.assign({className:S(e)+Object(l.a)(e)+Object(c.a)(e)+Object(p.a)(e)+u.a.applyHeightClasses(e)+Object(g.a)(e)+Object(h.a)(e)+Object(f.a)(e)+b(e)},u.a.applyHeightAttributes(e)),e.children)},S=function(e){return r()(" uk-card",{"uk-card-body":e.body},{"uk-card-default":e.default},{"uk-card-primary":e.primary},{"uk-card-secondary":e.secondary},{"uk-card-hover":e.hover},{"uk-card-small":e.small},{"uk-card-large":e.large}," ")};C.defaultProps={body:!1,default:!1,primary:!1,secondary:!1,hover:!1,children:void 0},C.Title=m,t.default=C},104:function(e,t,n){"use strict";n.r(t);var a=n(2),o=n.n(a),i=n(4),r=n.n(i),l=n(52),s=n(54),d=n(42),m=n(53),c=function(e){return o.a.createElement("div",{className:p(e)},e.children)},p=function(e){return r()("uk-grid-item-match")};c.defaultProps={children:void 0};var u=c,g=n(13),h=n(0),f=function(e){var t=[];return e.height&&t.push("height:"+e.height),t.length?{style:t.join(";")}:{}};f.propTypes={height:n.n(h).a.string},f.defaultProps={height:void 0};var y=f,x=function(e){return o.a.createElement("div",Object.assign({className:C(e)+Object(l.a)(e)+g.a.applyHeightClasses(e)+Object(s.a)(e)+Object(d.a)(e)+Object(m.a)(e)},y(e),g.a.applyHeightAttributes(e),{"uk-grid":b(e)}),e.children)},b=function(e){var t=[];return e.masonry&&t.push("masonry:"+e.masonry),e.parallax&&t.push("parallax:"+e.parallax),t.join(";")},C=function(e){return r()(" ",{"uk-grid-small":e.small},{"uk-grid-medium":e.medium},{"uk-grid-large":e.large},{"uk-grid-collapse":e.collapse},{"uk-grid-column-small":e.columnSmall},{"uk-grid-row-small":e.rowSmall},{"uk-grid-column-medium":e.columnMedium},{"uk-grid-row-medium":e.rowMedium},{"uk-grid-column-large":e.columnLarge},{"uk-grid-row-large":e.rowLarge},{"uk-grid-column-collapse":e.columnCollapse},{"uk-grid-row-collapse":e.rowCollapse},{"uk-grid-divider":e.divider},{"uk-grid-match":e.match}," ")};x.defaultProps={small:!1,medium:!1,large:!1,collapse:!1,columnSmall:!1,rowSmall:!1,columnMedium:!1,rowMedium:!1,columnLarge:!1,rowLarge:!1,columnCollapse:!1,rowCollapse:!1,divider:!1,match:!1,masonry:void 0,parallax:void 0,children:void 0},x.ItemMatch=u,t.default=x},105:function(e,t,n){"use strict";n.r(t);var a=n(2),o=n.n(a),i=n(4),r=n.n(i),l=n(0),s=n.n(l),d=function(e){return r()(" ",{"uk-resize":e.resize},{"uk-resize-vertical":e.resizeVertical}," ")};d.propTypes={resize:s.a.bool,resizeVertical:s.a.bool},d.defaultProps={resize:!1,resizeVertical:!1};var m=d,c=(n(97),function(e){return o.a.createElement("pre",{className:p(e)+m(e)},o.a.createElement("code",null,e.children))}),p=function(e){return r()(" ")};c.defaultProps={children:void 0},t.default=c},110:function(e,t,n){"use strict";var a=n(0),o=n.n(a),i=n(4),r=n.n(i),l=function(e){return r()(" ",{"uk-background-default":e.backgroundDefault},{"uk-background-muted":e.backgroundMuted},{"uk-background-primary":e.backgroundPrimary},{"uk-background-secondary":e.backgroundSecondary}," ")};l.propTypes={backgroundDefault:o.a.bool,backgroundMuted:o.a.bool,backgroundPrimary:o.a.bool,backgroundSecondary:o.a.bool},l.defaultProps={backgroundDefault:!1,backgroundMuted:!1,backgroundPrimary:!1,backgroundSecondary:!1},t.a=l},111:function(e,t,n){"use strict";var a=n(0),o=n.n(a),i=n(4),r=n.n(i),l=function(e){return r()(" ",{"uk-animation-toggle":e.animationToggle},{"uk-animation-fade":e.animationFade},{"uk-animation-scale-up":e.animationScaleUp},{"uk-animation-scale-down":e.animationScaleDown},{"uk-animation-slide-top":e.animationSlideTop},{"uk-animation-slide-bottom":e.animationSlideBottom},{"uk-animation-slide-left":e.animationSlideLeft},{"uk-animation-slide-right":e.animationSlideRight},{"uk-animation-slide-top-small":e.animationSlideTopSmall},{"uk-animation-slide-bottom-small":e.animationSlideBottomSmall},{"uk-animation-slide-left-small":e.animationSlideLeftSmall},{"uk-animation-slide-right-small":e.animationSlideRightSmall},{"uk-animation-slide-top-medium":e.animationSlideTopMedium},{"uk-animation-slide-bottom-medium":e.animationSlideBottomMedium},{"uk-animation-slide-left-medium":e.animationSlideLeftMedium},{"uk-animation-slide-right-medium":e.animationSlideRightMedium},{"uk-animation-kenburns":e.animationKenBurns},{"uk-animation-shake":e.animationShake},{"uk-animation-stroke":e.animationStroke},{"uk-animation-reverse":e.animationReverse},{"uk-animation-fast":e.animationFast}," ")};l.propTypes={animationToggle:o.a.bool,animationFade:o.a.bool,animationScaleUp:o.a.bool,animationScaleDown:o.a.bool,animationSlideTop:o.a.bool,animationSlideBottom:o.a.bool,animationSlideLeft:o.a.bool,animationSlideRight:o.a.bool,animationSlideTopSmall:o.a.bool,animationSlideBottomSmall:o.a.bool,animationSlideLeftSmall:o.a.bool,animationSlideRightSmall:o.a.bool,animationSlideTopMedium:o.a.bool,animationSlideBottomMedium:o.a.bool,animationSlideLeftMedium:o.a.bool,animationSlideRightMedium:o.a.bool,animationKenBurns:o.a.bool,animationShake:o.a.bool,animationStroke:o.a.bool,animationReverse:o.a.bool,animationFast:o.a.bool},l.defaultProps={animationToggle:!1,animationFade:!1,animationScaleUp:!1,animationScaleDown:!1,animationSlideTop:!1,animationSlideBottom:!1,animationSlideLeft:!1,animationSlideRight:!1,animationSlideTopSmall:!1,animationSlideBottomSmall:!1,animationSlideLeftSmall:!1,animationSlideRightSmall:!1,animationSlideTopMedium:!1,animationSlideBottomMedium:!1,animationSlideLeftMedium:!1,animationSlideRightMedium:!1,animationKenBurns:!1,animationShake:!1,animationStroke:!1,animationReverse:!1,animationFast:!1},t.a=l},13:function(e,t,n){"use strict";var a=n(0),o=n.n(a),i=n(4),r=n.n(i),l=function(e){return r()(" ",{"uk-height-1-1":e.height1_1},{"uk-height-small":e.heightSmall},{"uk-height-max-small":e.heightMaxSmall},{"uk-height-medium":e.heightMedium},{"uk-height-max-medium":e.heightMaxMedium},{"uk-height-large":e.heightLarge},{"uk-height-max-large":e.heightMaxLarge}," ")};l.propTypes={height1_1:o.a.bool,heightSmall:o.a.bool,heightMaxSmall:o.a.bool,heightMedium:o.a.bool,heightMaxMedium:o.a.bool,heightLarge:o.a.bool,heightMaxLarge:o.a.bool},l.defaultProps={height1_1:!1,heightSmall:!1,heightMaxSmall:!1,heightMedium:!1,heightMaxMedium:!1,heightLarge:!1,heightMaxLarge:!1};var s=function(e){var t=[];return e.heightViewportOffsetTop&&t.push("offset-top:"+e.heightViewportOffsetTop),e.heightViewportOffsetBottom&&t.push("offset-bottom:"+e.heightViewportOffsetBottom),e.heightViewportExpand&&t.push("expand:"+e.heightViewportExpand),e.heightViewportMinHeight&&t.push("min-height:"+e.heightViewportMinHeight),t.length?{"uk-height-viewport":t.join(";")}:e.heightViewport?{"uk-height-viewport":""}:{}};s.propTypes={heightViewport:o.a.bool,heightViewportOffsetTop:o.a.bool,heightViewportOffsetBottom:o.a.any,heightViewportExpand:o.a.bool,heightViewportMinHeight:o.a.bool},s.defaultProps={heightViewport:!1,heightViewportOffsetTop:void 0,heightViewportOffsetBottom:void 0,heightViewportExpand:void 0,heightViewportMinHeight:void 0},t.a={applyHeightClasses:l,applyHeightAttributes:s}},201:function(e,t,n){"use strict";n.r(t);var a=n(2),o=n.n(a);t.default=function(e){return o.a.createElement("div",null)}},202:function(e,t,n){"use strict";n.r(t);var a=n(2),o=n.n(a);t.default=function(e){return o.a.createElement("div",null)}},203:function(e,t,n){"use strict";n.r(t);var a=n(2),o=n.n(a);t.default=function(e){return o.a.createElement("div",null)}},204:function(e,t,n){"use strict";n.r(t);var a=n(2),o=n.n(a),i=n(4),r=n.n(i),l=n(13),s=function(e){return o.a.createElement("div",Object.assign({className:d(e)},l.a.applyHeightAttributes(e)),e.children)},d=function(e){return r()(" uk-container",{"uk-container-xsmall":e.xsmall},{"uk-container-small":e.small},{"uk-container-large":e.large},{"uk-container-expand":e.expand}," ")};s.defaultProps={xsmall:!1,small:!1,large:!1,expand:!1,children:void 0},t.default=s},205:function(e,t,n){"use strict";n.r(t);var a=n(2),o=n.n(a);t.default=function(e){return o.a.createElement("div",null)}},206:function(e,t,n){"use strict";n.r(t);var a=n(2),o=n.n(a);t.default=function(e){return o.a.createElement("div",null)}},207:function(e,t,n){"use strict";n.r(t);var a=n(2),o=n.n(a);t.default=function(e){return o.a.createElement("div",null)}},208:function(e,t,n){"use strict";n.r(t);var a=n(2),o=n.n(a);t.default=function(e){return o.a.createElement("div",null)}},209:function(e,t,n){"use strict";n.r(t);var a=n(2),o=n.n(a);t.default=function(e){return o.a.createElement("div",null)}},210:function(e,t,n){"use strict";n.r(t);var a=n(2),o=n.n(a);t.default=function(e){return o.a.createElement("div",null)}},211:function(e,t,n){"use strict";n.r(t);var a=n(2),o=n.n(a);t.default=function(e){return o.a.createElement("div",null)}},212:function(e,t,n){"use strict";n.r(t);var a=n(2),o=n.n(a);t.default=function(e){return o.a.createElement("div",null)}},227:function(e,t){},228:function(e,t,n){n(229),e.exports=n(851)},229:function(e,t,n){},25:function(e,t,n){"use strict";n.r(t),n(97);var a=n(96),o=n(98),i=n(103),r=n(105),l=n(102),s=n(104),d=n(101),m=n(100),c=n(99);n.d(t,"Alert",function(){return a.default}),n.d(t,"Button",function(){return o.default}),n.d(t,"Card",function(){return i.default}),n.d(t,"CodeBlock",function(){return r.default}),n.d(t,"Form",function(){return l.default}),n.d(t,"Grid",function(){return s.default}),n.d(t,"Image",function(){return d.default}),n.d(t,"Panel",function(){return m.default}),n.d(t,"Section",function(){return c.default})},392:function(e,t,n){var a={"./Binary_Property/ASCII.js":393,"./Binary_Property/ASCII_Hex_Digit.js":394,"./Binary_Property/Alphabetic.js":395,"./Binary_Property/Any.js":396,"./Binary_Property/Assigned.js":397,"./Binary_Property/Bidi_Control.js":398,"./Binary_Property/Bidi_Mirrored.js":399,"./Binary_Property/Case_Ignorable.js":400,"./Binary_Property/Cased.js":401,"./Binary_Property/Changes_When_Casefolded.js":402,"./Binary_Property/Changes_When_Casemapped.js":403,"./Binary_Property/Changes_When_Lowercased.js":404,"./Binary_Property/Changes_When_NFKC_Casefolded.js":405,"./Binary_Property/Changes_When_Titlecased.js":406,"./Binary_Property/Changes_When_Uppercased.js":407,"./Binary_Property/Dash.js":408,"./Binary_Property/Default_Ignorable_Code_Point.js":409,"./Binary_Property/Deprecated.js":410,"./Binary_Property/Diacritic.js":411,"./Binary_Property/Emoji.js":412,"./Binary_Property/Emoji_Component.js":413,"./Binary_Property/Emoji_Modifier.js":414,"./Binary_Property/Emoji_Modifier_Base.js":415,"./Binary_Property/Emoji_Presentation.js":416,"./Binary_Property/Extended_Pictographic.js":417,"./Binary_Property/Extender.js":418,"./Binary_Property/Grapheme_Base.js":419,"./Binary_Property/Grapheme_Extend.js":420,"./Binary_Property/Hex_Digit.js":421,"./Binary_Property/IDS_Binary_Operator.js":422,"./Binary_Property/IDS_Trinary_Operator.js":423,"./Binary_Property/ID_Continue.js":424,"./Binary_Property/ID_Start.js":425,"./Binary_Property/Ideographic.js":426,"./Binary_Property/Join_Control.js":427,"./Binary_Property/Logical_Order_Exception.js":428,"./Binary_Property/Lowercase.js":429,"./Binary_Property/Math.js":430,"./Binary_Property/Noncharacter_Code_Point.js":431,"./Binary_Property/Pattern_Syntax.js":432,"./Binary_Property/Pattern_White_Space.js":433,"./Binary_Property/Quotation_Mark.js":434,"./Binary_Property/Radical.js":435,"./Binary_Property/Regional_Indicator.js":436,"./Binary_Property/Sentence_Terminal.js":437,"./Binary_Property/Soft_Dotted.js":438,"./Binary_Property/Terminal_Punctuation.js":439,"./Binary_Property/Unified_Ideograph.js":440,"./Binary_Property/Uppercase.js":441,"./Binary_Property/Variation_Selector.js":442,"./Binary_Property/White_Space.js":443,"./Binary_Property/XID_Continue.js":444,"./Binary_Property/XID_Start.js":445,"./General_Category/Cased_Letter.js":446,"./General_Category/Close_Punctuation.js":447,"./General_Category/Connector_Punctuation.js":448,"./General_Category/Control.js":449,"./General_Category/Currency_Symbol.js":450,"./General_Category/Dash_Punctuation.js":451,"./General_Category/Decimal_Number.js":452,"./General_Category/Enclosing_Mark.js":453,"./General_Category/Final_Punctuation.js":454,"./General_Category/Format.js":455,"./General_Category/Initial_Punctuation.js":456,"./General_Category/Letter.js":457,"./General_Category/Letter_Number.js":458,"./General_Category/Line_Separator.js":459,"./General_Category/Lowercase_Letter.js":460,"./General_Category/Mark.js":461,"./General_Category/Math_Symbol.js":462,"./General_Category/Modifier_Letter.js":463,"./General_Category/Modifier_Symbol.js":464,"./General_Category/Nonspacing_Mark.js":465,"./General_Category/Number.js":466,"./General_Category/Open_Punctuation.js":467,"./General_Category/Other.js":468,"./General_Category/Other_Letter.js":469,"./General_Category/Other_Number.js":470,"./General_Category/Other_Punctuation.js":471,"./General_Category/Other_Symbol.js":472,"./General_Category/Paragraph_Separator.js":473,"./General_Category/Private_Use.js":474,"./General_Category/Punctuation.js":475,"./General_Category/Separator.js":476,"./General_Category/Space_Separator.js":477,"./General_Category/Spacing_Mark.js":478,"./General_Category/Surrogate.js":479,"./General_Category/Symbol.js":480,"./General_Category/Titlecase_Letter.js":481,"./General_Category/Unassigned.js":482,"./General_Category/Uppercase_Letter.js":483,"./Script/Adlam.js":484,"./Script/Ahom.js":485,"./Script/Anatolian_Hieroglyphs.js":486,"./Script/Arabic.js":487,"./Script/Armenian.js":488,"./Script/Avestan.js":489,"./Script/Balinese.js":490,"./Script/Bamum.js":491,"./Script/Bassa_Vah.js":492,"./Script/Batak.js":493,"./Script/Bengali.js":494,"./Script/Bhaiksuki.js":495,"./Script/Bopomofo.js":496,"./Script/Brahmi.js":497,"./Script/Braille.js":498,"./Script/Buginese.js":499,"./Script/Buhid.js":500,"./Script/Canadian_Aboriginal.js":501,"./Script/Carian.js":502,"./Script/Caucasian_Albanian.js":503,"./Script/Chakma.js":504,"./Script/Cham.js":505,"./Script/Cherokee.js":506,"./Script/Common.js":507,"./Script/Coptic.js":508,"./Script/Cuneiform.js":509,"./Script/Cypriot.js":510,"./Script/Cyrillic.js":511,"./Script/Deseret.js":512,"./Script/Devanagari.js":513,"./Script/Dogra.js":514,"./Script/Duployan.js":515,"./Script/Egyptian_Hieroglyphs.js":516,"./Script/Elbasan.js":517,"./Script/Elymaic.js":518,"./Script/Ethiopic.js":519,"./Script/Georgian.js":520,"./Script/Glagolitic.js":521,"./Script/Gothic.js":522,"./Script/Grantha.js":523,"./Script/Greek.js":524,"./Script/Gujarati.js":525,"./Script/Gunjala_Gondi.js":526,"./Script/Gurmukhi.js":527,"./Script/Han.js":528,"./Script/Hangul.js":529,"./Script/Hanifi_Rohingya.js":530,"./Script/Hanunoo.js":531,"./Script/Hatran.js":532,"./Script/Hebrew.js":533,"./Script/Hiragana.js":534,"./Script/Imperial_Aramaic.js":535,"./Script/Inherited.js":536,"./Script/Inscriptional_Pahlavi.js":537,"./Script/Inscriptional_Parthian.js":538,"./Script/Javanese.js":539,"./Script/Kaithi.js":540,"./Script/Kannada.js":541,"./Script/Katakana.js":542,"./Script/Kayah_Li.js":543,"./Script/Kharoshthi.js":544,"./Script/Khmer.js":545,"./Script/Khojki.js":546,"./Script/Khudawadi.js":547,"./Script/Lao.js":548,"./Script/Latin.js":549,"./Script/Lepcha.js":550,"./Script/Limbu.js":551,"./Script/Linear_A.js":552,"./Script/Linear_B.js":553,"./Script/Lisu.js":554,"./Script/Lycian.js":555,"./Script/Lydian.js":556,"./Script/Mahajani.js":557,"./Script/Makasar.js":558,"./Script/Malayalam.js":559,"./Script/Mandaic.js":560,"./Script/Manichaean.js":561,"./Script/Marchen.js":562,"./Script/Masaram_Gondi.js":563,"./Script/Medefaidrin.js":564,"./Script/Meetei_Mayek.js":565,"./Script/Mende_Kikakui.js":566,"./Script/Meroitic_Cursive.js":567,"./Script/Meroitic_Hieroglyphs.js":568,"./Script/Miao.js":569,"./Script/Modi.js":570,"./Script/Mongolian.js":571,"./Script/Mro.js":572,"./Script/Multani.js":573,"./Script/Myanmar.js":574,"./Script/Nabataean.js":575,"./Script/Nandinagari.js":576,"./Script/New_Tai_Lue.js":577,"./Script/Newa.js":578,"./Script/Nko.js":579,"./Script/Nushu.js":580,"./Script/Nyiakeng_Puachue_Hmong.js":581,"./Script/Ogham.js":582,"./Script/Ol_Chiki.js":583,"./Script/Old_Hungarian.js":584,"./Script/Old_Italic.js":585,"./Script/Old_North_Arabian.js":586,"./Script/Old_Permic.js":587,"./Script/Old_Persian.js":588,"./Script/Old_Sogdian.js":589,"./Script/Old_South_Arabian.js":590,"./Script/Old_Turkic.js":591,"./Script/Oriya.js":592,"./Script/Osage.js":593,"./Script/Osmanya.js":594,"./Script/Pahawh_Hmong.js":595,"./Script/Palmyrene.js":596,"./Script/Pau_Cin_Hau.js":597,"./Script/Phags_Pa.js":598,"./Script/Phoenician.js":599,"./Script/Psalter_Pahlavi.js":600,"./Script/Rejang.js":601,"./Script/Runic.js":602,"./Script/Samaritan.js":603,"./Script/Saurashtra.js":604,"./Script/Sharada.js":605,"./Script/Shavian.js":606,"./Script/Siddham.js":607,"./Script/SignWriting.js":608,"./Script/Sinhala.js":609,"./Script/Sogdian.js":610,"./Script/Sora_Sompeng.js":611,"./Script/Soyombo.js":612,"./Script/Sundanese.js":613,"./Script/Syloti_Nagri.js":614,"./Script/Syriac.js":615,"./Script/Tagalog.js":616,"./Script/Tagbanwa.js":617,"./Script/Tai_Le.js":618,"./Script/Tai_Tham.js":619,"./Script/Tai_Viet.js":620,"./Script/Takri.js":621,"./Script/Tamil.js":622,"./Script/Tangut.js":623,"./Script/Telugu.js":624,"./Script/Thaana.js":625,"./Script/Thai.js":626,"./Script/Tibetan.js":627,"./Script/Tifinagh.js":628,"./Script/Tirhuta.js":629,"./Script/Ugaritic.js":630,"./Script/Vai.js":631,"./Script/Wancho.js":632,"./Script/Warang_Citi.js":633,"./Script/Yi.js":634,"./Script/Zanabazar_Square.js":635,"./Script_Extensions/Adlam.js":636,"./Script_Extensions/Ahom.js":637,"./Script_Extensions/Anatolian_Hieroglyphs.js":638,"./Script_Extensions/Arabic.js":639,"./Script_Extensions/Armenian.js":640,"./Script_Extensions/Avestan.js":641,"./Script_Extensions/Balinese.js":642,"./Script_Extensions/Bamum.js":643,"./Script_Extensions/Bassa_Vah.js":644,"./Script_Extensions/Batak.js":645,"./Script_Extensions/Bengali.js":646,"./Script_Extensions/Bhaiksuki.js":647,"./Script_Extensions/Bopomofo.js":648,"./Script_Extensions/Brahmi.js":649,"./Script_Extensions/Braille.js":650,"./Script_Extensions/Buginese.js":651,"./Script_Extensions/Buhid.js":652,"./Script_Extensions/Canadian_Aboriginal.js":653,"./Script_Extensions/Carian.js":654,"./Script_Extensions/Caucasian_Albanian.js":655,"./Script_Extensions/Chakma.js":656,"./Script_Extensions/Cham.js":657,"./Script_Extensions/Cherokee.js":658,"./Script_Extensions/Common.js":659,"./Script_Extensions/Coptic.js":660,"./Script_Extensions/Cuneiform.js":661,"./Script_Extensions/Cypriot.js":662,"./Script_Extensions/Cyrillic.js":663,"./Script_Extensions/Deseret.js":664,"./Script_Extensions/Devanagari.js":665,"./Script_Extensions/Dogra.js":666,"./Script_Extensions/Duployan.js":667,"./Script_Extensions/Egyptian_Hieroglyphs.js":668,"./Script_Extensions/Elbasan.js":669,"./Script_Extensions/Elymaic.js":670,"./Script_Extensions/Ethiopic.js":671,"./Script_Extensions/Georgian.js":672,"./Script_Extensions/Glagolitic.js":673,"./Script_Extensions/Gothic.js":674,"./Script_Extensions/Grantha.js":675,"./Script_Extensions/Greek.js":676,"./Script_Extensions/Gujarati.js":677,"./Script_Extensions/Gunjala_Gondi.js":678,"./Script_Extensions/Gurmukhi.js":679,"./Script_Extensions/Han.js":680,"./Script_Extensions/Hangul.js":681,"./Script_Extensions/Hanifi_Rohingya.js":682,"./Script_Extensions/Hanunoo.js":683,"./Script_Extensions/Hatran.js":684,"./Script_Extensions/Hebrew.js":685,"./Script_Extensions/Hiragana.js":686,"./Script_Extensions/Imperial_Aramaic.js":687,"./Script_Extensions/Inherited.js":688,"./Script_Extensions/Inscriptional_Pahlavi.js":689,"./Script_Extensions/Inscriptional_Parthian.js":690,"./Script_Extensions/Javanese.js":691,"./Script_Extensions/Kaithi.js":692,"./Script_Extensions/Kannada.js":693,"./Script_Extensions/Katakana.js":694,"./Script_Extensions/Kayah_Li.js":695,"./Script_Extensions/Kharoshthi.js":696,"./Script_Extensions/Khmer.js":697,"./Script_Extensions/Khojki.js":698,"./Script_Extensions/Khudawadi.js":699,"./Script_Extensions/Lao.js":700,"./Script_Extensions/Latin.js":701,"./Script_Extensions/Lepcha.js":702,"./Script_Extensions/Limbu.js":703,"./Script_Extensions/Linear_A.js":704,"./Script_Extensions/Linear_B.js":705,"./Script_Extensions/Lisu.js":706,"./Script_Extensions/Lycian.js":707,"./Script_Extensions/Lydian.js":708,"./Script_Extensions/Mahajani.js":709,"./Script_Extensions/Makasar.js":710,"./Script_Extensions/Malayalam.js":711,"./Script_Extensions/Mandaic.js":712,"./Script_Extensions/Manichaean.js":713,"./Script_Extensions/Marchen.js":714,"./Script_Extensions/Masaram_Gondi.js":715,"./Script_Extensions/Medefaidrin.js":716,"./Script_Extensions/Meetei_Mayek.js":717,"./Script_Extensions/Mende_Kikakui.js":718,"./Script_Extensions/Meroitic_Cursive.js":719,"./Script_Extensions/Meroitic_Hieroglyphs.js":720,"./Script_Extensions/Miao.js":721,"./Script_Extensions/Modi.js":722,"./Script_Extensions/Mongolian.js":723,"./Script_Extensions/Mro.js":724,"./Script_Extensions/Multani.js":725,"./Script_Extensions/Myanmar.js":726,"./Script_Extensions/Nabataean.js":727,"./Script_Extensions/Nandinagari.js":728,"./Script_Extensions/New_Tai_Lue.js":729,"./Script_Extensions/Newa.js":730,"./Script_Extensions/Nko.js":731,"./Script_Extensions/Nushu.js":732,"./Script_Extensions/Nyiakeng_Puachue_Hmong.js":733,"./Script_Extensions/Ogham.js":734,"./Script_Extensions/Ol_Chiki.js":735,"./Script_Extensions/Old_Hungarian.js":736,"./Script_Extensions/Old_Italic.js":737,"./Script_Extensions/Old_North_Arabian.js":738,"./Script_Extensions/Old_Permic.js":739,"./Script_Extensions/Old_Persian.js":740,"./Script_Extensions/Old_Sogdian.js":741,"./Script_Extensions/Old_South_Arabian.js":742,"./Script_Extensions/Old_Turkic.js":743,"./Script_Extensions/Oriya.js":744,"./Script_Extensions/Osage.js":745,"./Script_Extensions/Osmanya.js":746,"./Script_Extensions/Pahawh_Hmong.js":747,"./Script_Extensions/Palmyrene.js":748,"./Script_Extensions/Pau_Cin_Hau.js":749,"./Script_Extensions/Phags_Pa.js":750,"./Script_Extensions/Phoenician.js":751,"./Script_Extensions/Psalter_Pahlavi.js":752,"./Script_Extensions/Rejang.js":753,"./Script_Extensions/Runic.js":754,"./Script_Extensions/Samaritan.js":755,"./Script_Extensions/Saurashtra.js":756,"./Script_Extensions/Sharada.js":757,"./Script_Extensions/Shavian.js":758,"./Script_Extensions/Siddham.js":759,"./Script_Extensions/SignWriting.js":760,"./Script_Extensions/Sinhala.js":761,"./Script_Extensions/Sogdian.js":762,"./Script_Extensions/Sora_Sompeng.js":763,"./Script_Extensions/Soyombo.js":764,"./Script_Extensions/Sundanese.js":765,"./Script_Extensions/Syloti_Nagri.js":766,"./Script_Extensions/Syriac.js":767,"./Script_Extensions/Tagalog.js":768,"./Script_Extensions/Tagbanwa.js":769,"./Script_Extensions/Tai_Le.js":770,"./Script_Extensions/Tai_Tham.js":771,"./Script_Extensions/Tai_Viet.js":772,"./Script_Extensions/Takri.js":773,"./Script_Extensions/Tamil.js":774,"./Script_Extensions/Tangut.js":775,"./Script_Extensions/Telugu.js":776,"./Script_Extensions/Thaana.js":777,"./Script_Extensions/Thai.js":778,"./Script_Extensions/Tibetan.js":779,"./Script_Extensions/Tifinagh.js":780,"./Script_Extensions/Tirhuta.js":781,"./Script_Extensions/Ugaritic.js":782,"./Script_Extensions/Vai.js":783,"./Script_Extensions/Wancho.js":784,"./Script_Extensions/Warang_Citi.js":785,"./Script_Extensions/Yi.js":786,"./Script_Extensions/Zanabazar_Square.js":787,"./index.js":788,"./unicode-version.js":789};function o(e){var t=i(e);return n(t)}function i(e){if(!n.o(a,e)){var t=new Error("Cannot find module '"+e+"'");throw t.code="MODULE_NOT_FOUND",t}return a[e]}o.keys=function(){return Object.keys(a)},o.resolve=i,e.exports=o,o.id=392},42:function(e,t,n){"use strict";var a=n(0),o=n.n(a),i=n(4),r=n.n(i),l=function(e){return r()(" ",{"uk-margin":e.margin},{"uk-margin-top":e.marginTop},{"uk-margin-bottom":e.marginBottom},{"uk-margin-left":e.marginLeft},{"uk-margin-right":e.marginRight},{"uk-margin-small":e.marginSmall},{"uk-margin-small-top":e.marginTopSmall},{"uk-margin-small-bottom":e.marginBottomSmall},{"uk-margin-small-left":e.marginLeftSmall},{"uk-margin-small-right":e.marginRightSmall},{"uk-margin-medium":e.marginMedium},{"uk-margin-medium-top":e.marginTopMedium},{"uk-margin-medium-bottom":e.marginBottomMedium},{"uk-margin-medium-left":e.marginLeftMedium},{"uk-margin-medium-right":e.marginRightMedium},{"uk-margin-large":e.marginLarge},{"uk-margin-large-top":e.marginTopLarge},{"uk-margin-large-bottom":e.marginBottomLarge},{"uk-margin-large-left":e.marginLeftLarge},{"uk-margin-large-right":e.marginRightLarge},{"uk-margin-xlarge":e.marginXLarge},{"uk-margin-xlarge-top":e.marginTopXLarge},{"uk-margin-xlarge-bottom":e.marginBottomXLarge},{"uk-margin-xlarge-left":e.marginLeftXLarge},{"uk-margin-xlarge-right":e.marginRightXLarge},{"uk-margin-remove":e.marginRemove},{"uk-margin-remove-top":e.marginRemoveTop},{"uk-margin-remove-bottom":e.marginRemoveBottom},{"uk-margin-remove-left":e.marginRemoveLeft},{"uk-margin-remove-right":e.marginRemoveRight},{"uk-margin-remove-vertical":e.marginRemoveVertical},{"uk-margin-remove-adjacent":e.marginRemoveAdjacent},{"uk-margin-remove-first-child":e.marginRemoveFirstChild},{"uk-margin-remove-last-child":e.marginRemoveLastChild},{"uk-margin-remove-left@s":e.marginRemoveLeftSmall},{"uk-margin-remove-right@s":e.marginRemoveRightSmall},{"uk-margin-remove-left@m":e.marginRemoveLeftMedium},{"uk-margin-remove-right@m":e.marginRemoveRightMedium},{"uk-margin-remove-left@l":e.marginRemoveLeftLarge},{"uk-margin-remove-right@l":e.marginRemoveRightLarge},{"uk-margin-remove-left@xl":e.marginRemoveLeftXLarge},{"uk-margin-remove-right@xl":e.marginRemoveRightXLarge},{"uk-margin-auto":e.marginAuto},{"uk-margin-auto-top":e.marginAutoTop},{"uk-margin-auto-bottom":e.marginAutoBottom},{"uk-margin-auto-left":e.marginAutoLeft},{"uk-margin-auto-right":e.marginAutoRight},{"uk-margin-auto-vertical":e.marginAutoVertical},{"uk-margin-auto@s":e.marginAutoSmall},{"uk-margin-auto-top@s":e.marginAutoTopSmall},{"uk-margin-auto-bottom@s":e.marginAutoBottomSmall},{"uk-margin-auto-left@s":e.marginAutoLeftSmall},{"uk-margin-auto-right@s":e.marginAutoRightSmall},{"uk-margin-auto-vertical@s":e.marginAutoVerticalSmall},{"uk-margin-auto@m":e.marginAutoMedium},{"uk-margin-auto-top@m":e.marginAutoTopMedium},{"uk-margin-auto-bottom@m":e.marginAutoBottomMedium},{"uk-margin-auto-left@m":e.marginAutoLeftMedium},{"uk-margin-auto-right@m":e.marginAutoRightMedium},{"uk-margin-auto-vertical@m":e.marginAutoVerticalMedium},{"uk-margin-auto@l":e.marginAutoLarge},{"uk-margin-auto-top@l":e.marginAutoTopLarge},{"uk-margin-auto-bottom@l":e.marginAutoBottomLarge},{"uk-margin-auto-left@l":e.marginAutoLeftLarge},{"uk-margin-auto-right@l":e.marginAutoRightLarge},{"uk-margin-auto-vertical@l":e.marginAutoVerticalLarge},{"uk-margin-auto@xl":e.marginAutoXLarge},{"uk-margin-auto-top@xl":e.marginAutoTopXLarge},{"uk-margin-auto-bottom@xl":e.marginAutoBottomXLarge},{"uk-margin-auto-left@xl":e.marginAutoLeftXLarge},{"uk-margin-auto-right@xl":e.marginAutoRightXLarge},{"uk-margin-auto-vertical@xl":e.marginAutoVerticalXLarge}," ")};l.propTypes={margin:o.a.bool,marginTop:o.a.bool,marginBottom:o.a.bool,marginLeft:o.a.bool,marginRight:o.a.bool,marginSmall:o.a.bool,marginTopSmall:o.a.bool,marginBottomSmall:o.a.bool,marginLeftSmall:o.a.bool,marginRightSmall:o.a.bool,marginMedium:o.a.bool,marginTopMedium:o.a.bool,marginBottomMedium:o.a.bool,marginLeftMedium:o.a.bool,marginRightMedium:o.a.bool,marginLarge:o.a.bool,marginTopLarge:o.a.bool,marginBottomLarge:o.a.bool,marginLeftLarge:o.a.bool,marginRightLarge:o.a.bool,marginXLarge:o.a.bool,marginTopXLarge:o.a.bool,marginBottomXLarge:o.a.bool,marginLeftXLarge:o.a.bool,marginRightXLarge:o.a.bool,marginRemove:o.a.bool,marginRemoveTop:o.a.bool,marginRemoveBottom:o.a.bool,marginRemoveLeft:o.a.bool,marginRemoveRight:o.a.bool,marginRemoveVertical:o.a.bool,marginRemoveAdjacent:o.a.bool,marginRemoveFirstChild:o.a.bool,marginRemoveLastChild:o.a.bool,marginRemoveLeftSmall:o.a.bool,marginRemoveRightSmall:o.a.bool,marginRemoveLeftMedium:o.a.bool,marginRemoveRightMedium:o.a.bool,marginRemoveLeftLarge:o.a.bool,marginRemoveRightLarge:o.a.bool,marginRemoveLeftXLarge:o.a.bool,marginRemoveRightXLarge:o.a.bool,marginAuto:o.a.bool,marginAutoTop:o.a.bool,marginAutoBottom:o.a.bool,marginAutoLeft:o.a.bool,marginAutoRight:o.a.bool,marginAutoVertical:o.a.bool,marginAutoSmall:o.a.bool,marginAutoTopSmall:o.a.bool,marginAutoBottomSmall:o.a.bool,marginAutoLeftSmall:o.a.bool,marginAutoRightSmall:o.a.bool,marginAutoVerticalSmall:o.a.bool,marginAutoMedium:o.a.bool,marginAutoTopMedium:o.a.bool,marginAutoBottomMedium:o.a.bool,marginAutoLeftMedium:o.a.bool,marginAutoRightMedium:o.a.bool,marginAutoVerticalMedium:o.a.bool,marginAutoLarge:o.a.bool,marginAutoTopLarge:o.a.bool,marginAutoBottomLarge:o.a.bool,marginAutoLeftLarge:o.a.bool,marginAutoRightLarge:o.a.bool,marginAutoVerticalLarge:o.a.bool,marginAutoXLarge:o.a.bool,marginAutoTopXLarge:o.a.bool,marginAutoBottomXLarge:o.a.bool,marginAutoLeftXLarge:o.a.bool,marginAutoRightXLarge:o.a.bool,marginAutoVerticalXLarge:o.a.bool},l.defaultProps={margin:!1,marginTop:!1,marginBottom:!1,marginLeft:!1,marginRight:!1,marginSmall:!1,marginTopSmall:!1,marginBottomSmall:!1,marginLeftSmall:!1,marginRightSmall:!1,marginMedium:!1,marginMediumTop:!1,marginMediumBottom:!1,marginMediumLeft:!1,marginMediumRight:!1,marginLarge:!1,marginTopLarge:!1,marginBottomLarge:!1,marginLeftLarge:!1,marginRightLarge:!1,marginXLarge:!1,marginTopXLarge:!1,marginBottomXLarge:!1,marginLeftXLarge:!1,marginRightXLarge:!1,marginRemove:!1,marginRemoveTop:!1,marginRemoveBottom:!1,marginRemoveLeft:!1,marginRemoveRight:!1,marginRemoveVertical:!1,marginRemoveAdjacent:!1,marginRemoveFirstChild:!1,marginRemoveLastChild:!1,marginRemoveLeftSmall:!1,marginRemoveRightSmall:!1,marginRemoveLeftMedium:!1,marginRemoveRightMedium:!1,marginRemoveLeftLarge:!1,marginRemoveRightLarge:!1,marginRemoveLeftXLarge:!1,marginRemoveRightXLarge:!1,marginAuto:!1,marginAutoTop:!1,marginAutoBottom:!1,marginAutoLeft:!1,marginAutoRight:!1,marginAutoVertical:!1,marginAutoSmall:!1,marginAutoTopSmall:!1,marginAutoBottomSmall:!1,marginAutoLeftSmall:!1,marginAutoRightSmall:!1,marginAutoVerticalSmall:!1,marginAutoMedium:!1,marginAutoTopMedium:!1,marginAutoBottomMedium:!1,marginAutoLeftMedium:!1,marginAutoRightMedium:!1,marginAutoVerticalMedium:!1,marginAutoLarge:!1,marginAutoTopLarge:!1,marginAutoBottomLarge:!1,marginAutoLeftLarge:!1,marginAutoRightLarge:!1,marginAutoVerticalLarge:!1,marginAutoXLarge:!1,marginAutoTopXLarge:!1,marginAutoBottomXLarge:!1,marginAutoLeftXLarge:!1,marginAutoRightXLarge:!1,marginAutoVerticalXLarge:!1},t.a=l},52:function(e,t,n){"use strict";var a=n(5),o=n(0),i=n.n(o),r=n(4),l=n.n(r),s=function(e){return l()(" ",Object(a.a)({},"uk-width-".concat(e.width),e.width),Object(a.a)({},"uk-width-small",!0===e.widthSmall),Object(a.a)({},"uk-width-".concat(e.widthSmall,"@s"),"string"==typeof e.widthSmall),Object(a.a)({},"uk-width-medium",!0===e.widthMedium),Object(a.a)({},"uk-width-".concat(e.widthMedium,"@m"),"string"==typeof e.widthMedium),Object(a.a)({},"uk-width-large",!0===e.widthLarge),Object(a.a)({},"uk-width-".concat(e.widthLarge,"@l"),"string"==typeof e.widthLarge),Object(a.a)({},"uk-width-xlarge",!0===e.widthXLarge),Object(a.a)({},"uk-width-".concat(e.widthXLarge,"@xl"),"string"==typeof e.widthXLarge),Object(a.a)({},"uk-width-xxlarge",!0===e.widthXXLarge),Object(a.a)({},"uk-width-auto",e.widthAuto),Object(a.a)({},"uk-width-auto@s",e.widthAutoSmall),Object(a.a)({},"uk-width-auto@m",e.widthAutoMedium),Object(a.a)({},"uk-width-auto@l",e.widthAutoLarge),Object(a.a)({},"uk-width-auto@xl",e.widthAutoXLarge),Object(a.a)({},"uk-width-expand",e.widthExpand),Object(a.a)({},"uk-width-expand@s",e.widthExpandSmall),Object(a.a)({},"uk-width-expand@m",e.widthExpandMedium),Object(a.a)({},"uk-width-expand@l",e.widthExpandLarge),Object(a.a)({},"uk-width-expand@xl",e.widthExpandXLarge),Object(a.a)({},"uk-child-width-".concat(e.childWidth),e.childWidth),Object(a.a)({},"uk-child-width-small",!0===e.childWidthSmall),Object(a.a)({},"uk-child-width-".concat(e.childWidthSmall,"@s"),"string"==typeof e.childWidthSmall),Object(a.a)({},"uk-child-width-medium",!0===e.childWidthMedium),Object(a.a)({},"uk-child-width-".concat(e.childWidthMedium,"@m"),"string"==typeof e.childWidthMedium),Object(a.a)({},"uk-child-width-large",!0===e.childWidthLarge),Object(a.a)({},"uk-child-width-".concat(e.childWidthLarge,"@l"),"string"==typeof e.childWidthLarge),Object(a.a)({},"uk-child-width-xlarge",!0===e.childWidthXLarge),Object(a.a)({},"uk-child-width-".concat(e.childWidthXLarge,"@xl"),"string"==typeof e.childWidthXLarge),Object(a.a)({},"uk-child-width-xxlarge",!0===e.widthXXLarge),Object(a.a)({},"uk-child-width-auto",e.childWidthAuto),Object(a.a)({},"uk-child-width-auto@s",e.childWidthAutoSmall),Object(a.a)({},"uk-child-width-auto@m",e.childWidthAutoMedium),Object(a.a)({},"uk-child-width-auto@l",e.childWidthAutoLarge),Object(a.a)({},"uk-child-width-auto@xl",e.childWidthAutoXLarge),Object(a.a)({},"uk-child-width-expand",e.childWidthExpand),Object(a.a)({},"uk-child-width-expand@s",e.childWidthExpandSmall),Object(a.a)({},"uk-child-width-expand@m",e.childWidthExpandMedium),Object(a.a)({},"uk-child-width-expand@l",e.childWidthExpandLarge),Object(a.a)({},"uk-child-width-expand@xl",e.childWidthExpandXLarge)," ")};s.propTypes={width:i.a.string,widthSmall:i.a.oneOfType([i.a.string,i.a.bool]),widthMedium:i.a.oneOfType([i.a.string,i.a.bool]),widthLarge:i.a.oneOfType([i.a.string,i.a.bool]),widthXLarge:i.a.oneOfType([i.a.string,i.a.bool]),widthXXLarge:i.a.bool,widthAuto:i.a.bool,widthAutoSmall:i.a.bool,widthAutoMedium:i.a.bool,widthAutoLarge:i.a.bool,widthAutoXLarge:i.a.bool,widthExpand:i.a.bool,widthExpandSmall:i.a.bool,widthExpandMedium:i.a.bool,widthExpandLarge:i.a.bool,widthExpandXLarge:i.a.bool,childWidth:i.a.string,childWidthSmall:i.a.string,childWidthMedium:i.a.string,childWidthLarge:i.a.string,childWidthXLarge:i.a.string,childWidthXXLarge:i.a.string,childWidthAuto:i.a.bool,childWidthExpand:i.a.bool},s.defaultProps={width:"",widthSmall:"",widthMedium:"",widthLarge:"",widthXLarge:"",widthXXLarge:"",widthAuto:!1,widthAutoSmall:!1,widthAutoMedium:!1,widthAutoLarge:!1,widthAutoXLarge:!1,widthExpand:!1,widthExpandSmall:!1,widthExpandMedium:!1,widthExpandLarge:!1,widthExpandXLarge:!1,childWidth:"",childWidthSmall:"",childWidthMedium:"",childWidthLarge:"",childWidthXLarge:"",childWidthXXLarge:"",childWidthAuto:!1,childWidthAutoSmall:!1,childWidthAutoMedium:!1,childWidthAutoLarge:!1,childWidthAutoXLarge:!1,childWidthExpand:!1,childWidthExpandSmall:!1,childWidthExpandMedium:!1,childWidthExpandLarge:!1,childWidthExpandXLarge:!1},t.a=s},53:function(e,t,n){"use strict";var a=n(0),o=n.n(a),i=n(4),r=n.n(i),l=function(e){return r()(" ",{"uk-flex":e.flex},{"uk-flex-left":e.flexLeft},{"uk-flex-center":e.flexCenter},{"uk-flex-right":e.flexRight},{"uk-flex-between":e.flexBetween},{"uk-flex-around":e.flexAround},{"uk-flex@s":e.flexSmall},{"uk-flex-left@s":e.flexLeftSmall},{"uk-flex-center@s":e.flexCenterSmall},{"uk-flex-right@s":e.flexRightSmall},{"uk-flex-between@s":e.flexBetweenSmall},{"uk-flex-around@s":e.flexAroundSmall},{"uk-flex@m":e.flexMedium},{"uk-flex-left@m":e.flexLeftMedium},{"uk-flex-center@m":e.flexCenterMedium},{"uk-flex-right@m":e.flexRightMedium},{"uk-flex-between@m":e.flexBetweenMedium},{"uk-flex-around@m":e.flexAroundMedium},{"uk-flex@l":e.flexLarge},{"uk-flex-left@l":e.flexLeftLarge},{"uk-flex-center@l":e.flexCenterLarge},{"uk-flex-right@l":e.flexRightLarge},{"uk-flex-between@l":e.flexBetweenLarge},{"uk-flex-around@l":e.flexAroundLarge},{"uk-flex@xl":e.flexXLarge},{"uk-flex-left@xl":e.flexLeftXLarge},{"uk-flex-center@xl":e.flexCenterXLarge},{"uk-flex-right@xl":e.flexRightXLarge},{"uk-flex-between@xl":e.flexBetweenXLarge},{"uk-flex-around@xl":e.flexAroundXLarge},{"uk-flex-inline":e.flexInline},{"uk-flex-stretch":e.flexStretch},{"uk-flex-top":e.flexTop},{"uk-flex-middle":e.flexMiddle},{"uk-flex-bottom":e.flexBottom},{"uk-flex-row":e.flexRow},{"uk-flex-row-reverse":e.flexRowReverse},{"uk-flex-column":e.flexColumn},{"uk-flex-column-reverse":e.flexColumnReverse},{"uk-flex-wrap":e.flexWrap},{"uk-flex-wrap-reverse":e.flexWrapReverse},{"uk-flex-nowrap":e.flexNoWrap},{"uk-flex-wrap-":e.flexWrapStretch},{"uk-flex-wrap-between":e.flexWrapBetween},{"uk-flex-wrap-around":e.flexWrapAround},{"uk-flex-wrap-top":e.flexWrapTop},{"uk-flex-wrap-middle":e.flexWrapMiddle},{"uk-flex-wrap-bottom":e.flexWrapBottom},{"uk-flex-first":e.flexFirst},{"uk-flex-first@s":e.flexFirstSmall},{"uk-flex-first@m":e.flexFirstMedium},{"uk-flex-first@l":e.flexFirstLarge},{"uk-flex-first@xl":e.flexFirstXLarge},{"uk-flex-last":e.flexLast},{"uk-flex-last@s":e.flexLastSmall},{"uk-flex-last@m":e.flexLastMedium},{"uk-flex-last@l":e.flexLastLarge},{"uk-flex-last@xl":e.flexLastXLarge},{"uk-flex-none":e.flexNone},{"uk-flex-auto":e.flexAuto},{"uk-flex-1":e.flex1}," ")};l.propTypes={flex:o.a.bool,flexLeft:o.a.bool,flexCenter:o.a.bool,flexRight:o.a.bool,flexBetween:o.a.bool,flexAround:o.a.bool,flexSmall:o.a.bool,flexLeftSmall:o.a.bool,flexCenterSmall:o.a.bool,flexRightSmall:o.a.bool,flexBetweenSmall:o.a.bool,flexAroundSmall:o.a.bool,flexMedium:o.a.bool,flexLeftMedium:o.a.bool,flexCenterMedium:o.a.bool,flexRightMedium:o.a.bool,flexBetweenMedium:o.a.bool,flexAroundMedium:o.a.bool,flexLarge:o.a.bool,flexLeftLarge:o.a.bool,flexCenterLarge:o.a.bool,flexRightLarge:o.a.bool,flexBetweenLarge:o.a.bool,flexAroundLarge:o.a.bool,flexXLarge:o.a.bool,flexLeftXLarge:o.a.bool,flexCenterXLarge:o.a.bool,flexRightXLarge:o.a.bool,flexBetweenXLarge:o.a.bool,flexAroundXLarge:o.a.bool,flexInline:o.a.bool,flexStretch:o.a.bool,flexTop:o.a.bool,flexMiddle:o.a.bool,flexBottom:o.a.bool,flexRow:o.a.bool,flexRowReverse:o.a.bool,flexColumn:o.a.bool,flexColumnReverse:o.a.bool,flexWrap:o.a.bool,flexWrapReverse:o.a.bool,flexNoWrap:o.a.bool,flexWrapStretch:o.a.bool,flexWrapBetween:o.a.bool,flexWrapAround:o.a.bool,flexWrapTop:o.a.bool,flexWrapMiddle:o.a.bool,flexWrapBottom:o.a.bool,flexFirst:o.a.bool,flexFirstSmall:o.a.bool,flexFirstMedium:o.a.bool,flexFirstLarge:o.a.bool,flexFirstXLarge:o.a.bool,flexLast:o.a.bool,flexLastSmall:o.a.bool,flexLastMedium:o.a.bool,flexLastLarge:o.a.bool,flexLastXLarge:o.a.bool,flexNone:o.a.bool,flexAuto:o.a.bool,flex1:o.a.bool},l.defaultProps={flex:!1,flexLeft:!1,flexCenter:!1,flexRight:!1,flexBetween:!1,flexAround:!1,flexSmall:!1,flexLeftSmall:!1,flexCenterSmall:!1,flexRightSmall:!1,flexBetweenSmall:!1,flexAroundSmall:!1,flexMedium:!1,flexLeftMedium:!1,flexCenterMedium:!1,flexRightMedium:!1,flexBetweenMedium:!1,flexAroundMedium:!1,flexLarge:!1,flexLeftLarge:!1,flexCenterLarge:!1,flexRightLarge:!1,flexBetweenLarge:!1,flexAroundLarge:!1,flexXLarge:!1,flexLeftXLarge:!1,flexCenterXLarge:!1,flexRightXLarge:!1,flexBetweenXLarge:!1,flexAroundXLarge:!1,flexInline:!1,flexStretch:!1,flexTop:!1,flexMiddle:!1,flexBottom:!1,flexRow:!1,flexRowReverse:!1,flexColumn:!1,flexColumnReverse:!1,flexWrap:!1,flexWrapReverse:!1,flexNoWrap:!1,flexWrapStretch:!1,flexWrapBetween:!1,flexWrapAround:!1,flexWrapTop:!1,flexWrapMiddle:!1,flexWrapBottom:!1,flexFirst:!1,flexFirstSmall:!1,flexFirstMedium:!1,flexFirstLarge:!1,flexFirstXLarge:!1,flexLast:!1,flexLastSmall:!1,flexLastMedium:!1,flexLastLarge:!1,flexLastXLarge:!1,flexNone:!1,flexAuto:!1,flex1:!1},t.a=l},54:function(e,t,n){"use strict";var a=n(0),o=n.n(a),i=n(4),r=n.n(i),l=function(e){return r()(" ",{"uk-text-left":e.textLeft},{"uk-text-right":e.textRight},{"uk-text-center":e.textCenter},{"uk-text-justify":e.textJustify}," ")};l.propTypes={textLeft:o.a.bool,textRight:o.a.bool,textCenter:o.a.bool,textJustify:o.a.bool},l.defaultProps={textLeft:!1,textRight:!1,textCenter:!1,textJustify:!1},t.a=l},809:function(e,t,n){e.exports={description:"",displayName:"Alert",methods:[],props:[{type:{name:"node"},required:!1,description:"Pass children elements to this element",defaultValue:{value:"undefined",computed:!0},tags:{},name:"children"}],doclets:{},examples:n(810)}},810:function(e,t,n){var a={"../":n(25),react:n(2),"./Alert.js":n(96)},o=n(9).default.bind(null,a),i=n(10).default.bind(null,"const React$0 = require('react');\nconst React = React$0['React'] || (React$0.default || React$0);\nconst Alert$0 = require('./Alert.js');\nconst Alert = Alert$0['Alert'] || (Alert$0.default || Alert$0);",o);e.exports=[{type:"markdown",content:"<https://getuikit.com/docs/alert>\n\n### Display success, warning and error messages.\n\n### Usage\n\nA basic Alert component."},{type:"code",content:"import { Alert } from '../';\n\n    <Alert>Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua.</Alert>",settings:{},evalInContext:i},{type:"markdown",content:'### Close Button\n\nTo create a close button and enable its functionality, add the close props to a <a href="#/Button">Button</a> component inside the alert box.'},{type:"code",content:"import { Alert } from '../';\n\n<React.Fragment>\n    <Alert>Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua.</Alert>\n</React.Fragment>",settings:{},evalInContext:i},{type:"markdown",content:"| PROP | DESCRIPTION                                                     |\n| ---- | --------------------------------------------------------------- |\n| body | Add this prop to a Card component to define the Card component. |"}]},811:function(e,t,n){e.exports={description:"",displayName:"Align",methods:[],doclets:{},examples:n(812)}},812:function(e,t,n){var a={"../":n(25),react:n(2),"./Align.js":n(201)},o=n(9).default.bind(null,a),i=n(10).default.bind(null,"const React$0 = require('react');\nconst React = React$0['React'] || (React$0.default || React$0);\nconst Align$0 = require('./Align.js');\nconst Align = Align$0['Align'] || (Align$0.default || Align$0);",o);e.exports=[{type:"markdown",content:'<https://getuikit.com/docs/align>\n\n#### Control the alignment of inline elements depending on the viewport size.\n\n### Usage\n\nTo align images or other elements with spacing between the text and the element, add one of these classes.\n\n| PROPS                                         | DESCRIPTION                                                         |\n| --------------------------------------------- | ------------------------------------------------------------------- |\n| <span style="color:salmon">alignLeft</span>   | Floats the element to the left and creates right and bottom margin. |\n| <span style="color:salmon">alignCenter</span> | Floats the element to the right and creates left and bottom margin. |\n| <span style="color:salmon">alignRight</span>  | Centers the element and creates bottom margin.                      |'},{type:"code",content:'import { Image, Panel } from \'../\';\n\n<React.Fragment>\n    <Panel>\n        <Image alignLeft marginRemoveAdjacent width="225" height="150" src="https://getuikit.com/docs/images/light.jpg" alt="Image" />\n        <p>Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat.</p>\n        <p>Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum. Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua.</p>\n    </Panel>\n</React.Fragment>',settings:{},evalInContext:i},{type:"markdown",content:'### Responsive Align\n\nReact-uikit provides a number of responsive alignment props.\nBasically, they work just like the usual alignment props, except that they have suffixes that represent the breakpoint from which they come to effect.\n\n| PROPS                                                                                                     | DESCRIPTION                                                                        |\n| --------------------------------------------------------------------------------------------------------- | ---------------------------------------------------------------------------------- |\n| <span style="color:salmon">alignLeftSmall</span><br /><span style="color:salmon">alignRightSmall</span>   | Only affects device widths of <span style="color:salmon">640px</span> and higher.  |\n| <span style="color:salmon">alignLeftMedium</span><br /><span style="color:salmon">alignRightMedium</span> | Only affects device widths of <span style="color:salmon">960px</span> and higher.  |\n| <span style="color:salmon">alignLeftLarge</span><br /><span style="color:salmon">alignRightLarge</span>   | Only affects device widths of <span style="color:salmon">1200px</span> and higher. |\n| <span style="color:salmon">alignLeftXLarge</span><br /><span style="color:salmon">alignRightXLarge</span> | Only affects device widths of <span style="color:salmon">1600px</span> and higher. |'},{type:"code",content:'import { Image, Panel } from \'../\';\n\n<React.Fragment>\n    <Panel>\n        <Image alignCenter alignRightMedium marginRemoveAdjacent width="225" height="150" src="https://getuikit.com/docs/images/light.jpg" alt="Image" />\n        <p>Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat.</p>\n        <p>Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum. Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua.</p>\n    </Panel>\n</React.Fragment>',settings:{},evalInContext:i}]},813:function(e,t,n){e.exports={description:"",displayName:"Animation",methods:[],doclets:{},examples:n(814)}},814:function(e,t,n){var a={"../":n(25),react:n(2),"./Animation.js":n(202)},o=n(9).default.bind(null,a),i=n(10).default.bind(null,"const React$0 = require('react');\nconst React = React$0['React'] || (React$0.default || React$0);\nconst Animation$0 = require('./Animation.js');\nconst Animation = Animation$0['Animation'] || (Animation$0.default || Animation$0);",o);e.exports=[{type:"markdown",content:'<https://getuikit.com/docs/animation>\n\n#### A collection of smooth animations to use within your page.\n\n### Usage\n\nAdd one of the animation props to any element.\nThe animation is shown when the prop is added, so usually immediately on page load.\nTo show the animation at another point, for example when the element enters the viewport, you would add the class using JavaScript \u2014 with the Scrollspy component for instance.\nThis is what happens in many of react-uikit\'s components that make use of animations.\nAll animations themselves are implemented with CSS, so they do not require JavaScript to play.\n\n| PROPS                                                                                                                                                                                                                                                        | DESCRIPTION                                                                                                                            |\n| ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------ | -------------------------------------------------------------------------------------------------------------------------------------- |\n| <span style="color:salmon">animationToggle</span>                                                                                                                                                                                                            | To toggle an animation on hover or focus, add the animationToggle prop to a parent element.                                            |\n| <span style="color:salmon">animationFade</span>                                                                                                                                                                                                              | The element fades in.                                                                                                                  |\n| <span style="color:salmon">animationScaleUp</span><br /><span style="color:salmon">animationScaleDown</span>                                                                                                                                                 | The element fades in and scales up or down.                                                                                            |\n| <span style="color:salmon">animationSlideTop</span><br /><span style="color:salmon">animationSlideBottom</span><br /><span style="color:salmon">animationSlideLeft</span><br /><span style="color:salmon">animationSlideRight</span>                         | The element fades and slides in from the top, bottom, left or right by its own height or width.                                        |\n| <span style="color:salmon">animationSlideTopSmall</span><br /><span style="color:salmon">animationSlideBottomSmall</span><br /><span style="color:salmon">animationSlideLeftSmall</span><br /><span style="color:salmon">animationSlideRightSmall</span>     | The element fades and slides in from the top, bottom, left or right with a smaller distance which is specified by a fixed pixel value. |\n| <span style="color:salmon">animationSlideTopMedium</span><br /><span style="color:salmon">animationSlideBottomMedium</span><br /><span style="color:salmon">animationSlideLeftMedium</span><br /><span style="color:salmon">animationSlideRightMedium</span> | The element fades and slides in from the top, bottom, left or right with a medium distance which is specified by a fixed pixel value.  |\n| <span style="color:salmon">animationKenBurns</span>                                                                                                                                                                                                          | The element scales very slowly up without fading in.                                                                                   |\n| <span style="color:salmon">animationShake</span>                                                                                                                                                                                                             | The element shakes.                                                                                                                    |\n| <span style="color:salmon">animationStroke</span>                                                                                                                                                                                                            | The SVG element strokes are drawn.                                                                                                     |\n\n### Size Modifiers\n\nAdd one of the following classes to the container to apply a different max-width.'},{type:"code",content:'import { Card, Grid, Panel } from \'../\';\n\n<React.Fragment>\n    <Grid childWidth="1-2" childWidthSmall="1-4" match>\n        <Panel animationToggle>\n            <Card default body animationFade textCenter>Fade</Card>\n        </Panel>\n        <Panel animationToggle>\n            <Card default body animationScaleUp textCenter>Scale Up</Card>\n        </Panel>\n        <Panel animationToggle>\n            <Card default body animationScaleDown textCenter>Scale Down</Card>\n        </Panel>\n        <Panel animationToggle>\n            <Card default body animationShake textCenter>Shake</Card>\n        </Panel>\n\n        <Panel animationToggle>\n            <Card default body animationSlideLeft textCenter>Left</Card>\n        </Panel>\n        <Panel animationToggle>\n            <Card default body animationSlideTop textCenter>Top</Card>\n        </Panel>\n        <Panel animationToggle>\n            <Card default body animationSlideBottom textCenter>Bottom</Card>\n        </Panel>\n        <Panel animationToggle>\n            <Card default body animationSlideRight textCenter>Right</Card>\n        </Panel>\n\n        <Panel animationToggle>\n            <Card default body animationSlideLeftSmall textCenter>Left Small</Card>\n        </Panel>\n        <Panel animationToggle>\n            <Card default body animationSlideTopSmall textCenter>Top Small</Card>\n        </Panel>\n        <Panel animationToggle>\n            <Card default body animationSlideBottomSmall textCenter>Bottom Small</Card>\n        </Panel>\n        <Panel animationToggle>\n            <Card default body animationSlideRightSmall textCenter>Right Small</Card>\n        </Panel>\n\n        <Panel animationToggle>\n            <Card default body animationSlideLeftMedium textCenter>Left Medium</Card>\n        </Panel>\n        <Panel animationToggle>\n            <Card default body animationSlideTopMedium textCenter>Top Medium</Card>\n        </Panel>\n        <Panel animationToggle>\n            <Card default body animationSlideBottomMedium textCenter>Bottom Medium</Card>\n        </Panel>\n        <Panel animationToggle>\n            <Card default body animationSlideRightMedium textCenter>Right Medium</Card>\n        </Panel>\n    </Grid>\n</React.Fragment>',settings:{},evalInContext:i},{type:"markdown",content:"### Reverse Modifier\n\nBy default, all animations are incoming. To reverse any animation, add the animationReverse prop."},{type:"code",content:'import { Card, Grid, Panel } from \'../\';\n\n<React.Fragment>\n    <Grid childWidth="1-2" childWidthSmall="1-4" match>\n        <Panel animationToggle>\n            <Card default body animationFade animationReverse textCenter>Fade</Card>\n        </Panel>\n        <Panel animationToggle>\n            <Card default body animationScaleUp animationReverse textCenter>Scale Up</Card>\n        </Panel>\n        <Panel animationToggle>\n            <Card default body animationScaleDown animationReverse textCenter>Scale Down</Card>\n        </Panel>\n        <Panel animationToggle>\n            <Card default body animationShake animationReverse textCenter>Shake</Card>\n        </Panel>\n\n        <Panel animationToggle>\n            <Card default body animationSlideLeft animationReverse textCenter>Left</Card>\n        </Panel>\n        <Panel animationToggle>\n            <Card default body animationSlideTop animationReverse textCenter>Top</Card>\n        </Panel>\n        <Panel animationToggle>\n            <Card default body animationSlideBottom animationReverse textCenter>Bottom</Card>\n        </Panel>\n        <Panel animationToggle>\n            <Card default body animationSlideRight animationReverse textCenter>Right</Card>\n        </Panel>\n\n        <Panel animationToggle>\n            <Card default body animationSlideLeftSmall animationReverse textCenter>Left Small</Card>\n        </Panel>\n        <Panel animationToggle>\n            <Card default body animationSlideTopSmall animationReverse textCenter>Top Small</Card>\n        </Panel>\n        <Panel animationToggle>\n            <Card default body animationSlideBottomSmall animationReverse textCenter>Bottom Small</Card>\n        </Panel>\n        <Panel animationToggle>\n            <Card default body animationSlideRightSmall animationReverse textCenter>Right Small</Card>\n        </Panel>\n\n        <Panel animationToggle>\n            <Card default body animationSlideLeftMedium animationReverse textCenter>Left Medium</Card>\n        </Panel>\n        <Panel animationToggle>\n            <Card default body animationSlideTopMedium animationReverse textCenter>Top Medium</Card>\n        </Panel>\n        <Panel animationToggle>\n            <Card default body animationSlideBottomMedium animationReverse textCenter>Bottom Medium</Card>\n        </Panel>\n        <Panel animationToggle>\n            <Card default body animationSlideRightMedium animationReverse textCenter>Right Medium</Card>\n        </Panel>\n    </Grid>\n</React.Fragment>',settings:{},evalInContext:i},{type:"markdown",content:"### Fast Modifier\n\nTo play animations at a faster speed, add the animationFast prop to the element."},{type:"code",content:"import { Card, Panel } from '../';\n\n<React.Fragment>\n    <Panel widthSmall=\"1-3\">\n        <Panel animationToggle>\n            <Card default body animationFast animationFade>Fade</Card>\n        </Panel>\n    </Panel>\n</React.Fragment>",settings:{},evalInContext:i},{type:"markdown",content:"### Origin Modifiers\n\nBy default, scaling animations originate from the center.\nTo modify this behavior, add one of the transformOrigin\\* prop from the Utility component."}]},815:function(e,t,n){e.exports={description:"",displayName:"Background",methods:[],doclets:{},examples:n(816)}},816:function(e,t,n){var a={react:n(2),"./Background.js":n(203)},o=n(9).default.bind(null,a);n(10).default.bind(null,"const React$0 = require('react');\nconst React = React$0['React'] || (React$0.default || React$0);\nconst Background$0 = require('./Background.js');\nconst Background = Background$0['Background'] || (Background$0.default || Background$0);",o),e.exports=[{type:"markdown",content:"<https://getuikit.com/docs/background>"}]},817:function(e,t,n){e.exports={description:"",displayName:"Button",methods:[],props:[{type:{name:"node"},required:!1,description:"Pass children elements to this element",defaultValue:{value:"undefined",computed:!0},tags:{},name:"children"}],doclets:{},examples:n(818)}},818:function(e,t,n){var a={react:n(2),"./Button.js":n(98)},o=n(9).default.bind(null,a);n(10).default.bind(null,"const React$0 = require('react');\nconst React = React$0['React'] || (React$0.default || React$0);\nconst Button$0 = require('./Button.js');\nconst Button = Button$0['Button'] || (Button$0.default || Button$0);",o),e.exports=[{type:"markdown",content:"<https://getuikit.com/docs/button>"}]},819:function(e,t,n){e.exports={description:"",displayName:"Card",methods:[],props:[{type:{name:"bool"},required:!1,description:"Add this props to the card to create padding between the card and its content",defaultValue:{value:"false",computed:!1},tags:{},name:"body"},{type:{name:"bool"},required:!1,description:"Add this prop to create a visually styled box",defaultValue:{value:"false",computed:!1},tags:{},name:"default"},{type:{name:"bool"},required:!1,description:"Add this prop to modify the card and emphasize it with a primary color",defaultValue:{value:"false",computed:!1},tags:{},name:"primary"},{type:{name:"bool"},required:!1,description:"Add this prop to modify the card and give it a secondary background color",defaultValue:{value:"false",computed:!1},tags:{},name:"secondary"},{type:{name:"bool"},required:!1,description:"Creates a hover effect on the card",defaultValue:{value:"false",computed:!1},tags:{},name:"hover"},{type:{name:"node"},required:!1,description:"Pass children elements to this element",defaultValue:{value:"undefined",computed:!0},tags:{},name:"children"}],doclets:{},examples:n(820)}},820:function(e,t,n){var a={react:n(2),"./Card.js":n(103)},o=n(9).default.bind(null,a),i=n(10).default.bind(null,"const React$0 = require('react');\nconst React = React$0['React'] || (React$0.default || React$0);\nconst Card$0 = require('./Card.js');\nconst Card = Card$0['Card'] || (Card$0.default || Card$0);",o);e.exports=[{type:"markdown",content:'<https://getuikit.com/docs/card>\n\n### Usage\n\nThe Card component consists of the card itself, the card body and an optional card title.\nTypically, cards are arranged in grid columns from the Grid component.\n\n| PROP                                   | DESCRIPTION                                                     |\n| -------------------------------------- | --------------------------------------------------------------- |\n| <span style="color:salmon">body</span> | Add this prop to a Card component to define the Card component. |'},{type:"code",content:'<React.Fragment>\n    <Card body default>\n        <Card.Title>Default</Card.Title>\n        <p>Lorem ipsum <a href="#">dolor</a> sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua.</p>\n    </Card>\n</React.Fragment>',settings:{},evalInContext:i},{type:"markdown",content:'### Style modifiers\n\nUIkit includes a number of modifiers that can be used to add a specific style to cards.\n\n| PROP                                        | DESCRIPTION                                                                |\n| ------------------------------------------- | -------------------------------------------------------------------------- |\n| <span style="color:salmon">default</span>   | Add this prop to create a visually styled box.                             |\n| <span style="color:salmon">primary</span>   | Add this prop to modify the card and emphasize it with a primary color.    |\n| <span style="color:salmon">secondary</span> | Add this prop to modify the card and give it a secondary background color. |'},{type:"code",content:"<React.Fragment>\n    <Card body default>\n        <Card.Title>Default</Card.Title>\n        <p>Lorem ipsum dolor sit amet, consectetur adipisicing elit.</p>\n    </Card>\n    <Card body primary>\n        <Card.Title>Primary</Card.Title>\n        <p>Lorem ipsum dolor sit amet, consectetur adipisicing elit.</p>\n    </Card>\n    <Card body secondary>\n        <Card.Title>Secondary</Card.Title>\n        <p>Lorem ipsum dolor sit amet, consectetur adipisicing elit.</p>\n    </Card>\n</React.Fragment>",settings:{},evalInContext:i}]},821:function(e,t,n){e.exports={description:"",displayName:"CodeBlock",methods:[],props:[{type:{name:"node"},required:!1,description:"Pass children elements to this element",defaultValue:{value:"undefined",computed:!0},tags:{},name:"children"}],doclets:{},examples:n(822)}},822:function(e,t,n){var a={react:n(2),"./CodeBlock.js":n(105)},o=n(9).default.bind(null,a);n(10).default.bind(null,"const React$0 = require('react');\nconst React = React$0['React'] || (React$0.default || React$0);\nconst CodeBlock$0 = require('./CodeBlock.js');\nconst CodeBlock = CodeBlock$0['CodeBlock'] || (CodeBlock$0.default || CodeBlock$0);",o),e.exports=[]},823:function(e,t,n){e.exports={description:"",displayName:"Container",methods:[],props:[{type:{name:"bool"},required:!1,description:"Add this prop for a xsmall container",defaultValue:{value:"false",computed:!1},tags:{},name:"xsmall"},{type:{name:"bool"},required:!1,description:"Add this prop for a small container",defaultValue:{value:"false",computed:!1},tags:{},name:"small"},{type:{name:"bool"},required:!1,description:"Add this prop for a large container",defaultValue:{value:"false",computed:!1},tags:{},name:"large"},{type:{name:"bool"},required:!1,description:"Add this prop, if you do not want to limit the container width but still want the dynamic horizontal padding",defaultValue:{value:"false",computed:!1},tags:{},name:"expand"},{type:{name:"node"},required:!1,description:"Pass children elements to this element",defaultValue:{value:"undefined",computed:!0},tags:{},name:"children"}],doclets:{},examples:n(824)}},824:function(e,t,n){var a={react:n(2),"./Container.js":n(204)},o=n(9).default.bind(null,a),i=n(10).default.bind(null,"const React$0 = require('react');\nconst React = React$0['React'] || (React$0.default || React$0);\nconst Container$0 = require('./Container.js');\nconst Container = Container$0['Container'] || (Container$0.default || Container$0);",o);e.exports=[{type:"markdown",content:"<https://getuikit.com/docs/container>\n\n### Usage\n\nUse a Grid class to a block element to give it a max-width and wrap the main content of your website.\nThe element will be centered and have padding on the sides, that adapts automatically for large screens.\n\n### Size modifiers\n\nAdd one of the following classes to the container to apply a different max-width."},{type:"code",content:"<React.Fragment>\n    <Container>Default</Container>\n    <Container xsmall>Extra Small</Container>\n    <Container small>Small</Container>\n    <Container large>Large</Container>\n    <Container expand>Expand</Container>\n</React.Fragment>",settings:{},evalInContext:i}]},825:function(e,t,n){e.exports={description:"",displayName:"Flex",methods:[],doclets:{},examples:n(826)}},826:function(e,t,n){var a={"../":n(25),react:n(2),"./Flex.js":n(205)},o=n(9).default.bind(null,a),i=n(10).default.bind(null,"const React$0 = require('react');\nconst React = React$0['React'] || (React$0.default || React$0);\nconst Flex$0 = require('./Flex.js');\nconst Flex = Flex$0['Flex'] || (Flex$0.default || Flex$0);",o);e.exports=[{type:"markdown",content:'<https://getuikit.com/docs/flex>\n\n#### Utilize the power of flexbox to create a wide range of layouts.\n\nThe Flex component has an essential role in building layouts in react-uikit.\nA lot of components, for example the Grid as well as horizontal navigations,\nlike the Navbar, Subnav, Breadcrumb, Pagination, Tab and Dotnav are built with \nflexbox and can be used together with the utility props from this component.\n\n### Usage\n\nTo apply the flexbox layout model, use one of the following props.\nBy default, all flex items are aligned to the left, as wide as their content and matched in height.\n\n| PROPS                                        | DESCRIPTION                                                  |\n| -------------------------------------------- | ------------------------------------------------------------ |\n| <span style="color:salmon">flex</span>       | Create the flex container and behave like a block element.   |\n| <span style="color:salmon">flexInline</span> | Create the flex container and behave like an inline element. |'},{type:"code",content:"import { Card, Panel } from '../';\n\n<React.Fragment>\n    <Panel flex>\n        <Card default body>Item 1</Card>\n        <Card default body marginLeft>Item 2</Card>\n        <Card default body marginLeft>Item 3</Card>\n    </Panel>\n</React.Fragment>",settings:{},evalInContext:i},{type:"markdown",content:'### Horizontal Alignment\n\nThese props define the horizontal alignment of flex items and distribute the space between them.\nAdd one or more of them to the flex container in order to configure the alignments of the flex items.\nBy default, flex items are aligned to the left as does the flexLeft props.\n\n| PROPS                                         | DESCRIPTION                                                                                       |\n| --------------------------------------------- | ------------------------------------------------------------------------------------------------- |\n| <span style="color:salmon">flexLeft</span>    | Add this prop to align flex items to the left.                                                    |\n| <span style="color:salmon">flexCenter</span>  | Add this prop to center flex items along the main axis.                                           |\n| <span style="color:salmon">flexRight</span>   | Add this prop to align flex items to the right.                                                   |\n| <span style="color:salmon">flexBetween</span> | Add this prop to distribute items evenly, with equal space between the items along the main axis. |\n| <span style="color:salmon">flexAround</span>  | Add this prop to distribute items evenly with equal space on both sides of each item.             |'},{type:"code",content:"import { Card, Panel } from '../';\n\n<React.Fragment>\n    <Panel flex flexCenter>\n        <Card default body>Item 1</Card>\n        <Card default body marginLeft>Item 2</Card>\n        <Card default body marginLeft>Item 3</Card>\n    </Panel>\n</React.Fragment>",settings:{},evalInContext:i},{type:"markdown",content:'### Responsive Flex\n\nReact-uikit provides a number of responsive flex props for horizontal alignment.\nBasically, they work just like the usual flex alignment props, except that they have suffixes that represent the breakpoint from which they come to effect.\n\n| PROPS                                                                                                                                                                                                                                                                                  | DESCRIPTION                                                                       |\n| -------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------- | --------------------------------------------------------------------------------- |\n| <span style="color:salmon">flexLeftSmall</span><br /><span style="color:salmon">flexCenterSmall</span><br /><span style="color:salmon">flexRightSmall</span><br /><span style="color:salmon">flexBetweenSmall</span><br /><span style="color:salmon">flexAroundSmall</span><br />      | Only affects device widths of <span style="color:salmon">640px</span> and higher. |\n| <span style="color:salmon">flexLeftMedium</span><br /><span style="color:salmon">flexCenterMedium</span><br /><span style="color:salmon">flexRightMedium</span><br /><span style="color:salmon">flexBetweenMedium</span><br /><span style="color:salmon">flexAroundMedium</span><br /> | Only affects device widths of <span style="color:salmon">640px</span> and higher. |\n| <span style="color:salmon">flexLeftLarge</span><br /><span style="color:salmon">flexCenterLarge</span><br /><span style="color:salmon">flexRightLarge</span><br /><span style="color:salmon">flexBetweenLarge</span><br /><span style="color:salmon">flexAroundLarge</span><br />      | Only affects device widths of <span style="color:salmon">640px</span> and higher. |\n| <span style="color:salmon">flexLeftXLarge</span><br /><span style="color:salmon">flexCenterXLarge</span><br /><span style="color:salmon">flexRightXLarge</span><br /><span style="color:salmon">flexBetweenXLarge</span><br /><span style="color:salmon">flexAroundXLarge</span><br /> | Only affects device widths of <span style="color:salmon">640px</span> and higher. |'},{type:"code",content:"import { Card, Panel } from '../';\n\n<React.Fragment>\n    <Panel flex flexCenterMedium flexRightLarge>\n        <Card default body>Item 1</Card>\n        <Card default body marginLeft>Item 2</Card>\n        <Card default body marginLeft>Item 3</Card>\n    </Panel>\n</React.Fragment>",settings:{},evalInContext:i},{type:"markdown",content:'### Vertical alignment\n\nThese props define the vertical alignment of flex items.\nBy default, flex items fill the height of their container as does the flexStretch props.\n\n| PROPS                                         | DESCRIPTION                                                            |\n| --------------------------------------------- | ---------------------------------------------------------------------- |\n| <span style="color:salmon">flexStretch</span> | Add this prop to expand flex items to fill the height of their parent. |\n| <span style="color:salmon">flexTop</span>     | Add this prop to align flex items to the top.                          |\n| <span style="color:salmon">flexMiddle</span>  | Add this prop to center flex items along the cross axis.               |\n| <span style="color:salmon">flexBottom</span>  | Add this prop to align flex items to the bottom.                       |'},{type:"code",content:"import { Card, Panel } from '../';\n\n<React.Fragment>\n    <Panel flex flexMiddle textCenter>\n        <Card default body>Item 1</Card>\n        <Card default body marginLeft>Item 2 <br />...</Card>\n        <Card default body marginLeft>Item 3 <br />... <br />...</Card>\n    </Panel>\n</React.Fragment>",settings:{},evalInContext:i},{type:"markdown",content:'### Direction modifiers\n\nThese props define the axis that flex items are placed on and their direction.\nBy default, items run horizontally from left to right as does the flexRow prop.\n\n| PROPS                                               | DESCRIPTION                                              |\n| --------------------------------------------------- | -------------------------------------------------------- |\n| <span style="color:salmon">flexRow</span>           | Add this prop to lay out flex items as horizontal rows   |\n| <span style="color:salmon">flexRowReverse</span>    | Add this prop to lay out flex items from right to left.  |\n| <span style="color:salmon">flexColumn</span>        | Add this prop to lay out flex items as vertical columns. |\n| <span style="color:salmon">flexColumnReverse</span> | Add this prop to lay out flex items from bottom to top.  |'},{type:"code",content:"import { Card, Panel } from '../';\n\n<React.Fragment>\n    <Panel flex flexColumn width=\"1-3\">\n        <Card default body>Item 1</Card>\n        <Card default body marginTop>Item 2</Card>\n        <Card default body marginTop>Item 3</Card>\n    </Panel>\n</React.Fragment>",settings:{},evalInContext:i},{type:"markdown",content:'### Wrap Modifiers\n\nBy default, flex items are fit into one line and run from left to right.\nAdd one of these props to modify the behavior of wrapping flex items.\n\n| PROPS                                             | DESCRIPTION                                                                                      |\n| ------------------------------------------------- | ------------------------------------------------------------------------------------------------ |\n| <span style="color:salmon">flexWrap</span>        | Add this prop to make flex items wrap into another line when they no longer fit their container. |\n| <span style="color:salmon">flexWrapReverse</span> | Add this prop to change the items\' direction so that they run from right to left.                |\n| <span style="color:salmon">flexNoWrap</span>      | Add this prop to force the flex items into one line. This is the default behavior.               |\n\nThe following props modify the alignment of wrapping flex items.\n\n| PROPS                                             | DESCRIPTION                                                                                                               |\n| ------------------------------------------------- | ------------------------------------------------------------------------------------------------------------------------- |\n| <span style="color:salmon">flexWrapStretch</span> | Add this prop, so that item lines stretch to take up the remaining space                                                  |\n| <span style="color:salmon">flexWrapBetween</span> | Add this prop to distribute item lines evenly, with the first row at the top and last row at the bottom of the container. |\n| <span style="color:salmon">flexWrapAround</span>  | Add this prop to distribute lines evenly with equal space at the top and bottom of each row.                              |\n| <span style="color:salmon">flexWrapTop</span>     | Add this prop to align multiline flex items to the top.                                                                   |\n| <span style="color:salmon">flexWrapMiddle</span>  | Add this prop to vertically center multirow flex items.                                                                   |\n| <span style="color:salmon">flexWrapBottom</span>  | Add this prop to align multiline flex items to the bottom.                                                                |'},{type:"code",content:'import { Card, Panel } from \'../\';\n\n<React.Fragment>\n    <Panel flex flexWrap flexWrapAround backgroundMuted heightMedium textCenter>\n        <Card default body small width="1-3">Item 1</Card>\n        <Card default body small width="1-2" marginLeft>Item 2</Card>\n        \n        <Card default body small width="1-3">Item 3</Card>\n        <Card default body small width="1-3" marginLeft>Item 4</Card>\n        \n        <Card default body small width="1-2">Item 5</Card>\n        <Card default body small width="1-3" marginLeft>Item 6</Card>\n    </Panel>\n</React.Fragment>',settings:{},evalInContext:i},{type:"markdown",content:'### Item order\n\nBy default, flex items are laid out according to the source order.\nTo display a certain item as the first or last one, just add one of these props.\n\n| PROPS                                                                                                   | DESCRIPTION                                                                   |\n| ------------------------------------------------------------------------------------------------------- | ----------------------------------------------------------------------------- |\n| <span style="color:salmon">flexFirst</span>                                                             | Displays the item as the first one.                                           |\n| <span style="color:salmon">flexLast</span>                                                              | Displays the item as the last one.                                            |\n| <span style="color:salmon">flexFirstSmall</span><br /><span style="color:salmon">flexLastSmall</span>   | Affects device widths of <span style="color:salmon">640px</span> and higher.  |\n| <span style="color:salmon">flexFirstMedium</span><br /><span style="color:salmon">flexLastMedium</span> | Affects device widths of <span style="color:salmon">960px</span> and higher.  |\n| <span style="color:salmon">flexFirstLarge</span><br /><span style="color:salmon">flexLastLarge</span>   | Affects device widths of <span style="color:salmon">1200px</span> and higher. |\n| <span style="color:salmon">flexFirstXLarge</span><br /><span style="color:salmon">flexLastXLarge</span> | Affects device widths of <span style="color:salmon">1600px</span> and higher. |'},{type:"code",content:"import { Card, Panel } from '../';\n\n<React.Fragment>\n    <Panel flex>\n        <Card default body flexLast marginLeft>Item 1</Card>\n        <Card default body flexFirst marginLeft>Item 2</Card>\n        <Card default body marginLeft>Item 3</Card>\n    </Panel>\n</React.Fragment>",settings:{},evalInContext:i},{type:"markdown",content:'### Item dimensions\n\nTo determine how much space a flex item should take up, add one of the following props to the item.\nBy default, items determine their size by their content, but are allowed to shrink.\n\n| PROPS                                      | DESCRIPTION                                            |\n| ------------------------------------------ | ------------------------------------------------------ |\n| <span style="color:salmon">flexNone</span> | The box\'s size is determined by its content.           |\n| <span style="color:salmon">flexAuto</span> | The space is allocated considering the item\'s content. |\n| <span style="color:salmon">flex1</span>    | The space is allocated solely based on flex.           |'},{type:"code",content:'import { Card, Grid, Image, Panel } from \'../\';\n\n<React.Fragment>\n    <Grid flexMiddle>\n        <Panel widthMedium="2-3">\n            <p>Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna.</p>\n        </Panel>\n        <Panel widthMedium="1-3" flexFirst>\n            <Image src="https://getuikit.com/docs/images/light.jpg" alt="Image" />\n        </Panel>\n    </Grid>\n</React.Fragment>',settings:{},evalInContext:i}]},827:function(e,t,n){e.exports={description:"",displayName:"Form",methods:[],props:[{type:{name:"node"},required:!1,description:"Pass children elements to this element",defaultValue:{value:"undefined",computed:!0},tags:{},name:"children"}],doclets:{},examples:n(828)}},828:function(e,t,n){var a={react:n(2),"./Form.js":n(102)},o=n(9).default.bind(null,a),i=n(10).default.bind(null,"const React$0 = require('react');\nconst React = React$0['React'] || (React$0.default || React$0);\nconst Form$0 = require('./Form.js');\nconst Form = Form$0['Form'] || (Form$0.default || Form$0);",o);e.exports=[{type:"markdown",content:'<https://getuikit.com/docs/form>\n\n#### Easily create nice looking forms with different styles and layouts.\n\n### Usage\n\nAdd one of the following props to form controls inside a <Form> component to define them.\n\n| PROP                                   | DESCRIPTION                                                     |\n| -------------------------------------- | --------------------------------------------------------------- |\n| <span style="color:salmon">body</span> | Add this prop to a Card component to define the Card component. |'},{type:"code",content:"<React.Fragment>\n    <Form>\n        <Form.Fieldset>\n            <Form.Legend>Legend</Form.Legend>\n\n        </Form.Fieldset>\n    </Form>\n</React.Fragment>",settings:{},evalInContext:i}]},829:function(e,t,n){e.exports={description:"",displayName:"Grid",methods:[],props:[{type:{name:"bool"},required:!1,description:"Add this props to apply a small gap.",defaultValue:{value:"false",computed:!1},tags:{},name:"small"},{type:{name:"bool"},required:!1,description:"Add this props to apply a medium gap like the default one, but without a breakpoint.",defaultValue:{value:"false",computed:!1},tags:{},name:"medium"},{type:{name:"bool"},required:!1,description:"Add this props to apply a large gap with breakpoints.",defaultValue:{value:"false",computed:!1},tags:{},name:"large"},{type:{name:"bool"},required:!1,description:"Add this props to remove the grid gap entirely.",defaultValue:{value:"false",computed:!1},tags:{},name:"collapse"},{type:{name:"bool"},required:!1,description:"Add one of these props to apply a small gap to the column or row.",defaultValue:{value:"false",computed:!1},tags:{},name:"columnSmall"},{type:{name:"bool"},required:!1,description:"",defaultValue:{value:"false",computed:!1},tags:{},name:"rowSmall"},{type:{name:"bool"},required:!1,description:"Add one of these props to apply a medium gap to the column or row.",defaultValue:{value:"false",computed:!1},tags:{},name:"columnMedium"},{type:{name:"bool"},required:!1,description:"",defaultValue:{value:"false",computed:!1},tags:{},name:"rowMedium"},{type:{name:"bool"},required:!1,description:"Add one of these props to apply a large gap to the column or row.",defaultValue:{value:"false",computed:!1},tags:{},name:"columnLarge"},{type:{name:"bool"},required:!1,description:"",defaultValue:{value:"false",computed:!1},tags:{},name:"rowLarge"},{type:{name:"bool"},required:!1,description:"Add one of these props to remove the grid gap entirely from the column or row.",defaultValue:{value:"false",computed:!1},tags:{},name:"columnCollapse"},{type:{name:"bool"},required:!1,description:"",defaultValue:{value:"false",computed:!1},tags:{},name:"rowCollapse"},{type:{name:"bool"},required:!1,description:"This prop can be combined with the gap modifiers. As soon as the grid stacks, the divider lines will become horizontal.",defaultValue:{value:"false",computed:!1},tags:{},name:"divider"},{type:{name:"bool"},required:!1,description:"To match the height of the direct child of each cell, add this prop.",defaultValue:{value:"false",computed:!1},tags:{},name:"match"},{type:{name:"bool"},required:!1,description:"If grid cells have different heights, a layout free of gaps can be created by adding this prop.",defaultValue:{value:"undefined",computed:!0},tags:{},name:"masonry"},{type:{name:"number"},required:!1,description:"To move single columns of a grid at different speeds while scrolling, just add this prop.",defaultValue:{value:"undefined",computed:!0},tags:{},name:"parallax"},{type:{name:"node"},required:!1,description:"Pass children elements to this element.",defaultValue:{value:"undefined",computed:!0},tags:{},name:"children"}],doclets:{},examples:n(830)}},830:function(e,t,n){var a={"../":n(25),react:n(2),"./Grid.js":n(104)},o=n(9).default.bind(null,a),i=n(10).default.bind(null,"const React$0 = require('react');\nconst React = React$0['React'] || (React$0.default || React$0);\nconst Grid$0 = require('./Grid.js');\nconst Grid = Grid$0['Grid'] || (Grid$0.default || Grid$0);",o);e.exports=[{type:"markdown",content:"<https://getuikit.com/docs/grid>\n\n### Create a fully responsive, fluid and nestable grid layout.\n\nThe Grid system of react-uikit allows you to arrange block elements in columns.\nIt works closely together with the <a href='#/Width' target='blank'>Width component</a> to determine how much space of the container each item will take up,\nand it can also be combined with the <a href='#/Flex' target='blank'>Flex component</a> to align and order grid items.\n\n* * *\n\n### Usage\n\nTo create the grid container, use the Grid component.\nAdd child <a href='#/Grid' target='blank'>Grid components</a> to create the cells.\nBy default, all grid cells are stacked.\nTo place them side by side, add one of the props from the <a href='#/Width' target='blank'>Width component</a>.\nUsing `widthExpand` property will automatically apply equal width to items, regardless of how many there are.\n\nOften cards from the <a href='#/Card' target='blank'>Card component</a> are used inside a grid. This also goes for the following examples for visualization."},{type:"code",content:"import { Card, Panel } from '../';\n<React.Fragment>\n    <Grid childWidthExpandSmall textCenter>\n        <Panel>\n            <Card default body>Item</Card>\n        </Panel>\n        <Panel>\n            <Card default body>Item</Card>\n        </Panel>\n        <Panel>\n            <Card default body>Item</Card>\n        </Panel>\n    </Grid>\n</React.Fragment>",settings:{},evalInContext:i},{type:"markdown",content:'* * *\n\n### Gap modifiers\n\nThe Grid component comes with a default gap that is decreased automatically from a certain breakpoint usually on a smaller desktop viewport width.\nTo apply a different gap, add one of the following props.\n\n| PROPS                                      | DESCRIPTION                                                                          |\n| ------------------------------------------ | ------------------------------------------------------------------------------------ |\n| <span style="color:salmon">small</span>    | Add this class to apply a small gap.                                                 |\n| <span style="color:salmon">medium</span>   | Add this class to apply a medium gap like the default one, but without a breakpoint. |\n| <span style="color:salmon">large</span>    | Add this class to apply a large gap with breakpoints.                                |\n| <span style="color:salmon">collapse</span> | Add this class to remove the grid gap entirely.                                      |'},{type:"code",content:"import { Card, Panel } from '../';\n<React.Fragment>\n    <Grid small childWidthExpandSmall textCenter>\n        <Panel>\n            <Card default body>Item</Card>\n        </Panel>\n        <Panel>\n            <Card default body>Item</Card>\n        </Panel>\n        <Panel>\n            <Card default body>Item</Card>\n        </Panel>\n    </Grid>\n    <Grid medium childWidthExpandSmall textCenter>\n        <Panel>\n            <Card default body>Item</Card>\n        </Panel>\n        <Panel>\n            <Card default body>Item</Card>\n        </Panel>\n        <Panel>\n            <Card default body>Item</Card>\n        </Panel>\n    </Grid>\n    <Grid large childWidthExpandSmall textCenter>\n        <Panel>\n            <Card default body>Item</Card>\n        </Panel>\n        <Panel>\n            <Card default body>Item</Card>\n        </Panel>\n        <Panel>\n            <Card default body>Item</Card>\n        </Panel>\n    </Grid>\n    <Grid collapse childWidthExpandSmall textCenter marginTopLarge>\n        <Panel>\n            <Card backgroundMuted body>Item</Card>\n        </Panel>\n        <Panel>\n            <Card backgroundPrimary body>Item</Card>\n        </Panel>\n        <Panel>\n            <Card backgroundSecondary body>Item</Card>\n        </Panel>\n    </Grid>\n</React.Fragment>",settings:{},evalInContext:i},{type:"markdown",content:'* * *\n\n#### Column and Row\n\nTo apply a different gap to just the column or row, add one of the following props.\n\n| PROPS                                                                                     | DESCRIPTION                                                                    |\n| ----------------------------------------------------------------------------------------- | ------------------------------------------------------------------------------ |\n| <div style="color:salmon">columnSmall</div><div style="color:salmon">rowSmall</div>       | Add one of these props to apply a small gap to the column or row.              |\n| <div style="color:salmon">columnMedium</div><div style="color:salmon">rowMedium</div>     | Add one of these props to apply a medium gap to the column or row.             |\n| <div style="color:salmon">columnLarge</div><div style="color:salmon">rowLarge</div>       | Add one of these props to apply a large gap to the column or row.              |\n| <div style="color:salmon">columnCollapse</div><div style="color:salmon">rowCollapse</div> | Add one of these props to remove the grid gap entirely from the column or row. |'},{type:"code",content:"import { Card, Panel } from '../';\n<React.Fragment>\n    <Grid columnSmall rowLarge childWidthSmall=\"1-3\" textCenter>\n        <Panel>\n            <Card default body>Item</Card>\n        </Panel>\n        <Panel>\n            <Card default body>Item</Card>\n        </Panel>\n        <Panel>\n            <Card default body>Item</Card>\n        </Panel>\n        <Panel>\n            <Card default body>Item</Card>\n        </Panel>\n        <Panel>\n            <Card default body>Item</Card>\n        </Panel>\n        <Panel>\n            <Card default body>Item</Card>\n        </Panel>\n    </Grid>\n</React.Fragment>",settings:{},evalInContext:i},{type:"markdown",content:"* * *\n\n### Nested grid\n\nYou can easily extend your grid layout with nested grids."},{type:"code",content:'import { Card, Panel } from \'../\';\n<React.Fragment>\n    <Grid childWidth="1-2" textCenter>\n        <Panel>\n            <Card default body>Item</Card>\n        </Panel>\n        <Grid childWidth="1-2" textCenter>\n            <Panel>\n                <Card primary body>Item</Card>\n            </Panel>\n            <Panel>\n                <Card primary body>Item</Card>\n            </Panel>\n        </Grid>\n    </Grid>\n</React.Fragment>',settings:{},evalInContext:i},{type:"markdown",content:"* * *\n\n### Divider modifier\n\nAdd the `divider` prop to separate grid cells with lines. This class can be combined with the gap modifiers. As soon as the grid stacks, the divider lines will become horizontal."},{type:"code",content:"import { Card, Panel } from '../';\n<React.Fragment>\n    <Grid divider childWidthExpandSmall>\n        <Card>Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua.</Card>\n        <Card>Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat.</Card>\n        <Card>Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur.</Card>\n    </Grid>\n</React.Fragment>",settings:{},evalInContext:i},{type:"markdown",content:"* * *\n\n### Match height\n\nTo match the height of the direct child of each cell, add the `match` prop. This is needed to match the height of cards from the <a href='#/Card' target='blank'>Card component</a>."},{type:"code",content:"import { Card, Panel } from '../';\n<React.Fragment>\n    <Grid match childWidthExpandSmall textCenter>\n        <Panel>\n            <Card default body>Item</Card>\n        </Panel>\n        <Panel>\n            <Card default body>Item<br/>...</Card>\n        </Panel>\n        <Panel>\n            <Card default body>Item<br/>...<br/>...</Card>\n        </Panel>\n    </Grid>\n</React.Fragment>",settings:{},evalInContext:i},{type:"markdown",content:"* * *\n\n#### Match only one cell\n\nYou can also match the height of the direct child of just one cell. To do so, use `<Grid.ItemMatch/>` component to the grid item whose child you want to match."},{type:"code",content:"import { Card, Panel } from '../';\n<React.Fragment>\n    <Grid childWidthExpandSmall textCenter>\n        <Grid.ItemMatch>\n            <Card default body>\n                <h3>Heading</h3>\n                <p>\n                    Lorem ipsum dolor sit amet.\n                </p>\n            </Card>\n        </Grid.ItemMatch>\n        <Panel>\n            <h3>Heading</h3>\n            <p>\n                Lorem ipsum dolor sit amet, consectetur adipisicing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat.\n            </p>\n        </Panel>\n    </Grid>\n</React.Fragment>",settings:{},evalInContext:i},{type:"markdown",content:"* * *\n\n#### Targets\n\nFor a more specific selection of the elements whose heights should be matched, add the target: SELECTOR option to the <a href='#/Height' target='blank'>Height component</a>.\nIMPORTANT!TODO Fix this part once <a href='#/Height' target='blank'>Height component</a> is ready"},{type:"code",content:"import { Card, Panel } from '../';\n<React.Fragment>\n    <Grid childWidthExpandSmall textCenter>\n        <Grid.ItemMatch>\n            <Card default body>\n                <h3>Heading</h3>\n                <p>\n                    Lorem ipsum dolor sit amet.\n                </p>\n            </Card>\n        </Grid.ItemMatch>\n        <Panel>\n            <h3>Heading</h3>\n            <p>\n                Lorem ipsum dolor sit amet, consectetur adipisicing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat.\n            </p>\n        </Panel>\n    </Grid>\n</React.Fragment>",settings:{},evalInContext:i},{type:"markdown",content:"* * *\n\n### Grid and width\n\nThe grid is mostly used in combination with the <a href='#/Width' target='blank'>Width component</a>. This allows for great flexibility when determining the column widths."},{type:"code",content:"import { Card, Panel } from '../';\n<React.Fragment>\n    <Grid textCenter>\n        <Panel widthAutoMedium>\n            <Card default body>Auto</Card>\n        </Panel>\n        <Panel widthMedium=\"1-3\">\n            <Card default body>1-3</Card>\n        </Panel>\n        <Panel widthExpandMedium>\n            <Card default body>Expand</Card>\n        </Panel>\n    </Grid>\n</React.Fragment>",settings:{},evalInContext:i},{type:"markdown",content:"* * *\n\n#### Child width\n\nIf the grid columns are evenly split, you can add one of the `childWidth*` props to the grid container instead of adding a class to each of the items."},{type:"code",content:'import { Card, Panel } from \'../\';\n<React.Fragment>\n    <Grid childWidthSmall="1-2" childWidthMedium="1-3" textCenter>\n        <Panel>\n            <Card default body>Item</Card>\n        </Panel>\n        <Panel>\n            <Card default body>Item</Card>\n        </Panel>\n        <Panel>\n            <Card default body>Item</Card>\n        </Panel>\n    </Grid>\n</React.Fragment>',settings:{},evalInContext:i},{type:"markdown",content:"For more detailed information, take a look at the <a href='#/Width' target='blank'>Width component</a>.\n\n* * *\n\n### Grid and flex\n\nYou can easily combine the grid with the <a href='#/Flex' target='blank'>Flex component</a>.\nThat way you can modify the items' alignment, ordering, direction and wrapping.\nThis allows you, for example, to flip the cells' display order for wider viewports.\nAll this works together with the gap and divider modifiers."},{type:"code",content:"import { Card, Panel } from '../';\n<React.Fragment>\n    <Grid small childWidthSmall=\"1-4\" flexCenter textCenter>\n        <Panel>\n            <Card default body>Item 1</Card>\n        </Panel>\n        <Panel flexLast>\n            <Card secondary body>Item 2</Card>\n        </Panel>\n        <Panel>\n            <Card default body>Item 3</Card>\n        </Panel>\n        <Panel>\n            <Card default body>Item 4</Card>\n        </Panel>\n        <Panel flexFirst>\n            <Card primary body>Item 5</Card>\n        </Panel>\n        <Panel>\n            <Card default body>Item 6</Card>\n        </Panel>\n    </Grid>\n</React.Fragment>",settings:{},evalInContext:i},{type:"markdown",content:"* * *\n\n### Masonry\n\nIf grid cells have different heights, a layout free of gaps can be created by adding `masonry=\"<BOOLEAN>\"` attribute.\nIMPORTANT!TODO Fix this part once <a href='#/Height' target='blank'>Height component</a> is ready"},{type:"code",content:'import { Card, Panel } from \'../\';\n<React.Fragment>\n    <Grid small childWidthSmall="1-2" childWidthMedium="1-3" masonry="true">\n        <Panel>\n            <Card default flex flexCenter flexMiddle style="height: 100px">Item</Card>\n        </Panel>\n        <Panel>\n            <Card default flex flexCenter flexMiddle style="height: 130px">Item</Card>\n        </Panel>\n        <Panel>\n            <Card default flex flexCenter flexMiddle style="height: 150px">Item</Card>\n        </Panel>\n        <Panel>\n            <Card default flex flexCenter flexMiddle style="height: 160px">Item</Card>\n        </Panel>\n        <Panel>\n            <Card default flex flexCenter flexMiddle style="height: 120px">Item</Card>\n        </Panel>\n        <Panel>\n            <Card default flex flexCenter flexMiddle style="height: 140px">Item</Card>\n        </Panel>\n        <Panel>\n            <Card default flex flexCenter flexMiddle style="height: 200px">Item</Card>\n        </Panel>\n        <Panel>\n            <Card default flex flexCenter flexMiddle style="height: 180px">Item</Card>\n        </Panel>\n        <Panel>\n            <Card default flex flexCenter flexMiddle style="height: 140px">Item</Card>\n        </Panel>\n    </Grid>\n</React.Fragment>',settings:{},evalInContext:i},{type:"markdown",content:"NOTE: You can view more examples in the tests for the <a href=\"https://getuikit.com/assets/uikit/tests/grid-masonry.html\">Grid Masonry</a>.\n\n* * *\n\n### Filter and order\n\nGrid items can also be filtered and sorted by category, date or other meta data.\nTake a look at the <a href='#/Filter' target='blank'>Filter component</a>.\n\n* * *\n\n### Parallax\n\nTo move single columns of a grid at different speeds while scrolling, just add `parallax=\"<NUMBER>\"` attribute.\nThe number sets the parallax translation in pixels.\nThis effect can be applied to two types of markup.\nThe following example uses three defined columns with three items each."},{type:"code",content:"import { Card, Panel } from '../';\n<React.Fragment>\n    <Grid childWidthExpandSmall textCenter parallax=\"150\">\n        <Panel>\n            <Card default body>Item</Card>\n            <Card default body>Item</Card>\n            <Card default body>Item</Card>\n        </Panel>\n        <Panel>\n            <Card default body>Item</Card>\n            <Card default body>Item</Card>\n            <Card default body>Item</Card>\n        </Panel>\n        <Panel>\n            <Card default body>Item</Card>\n            <Card default body>Item</Card>\n            <Card default body>Item</Card>\n        </Panel>\n    </Grid>\n</React.Fragment>",settings:{},evalInContext:i},{type:"markdown",content:"The parallax effect is also applied if grid columns wrap into the next row, as shown in the next example."},{type:"code",content:'import { Card, Panel } from \'../\';\n<React.Fragment>\n    <Grid childWidthSmall="1-2" childWidthMedium="1-3" childWidthLarge="1-4"textCenter parallax="150">\n        <Panel>\n            <Card default body>Item</Card>\n        </Panel>\n        <Panel>\n            <Card default body>Item</Card>\n        </Panel>\n        <Panel>\n            <Card default body>Item</Card>\n        </Panel>\n        <Panel>\n            <Card default body>Item</Card>\n        </Panel>\n        <Panel>\n            <Card default body>Item</Card>\n        </Panel>\n        <Panel>\n            <Card default body>Item</Card>\n        </Panel>\n        <Panel>\n            <Card default body>Item</Card>\n        </Panel>\n        <Panel>\n            <Card default body>Item</Card>\n        </Panel>\n        <Panel>\n            <Card default body>Item</Card>\n        </Panel>\n        <Panel>\n            <Card default body>Item</Card>\n        </Panel>\n        <Panel>\n            <Card default body>Item</Card>\n        </Panel>\n        <Panel>\n            <Card default body>Item</Card>\n        </Panel>\n    </Grid>\n</React.Fragment>',settings:{},evalInContext:i},{type:"markdown",content:"NOTE: You can view more examples in the <a href='#/Grid' target='blank'>Grid Parallax</a> tests.\n\n* * *\n\n### Component options\n\nAny of these options can be applied to the component attribute. Separate multiple options with a semicolon. <a href='https://getuikit.com/docs/javascript#component-configuration' target='blank'>Learn more</a>\n\n| OPTION                                         | VALUE   | DEFAULT         | DESCRIPTION                                                                                                     |\n| ---------------------------------------------- | ------- | --------------- | --------------------------------------------------------------------------------------------------------------- |\n| <span style=\"color:salmon\">margin</span>       | String  | uk-grid-margin  | This class is added to items that break into the next row, typically to create margin to the previous row.      |\n| <span style=\"color:salmon\">first-column</span> | String  | uk-first-column | This class is added to the first element in each row.                                                           |\n| <span style=\"color:salmon\">masonry</span>      | Boolean | false           | Enables masonry layout for this grid.                                                                           |\n| <span style=\"color:salmon\">parallax</span>     | Number  | 0               | Parallax translation value. The value must be a positive integer. Falsy disables the parallax effect (default). |\n\n* * *\n\n### JavaScript\n\nLearn more about <a href='https://getuikit.com/docs/javascript#programmatic-use' target='blank'>JavaScript components</a>."}]},831:function(e,t,n){e.exports={description:"",displayName:"Height",methods:[],doclets:{},examples:n(832)}},832:function(e,t,n){var a={"../":n(25),react:n(2),"./Height.js":n(206)},o=n(9).default.bind(null,a),i=n(10).default.bind(null,"const React$0 = require('react');\nconst React = React$0['React'] || (React$0.default || React$0);\nconst Height$0 = require('./Height.js');\nconst Height = Height$0['Height'] || (Height$0.default || Height$0);",o);e.exports=[{type:"markdown",content:'<https://getuikit.com/docs/height>\n\n#### Utilize the power of flexbox to create a wide range of layouts.\n\nDefine the height of elements depending on the viewport or match the heights of different elements.\nUIkit\'s Height component offers three options to set heights: using simple fixed height utility classes, depending on the viewport or by matching the heights of different elements.\n\n### Usage\n\nReact UIkit provides a number of useful classes to alter an element\'s height.\n\n| PROPS                                                                                       | DESCRIPTION                                                                                 |\n| ------------------------------------------------------------------------------------------- | ------------------------------------------------------------------------------------------- |\n| <div style="color:salmon">height1_1</div>                                                   | This port applies a height of 100%. This only works if the parent element has a set height. |\n| <div style="color:salmon">heightSmall</div><div style="color:salmon">heightMaxSmall</div>   | These prop apply a height or max-height of <span style="color:salmon">150px</span>.         |\n| <div style="color:salmon">heightMedium</div><div style="color:salmon">heightMaxMedium</div> | These prop apply a height or max-height of <span style="color:salmon">300px</span>.         |\n| <div style="color:salmon">heightLarge</div><div style="color:salmon">heightMaxLarge</div>   | These prop apply a height or max-height of <span style="color:salmon">450px</span>.         |'},{type:"code",content:"import { Card, Grid, Panel } from '../';\n\n<React.Fragment>\n    <Grid childWidthSmall=\"1-3\" >\n        <Panel>\n            <Card heightSmall default body flex flexCenter flexMiddle>Small</Card>\n        </Panel>\n        <Panel>\n            <Card heightMedium default body flex flexCenter flexMiddle>Medium</Card>\n        </Panel>\n        <Panel>\n           <Card heightLarge default body flex flexCenter flexMiddle>Large</Card>\n        </Panel>\n    </Grid>\n</React.Fragment>",settings:{},evalInContext:i},{type:"markdown",content:'* * *\n\n### Viewport height\n\nAdd the <span style="color:salmon">heightViewport</span> property to create a container that fills the height of the entire viewport. You can change the height behavior by adding the offset-top, offset-bottom or expand option to the attribute. Learn more\n\n| PROPS                                                                                       | DESCRIPTION                                                                                 |\n| ------------------------------------------------------------------------------------------- | ------------------------------------------------------------------------------------------- |\n| <div style="color:salmon">height1_1</div>                                                   | This port applies a height of 100%. This only works if the parent element has a set height. |\n| <div style="color:salmon">heightSmall</div><div style="color:salmon">heightMaxSmall</div>   | These prop apply a height or max-height of <span style="color:salmon">150px</span>.         |\n| <div style="color:salmon">heightMedium</div><div style="color:salmon">heightMaxMedium</div> | These prop apply a height or max-height of <span style="color:salmon">300px</span>.         |\n| <div style="color:salmon">heightLarge</div><div style="color:salmon">heightMaxLarge</div>   | These prop apply a height or max-height of <span style="color:salmon">450px</span>.         |'},{type:"code",content:"import { Card, Grid, Panel } from '../';\n\n<React.Fragment>\n    <Grid childWidthSmall=\"1-3\" >\n        <Panel>\n            <Card heightSmall default body flex flexCenter flexMiddle>Small</Card>\n        </Panel>\n        <Panel>\n            <Card heightMedium default body flex flexCenter flexMiddle>Medium</Card>\n        </Panel>\n        <Panel>\n           <Card heightLarge default body flex flexCenter flexMiddle>Large</Card>\n        </Panel>\n    </Grid>\n</React.Fragment>",settings:{},evalInContext:i},{type:"markdown",content:"* * *"}]},833:function(e,t,n){e.exports={description:"",displayName:"Image",methods:[],props:[{type:{name:"string"},required:!1,description:"",defaultValue:{value:"false",computed:!1},tags:{},name:"src"},{type:{name:"number"},required:!1,description:"",defaultValue:{value:"false",computed:!1},tags:{},name:"width"},{type:{name:"number"},required:!1,description:"",defaultValue:{value:"false",computed:!1},tags:{},name:"height"},{type:{name:"string"},required:!1,description:"",tags:{},name:"alt"},{type:{name:"node"},required:!1,description:"Pass children elements to this element",defaultValue:{value:"undefined",computed:!0},tags:{},name:"children"}],doclets:{},examples:n(834)}},834:function(e,t,n){var a={react:n(2),"./Image.js":n(101)},o=n(9).default.bind(null,a),i=n(10).default.bind(null,"const React$0 = require('react');\nconst React = React$0['React'] || (React$0.default || React$0);\nconst Image$0 = require('./Image.js');\nconst Image = Image$0['Image'] || (Image$0.default || Image$0);",o);e.exports=[{type:"markdown",content:"<https://getuikit.com/docs/image>\n\n#### Speed up page loading times and decrease traffic by only loading images as they enter the viewport.\n\nThe Image component improves page speed significantly by following these methods:\n\n### Usage\n\nUse a Grid class to a block element to give it a max-width and wrap the main content of your website.\nThe element will be centered and have padding on the sides, that adapts automatically for large screens.\n\n### Size modifiers\n\nAdd one of the following classes to the container to apply a different max-width."},{type:"code",content:'<React.Fragment>\n    <Image src="https://getuikit.com/docs/images/light.jpg" alt="Image" />\n</React.Fragment>',settings:{},evalInContext:i}]},835:function(e,t,n){e.exports={description:"",displayName:"Margin",methods:[],doclets:{},examples:n(836)}},836:function(e,t,n){var a={"../":n(25),react:n(2),"./Margin.js":n(207)},o=n(9).default.bind(null,a),i=n(10).default.bind(null,"const React$0 = require('react');\nconst React = React$0['React'] || (React$0.default || React$0);\nconst Margin$0 = require('./Margin.js');\nconst Margin = Margin$0['Margin'] || (Margin$0.default || Margin$0);",o);e.exports=[{type:"markdown",content:'<https://getuikit.com/docs/margin>\n\n#### A collection of utility classes to add spacing between elements.\n\n### Margin\n\nAdd one or more of the following props to any element to create the same vertical and/or horizontal margin that a paragraph usually has.\n\n| PROPS                                          | DESCRIPTION                                                                  |\n| ---------------------------------------------- | ---------------------------------------------------------------------------- |\n| <span style="color:salmon">margin</span>       | Adds margin, if it is preceded by another element, and always bottom margin. |\n| <span style="color:salmon">marginTop</span>    | Adds top margin.                                                             |\n| <span style="color:salmon">marginBottom</span> | Adds bottom margin.                                                          |\n| <span style="color:salmon">marginLeft</span>   | Adds left margin.                                                            |\n| <span style="color:salmon">marginRight</span>  | Adds right margin.                                                           |'},{type:"code",content:"import { Card } from '../';\n\n<React.Fragment>\n    <Card margin default body>Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua.</Card>\n    <Card margin default body>Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua.</Card>\n</React.Fragment>",settings:{},evalInContext:i},{type:"markdown",content:'<br /><br /><hr />\n\n### Small Margin\n\nAdd one of the following props to add small spacing to block elements.\n\n| PROPS                                               | DESCRIPTION                                                                  |\n| --------------------------------------------------- | ---------------------------------------------------------------------------- |\n| <span style="color:salmon">marginSmall</span>       | Adds margin, if it is preceded by another element, and always bottom margin. |\n| <span style="color:salmon">marginTopSmall</span>    | Adds top margin.                                                             |\n| <span style="color:salmon">marginSmallBottom</span> | Adds bottom margin.                                                          |\n| <span style="color:salmon">marginSmallLeft</span>   | Adds left margin.                                                            |\n| <span style="color:salmon">marginSmallRight</span>  | Adds right margin.                                                           |'},{type:"code",content:"import { Card } from '../';\n\n<React.Fragment>\n    <Card marginSmall default body>Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua.</Card>\n    <Card marginSmall default body>Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua.</Card>\n</React.Fragment>",settings:{},evalInContext:i},{type:"markdown",content:'<br /><br /><hr />\n\n### Medium Margin\n\nAdd one of the following props to add medium spacing to block elements.\n\n| PROPS                                                | DESCRIPTION                                                                         |\n| ---------------------------------------------------- | ----------------------------------------------------------------------------------- |\n| <span style="color:salmon">marginMedium</span>       | Adds medium margin, if it is preceded by another element, and always bottom margin. |\n| <span style="color:salmon">marginMediumTop</span>    | Adds medium top margin.                                                             |\n| <span style="color:salmon">marginMediumBottom</span> | Adds medium bottom margin.                                                          |\n| <span style="color:salmon">marginMediumLeft</span>   | Adds medium left margin.                                                            |\n| <span style="color:salmon">marginMediumRight</span>  | Adds medium right margin.                                                           |'},{type:"code",content:"import { Card } from '../';\n\n<React.Fragment>\n    <Card marginMedium default body>Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua.</Card>\n    <Card marginMedium default body>Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua.</Card>\n</React.Fragment>",settings:{},evalInContext:i},{type:"markdown",content:'<br /><br /><hr />\n\n### Large Margin\n\nAdd one of the following props to add large spacing to block elements.\n\n| PROPS                                               | DESCRIPTION                                                                        |\n| --------------------------------------------------- | ---------------------------------------------------------------------------------- |\n| <span style="color:salmon">marginLarge</span>       | Adds large margin, if it is preceded by another element, and always bottom margin. |\n| <span style="color:salmon">marginLargeTop</span>    | Adds large top margin.                                                             |\n| <span style="color:salmon">marginLargeBottom</span> | Adds large bottom margin.                                                          |\n| <span style="color:salmon">marginLargeLeft</span>   | Adds large left margin.                                                            |\n| <span style="color:salmon">marginLargeRight</span>  | Adds large right margin.                                                           |'},{type:"code",content:"import { Card } from '../';\n\n<React.Fragment>\n    <Card marginLarge default body>Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua.</Card>\n    <Card marginLarge default body>Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua.</Card>\n</React.Fragment>",settings:{},evalInContext:i},{type:"markdown",content:'<br /><br /><hr />\n\n### X-Large Margin\n\nAdd one of the following props to add very large spacing to block elements.\n\n| PROPS                                                | DESCRIPTION                                                                         |\n| ---------------------------------------------------- | ----------------------------------------------------------------------------------- |\n| <span style="color:salmon">marginXLarge</span>       | Adds larger margin, if it is preceded by another element, and always bottom margin. |\n| <span style="color:salmon">marginXLargeTop</span>    | Adds larger top margin.                                                             |\n| <span style="color:salmon">marginXLargeBottom</span> | Adds larger bottom margin.                                                          |\n| <span style="color:salmon">marginXLargeLeft</span>   | Adds larger left margin.                                                            |\n| <span style="color:salmon">marginXLargeRight</span>  | Adds larger right margin.                                                           |'},{type:"code",content:"import { Card } from '../';\n\n<React.Fragment>\n    <Card marginXLarge default body>Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua.</Card>\n    <Card marginXLarge default body>Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua.</Card>\n</React.Fragment>",settings:{},evalInContext:i},{type:"markdown",content:'<br /><br /><hr />\n\n### Remove Margin\n\nAdd one of the following props to remove margin from block elements.\n\n| PROPS                                                    | DESCRIPTION                                                |\n| -------------------------------------------------------- | ---------------------------------------------------------- |\n| <span style="color:salmon">marginRemoveSmallLeft</span>  | Removes all margins.                                       |\n| <span style="color:salmon">marginRemoveTop</span>        | Removes top margin.                                        |\n| <span style="color:salmon">marginRemoveBottom</span>     | Removes bottom margin.                                     |\n| <span style="color:salmon">marginRemoveLeft</span>       | Removes left margin.                                       |\n| <span style="color:salmon">marginRemoveRight</span>      | Removes right margin.                                      |\n| <span style="color:salmon">marginRemoveVertical</span>   | Removes all vertical margins.                              |\n| <span style="color:salmon">marginRemoveAdjacent</span>   | Removes the top margin of the directly succeeding element. |\n| <span style="color:salmon">marginRemoveFirstChild</span> | Removes the top margin of the first child element.         |\n| <span style="color:salmon">marginRemoveLastChild</span>  | Removes the bottom margin of the last child element.       |\n\n<br /><br /><hr />\n\n### Responsive Margin\n\nReact-uikit provides a number of responsive props to remove margin.\nBasically, they work just like the usual margin remove props, except that they have suffixes that represent the breakpoint from which they come to effect.\n\n| PROPS                                                                                                                   | DESCRIPTION                                                                   |\n| ----------------------------------------------------------------------------------------------------------------------- | ----------------------------------------------------------------------------- |\n| <span style="color:salmon">marginRemoveSmallLeft</span><br /><span style="color:salmon">marginRemoveSmallRight</span>   | Affects device widths of <span style="color:salmon">640px</span> and larger.  |\n| <span style="color:salmon">marginRemoveMediumLeft</span><br /><span style="color:salmon">marginRemoveMediumRight</span> | Affects device widths of <span style="color:salmon">960px</span> and larger.  |\n| <span style="color:salmon">marginRemoveLargeLeft</span><br /><span style="color:salmon">marginRemoveLargeRight</span>   | Affects device widths of <span style="color:salmon">1200px</span> and larger. |\n| <span style="color:salmon">marginRemoveXLargeLeft</span><br /><span style="color:salmon">marginRemoveXLargeRight</span> | Affects device widths of <span style="color:salmon">1600px</span> and larger. |\n\n<br /><br /><hr />\n\n### Auto Margin\n\nAdd one of the following props to set auto margin. This can be useful to center or otherwise align block elements with a fixed width as well as flex elements.\n\n| PROPS                                                | DESCRIPTION                                                                         |\n| ---------------------------------------------------- | ----------------------------------------------------------------------------------- |\n| <span style="color:salmon">marginAuto</span>         | Sets left and right margin to auto, horizontally centering block and flex elements. |\n| <span style="color:salmon">marginAutoTop</span>      | Sets top margin to auto, pushing block and flex elements to the bottom.             |\n| <span style="color:salmon">marginAutoBottom</span>   | Sets bottom margin to auto, pushing block and flex elements to the top.             |\n| <span style="color:salmon">marginAutoLeft</span>     | Sets left margin to auto, pushing block and flex elements to the right.             |\n| <span style="color:salmon">marginAutoRight</span>    | Sets right margin to auto, pushing block and flex elements to the left              |\n| <span style="color:salmon">marginAutoVerticle</span> | Sets top and bottom margin to auto, vertically centering only flex elements.        |'},{type:"code",content:'import { Card, Panel } from \'../\';\n\n<React.Fragment>\n    <Card margin marginAutoLeft widthSmall="1-2" default body textCenter>Block element</Card>\n    \n    <Panel flex heightMedium backgroundMuted margin textCenter>\n        <Card marginAuto marginAutoVertical widthSmall="1-2" default body>Flex item</Card>\n    </Panel>\n\n</React.Fragment>',settings:{},evalInContext:i},{type:"markdown",content:'<br /><br /><hr />\n\n### Responsive Auto Margin\n\nReact-uikit provides a number of responsive margin auto props.\nBasically, they work just like the usual margin auto classes, except that they have suffixes that represent the breakpoint from which they come to effect.\n\n| PROPS                                                                                                                                                                       | DESCRIPTION                                                                   |\n| --------------------------------------------------------------------------------------------------------------------------------------------------------------------------- | ----------------------------------------------------------------------------- |\n| <span style="color:salmon">marginAutoSmallLeft</span><br /><span style="color:salmon">marginAutoSmall</span><br /><span style="color:salmon">marginAutoSmallRight</span>    | Affects device widths of <span style="color:salmon">640px</span> and larger.  |\n| <span style="color:salmon">marginAutoMediumLeft</span><br /><span style="color:salmon">marginAutoMedium</span><br /><span style="color:salmon">marginAutoMediumRight</span> | Affects device widths of <span style="color:salmon">960px</span> and larger.  |\n| <span style="color:salmon">marginAutoLargeLeft</span><br /><span style="color:salmon">marginAutoLarge</span><br /><span style="color:salmon">marginAutoLargeRight</span>    | Affects device widths of <span style="color:salmon">1200px</span> and larger. |\n| <span style="color:salmon">marginAutoXLargeLeft</span><br /><span style="color:salmon">marginAutoXLarge</span><br /><span style="color:salmon">marginAutoXLargeRight</span> | Affects device widths of <span style="color:salmon">1600px</span> and larger. |'},{type:"code",content:'import { Card, Panel } from \'../\';\n\n<React.Fragment>\n    <Card margin marginAutoRight marginAutoMedium widthSmall="1-2" default body textCenter>Block element</Card>\n    <Card margin marginAuto marginAutoLeftMedium widthSmall="1-2" default body textCenter>Block element</Card>\n    <Card margin marginAutoLeft marginAutoRightMedium widthSmall="1-2" default body textCenter>Block element</Card>\n</React.Fragment>',settings:{},evalInContext:i}]},837:function(e,t,n){e.exports={description:"",displayName:"Padding",methods:[],doclets:{},examples:n(838)}},838:function(e,t,n){var a={"../":n(25),react:n(2),"./Padding.js":n(208)},o=n(9).default.bind(null,a),i=n(10).default.bind(null,"const React$0 = require('react');\nconst React = React$0['React'] || (React$0.default || React$0);\nconst Padding$0 = require('./Padding.js');\nconst Padding = Padding$0['Padding'] || (Padding$0.default || Padding$0);",o);e.exports=[{type:"markdown",content:'<https://getuikit.com/docs/padding>\n\n#### A collection of utility props to add spacing between elements and their content.\n\n### Usage\n\nTo apply this component, add one of the following props to a block element.\n\n| PROPS                                          | DESCRIPTION |\n| ---------------------------------------------- | ----------- |\n| <span style="color:salmon">padding</span>      |             |\n| <span style="color:salmon">paddingSmall</span> |             |\n| <span style="color:salmon">paddingLarge</span> |             |'},{type:"code",content:"import { Panel } from '../';\n\n<React.Fragment>\n    <Panel padding backgroundMuted widthSmall=\"1-2\">\n        Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua.\n    </Panel>\n</React.Fragment>",settings:{},evalInContext:i},{type:"markdown",content:'<br /><br /><hr />\n\n### Remove Padding\n\nIn some cases you want to remove padding from an element, rather than adding it.\nTo do so, apply one of the following props.\n\n| PROPS                                                     | DESCRIPTION                                     |\n| --------------------------------------------------------- | ----------------------------------------------- |\n| <span style="color:salmon">paddingRemove</span>           | Removes all padding from an element.            |\n| <span style="color:salmon">paddingRemoveTop</span>        | Removes top padding from an element.            |\n| <span style="color:salmon">paddingRemoveBottom</span>     | Removes bottom padding from an element.         |\n| <span style="color:salmon">paddingRemoveLeft</span>       | Removes left padding from an element.           |\n| <span style="color:salmon">paddingRemoveRight</span>      | Removes right padding from an element.          |\n| <span style="color:salmon">paddingRemoveVerticle</span>   | Removes top and bottom padding from an element. |\n| <span style="color:salmon">paddingRemoveHorizontal</span> | Removes left and right padding from an element. |'}]},839:function(e,t,n){e.exports={description:"",displayName:"Panel",methods:[],props:[{type:{name:"bool"},required:!1,description:"To toggle an animation on hover or focus, add the animationToggle prop to a parent element",defaultValue:{value:"false",computed:!1},tags:{},name:"animationToggle"},{type:{name:"node"},required:!1,description:"Pass children elements to this element",defaultValue:{value:"undefined",computed:!0},tags:{},name:"children"}],doclets:{},examples:n(840)}},840:function(e,t,n){var a={"../":n(25),react:n(2),"./Panel.js":n(100)},o=n(9).default.bind(null,a),i=n(10).default.bind(null,"const React$0 = require('react');\nconst React = React$0['React'] || (React$0.default || React$0);\nconst Panel$0 = require('./Panel.js');\nconst Panel = Panel$0['Panel'] || (Panel$0.default || Panel$0);",o);e.exports=[{type:"markdown",content:'### Usage\n\nReact-uikit uses panels to outline certain sections of your content. These can be arranged in grid columns from the Grid component component, for example.\n\n### Panel\n\n| PROPS                                   | DESCRIPTION                                                                                                                                                                        |\n| --------------------------------------- | ---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------- |\n| <span style="color:salmon">panel</span> | Add the pnael props to a <Panel> component to create a position context, set box-sizing to border-box, apply a clearfix and to remove the bottom margin of its last child element. |'},{type:"code",content:"import { Card, Grid, Panel } from '../';\n\n<React.Fragment>\n    <Grid childWidthSmall=\"1-3\">\n        <Panel panel>Lorem ipsum dolor sit amet, consectetur adipisicing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua.</Panel>\n        <Panel panel>Lorem ipsum dolor sit amet, consectetur adipisicing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua.</Panel>\n        <Panel panel>Lorem ipsum dolor sit amet, consectetur adipisicing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua.</Panel>\n    </Grid>\n</React.Fragment>",settings:{},evalInContext:i},{type:"markdown",content:'<br /><br /><hr />\n\n### Scrollable Panel\n\n| PROPS                                        | DESCRIPTION                                                                                                                                                                                         |\n| -------------------------------------------- | --------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------- |\n| <span style="color:salmon">scrollable</span> | Add the scrollable props to give the panel a fixed height and make it scrollable, if its content exceeds the height. You can also add one of the .uk-height-\\* classes to apply a different height. |'},{type:"code",content:"import { Card, Grid, Panel } from '../';\n\n<React.Fragment>\n    <Panel panel scrollable>s\n    </Panel>\n</React.Fragment>",settings:{},evalInContext:i}]},841:function(e,t,n){e.exports={description:"",displayName:"Section",methods:[],props:[{type:{name:"bool"},required:!1,description:"Adds the default background color of your site",defaultValue:{value:"false",computed:!1},tags:{},name:"default"},{type:{name:"bool"},required:!1,description:"Adds a muted background color",defaultValue:{value:"false",computed:!1},tags:{},name:"muted"},{type:{name:"bool"},required:!1,description:"Adds a primary background color",defaultValue:{value:"false",computed:!1},tags:{},name:"primary"},{type:{name:"bool"},required:!1,description:"Adds a secondary background color",defaultValue:{value:"false",computed:!1},tags:{},name:"secondary"},{type:{name:"bool"},required:!1,description:"Add this prop to decrease a section's padding to a minimum",defaultValue:{value:"false",computed:!1},tags:{},name:"xsmall"},{type:{name:"bool"},required:!1,description:"Add this prop to decrease a section's padding",defaultValue:{value:"false",computed:!1},tags:{},name:"small"},{type:{name:"bool"},required:!1,description:"Add this prop to increase a section's padding",defaultValue:{value:"false",computed:!1},tags:{},name:"large"},{type:{name:"bool"},required:!1,description:"Add this prop to further increase a section's padding",defaultValue:{value:"false",computed:!1},tags:{},name:"xlarge"},{type:{name:"node"},required:!1,description:"Pass children elements to this element",defaultValue:{value:"undefined",computed:!0},tags:{},name:"children"}],doclets:{},examples:n(842)}},842:function(e,t,n){var a={react:n(2),"./Section.js":n(99)},o=n(9).default.bind(null,a),i=n(10).default.bind(null,"const React$0 = require('react');\nconst React = React$0['React'] || (React$0.default || React$0);\nconst Section$0 = require('./Section.js');\nconst Section = Section$0['Section'] || (Section$0.default || Section$0);",o);e.exports=[{type:"markdown",content:"<https://getuikit.com/docs/section>\n\n### Usage\n\nSections are used to separate the content of a page into differently styled blocks. To apply this component, just add the style modifier props to a container element. You can place a container from the Grid component to modify the width of the content inside sections and add horizontal padding. Note that the padding of a nested container will be reset.\n\n### Style modifiers\n\nTo apply different background colors and paddings, add one of the following classes."},{type:"code",content:'<React.Fragment>\n    <Section>Default</Section>\n    <Section muted>Muted</Section>\n    <Section primary>Primary</Section>\n    <Section secondary>Secondary</Section>\n    <Section secondary image="https://camo.githubusercontent.com/a3dde86ab1e0f8ea7a7222188481b136520f3226/68747470733a2f2f6c68352e676f6f676c6575736572636f6e74656e742e636f6d2f2d494b336f6a4e4c416641492f5552524f717063752d53492f41414141414141414c44382f42476478644339753270492f73323536302f50657363616465726f42656e63682e6a7067">Secondary with image background</Section>\n</React.Fragment>',settings:{},evalInContext:i},{type:"markdown",content:"By default, a section is blank. That is why it is important to add a modifier class for styling. In our example we are using the muted props.\n\n### Size modifiers\n\nYou can add different paddings to each section or remove it altogether."},{type:"code",content:"<React.Fragment>\n    <Section primary>Default size modifier</Section>\n    <Section secondary xsmall>Decrease a section's padding to a minimum using the xsmall size modifier</Section>\n    <Section primary small>Decrease a section's padding using the small size modifier</Section>\n    <Section secondary large>Increase a section's padding using the large size modifier</Section>\n    <Section primary xlarge>Increase a section's padding to a maximum using the xlarge size modifier</Section>\n    <Section secondary removeVertical>Remove a section's padding using the removeVertical size modifier</Section>\n</React.Fragment>",settings:{},evalInContext:i}]},843:function(e,t,n){e.exports={description:"",displayName:"Text",methods:[],doclets:{},examples:n(844)}},844:function(e,t,n){var a={react:n(2),"./Text.js":n(209)},o=n(9).default.bind(null,a),i=n(10).default.bind(null,"const React$0 = require('react');\nconst React = React$0['React'] || (React$0.default || React$0);\nconst Text$0 = require('./Text.js');\nconst Text = Text$0['Text'] || (Text$0.default || Text$0);",o);e.exports=[{type:"markdown",content:"<https://getuikit.com/docs/text>\n\nA collection of utility props to style text.\n\n### Style modifiers\n\nReact-uikit offers various text utilities to style your text."},{type:"code",content:"<React.Fragment>\n\n</React.Fragment>",settings:{},evalInContext:i},{type:"markdown",content:"xxx\n\n### Size modifiers\n\nxxx"},{type:"code",content:"<React.Fragment>\n\n</React.Fragment>",settings:{},evalInContext:i}]},845:function(e,t,n){e.exports={description:"",displayName:"Utility",methods:[],doclets:{},examples:n(846)}},846:function(e,t,n){var a={"../":n(25),react:n(2),"./Utility.js":n(210)},o=n(9).default.bind(null,a),i=n(10).default.bind(null,"const React$0 = require('react');\nconst React = React$0['React'] || (React$0.default || React$0);\nconst Utility$0 = require('./Utility.js');\nconst Utility = Utility$0['Utility'] || (Utility$0.default || Utility$0);",o);e.exports=[{type:"markdown",content:'### Clearing and Floating\n\n<https://getuikit.com/docs/utility#overflow>\n\nFloating elements are taken from the document flow and aligned to the left or right side of their container.\nIt is important to clear floats or in the worst case, you might end up with a scrambled site.\nThe following classes will help you to set up basic layouts.\n\n| PROPS                                        | DESCRIPTION                                                                                                                                                                               |\n| -------------------------------------------- | ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------- |\n| <span style="color:salmon">floatLeft</span>  | Add this prop to float the element to the left.                                                                                                                                           |\n| <span style="color:salmon">floatRight</span> | Add this prop to float the element to the right.                                                                                                                                          |\n| <span style="color:salmon">clearFix</span>   | Add this class to a parent container to clear floats. Alternatively, you can create a new block format context, e.g. by adding the <span style="color:salmon">overflowHidden</span> prop. |'},{type:"code",content:"import { Card, Panel } from '../';\n\n<React.Fragment>\n    <Panel clearFix>\n        <Panel floatRight>\n            <Card default body>Right</Card>\n        </Panel>\n        <Panel floatLeft>\n            <Card default body>Left</Card>\n        </Panel>\n    </Panel>\n</React.Fragment>",settings:{},evalInContext:i},{type:"markdown",content:'<br /><br /><hr />\n\n### Overflow\n\n<https://getuikit.com/docs/utility#overflow>\n\nThese utilities provide different classes to modify an element\'s overflow behavior.\n\n| PROPS                                            | DESCRIPTION                                                                                                                                                          |\n| ------------------------------------------------ | -------------------------------------------------------------------------------------------------------------------------------------------------------------------- |\n| <span style="color:salmon">overflowHidden</span> | Add this prop to clip content that exceeds the dimensions of its container.                                                                                          |\n| <span style="color:salmon">overflowAuto</span>   | Add this prop to create a container that provides a horizontal or vertical scrollbar whenever the elements content it are wider or higher than the container itself. |'},{type:"code",content:"import { Card, Grid, Panel } from '../';\n\n<React.Fragment>\n// TODO: table\n\n</React.Fragment>",settings:{},evalInContext:i},{type:"markdown",content:"Add the overflowAuto attribute to expand an element's height to make it fill the remaining height of a parent container.\nIt provides a vertical scrollbar if its content is higher than the expanded height."},{type:"code",content:"import { Grid, Panel } from '../';\n\n<React.Fragment>\n    <Panel heightMedium>\n        <p>Some content before the overflow auto container.</p>\n        <Panel >\n            // TODO: js-wrapper\n        </Panel>\n        <p>Some content after the overflow auto container.</p>\n    </Panel>\n</React.Fragment>",settings:{},evalInContext:i},{type:"markdown",content:'<br /><br /><hr />\n\n### Resize\n\n<https://getuikit.com/docs/utility#resize>\n\nThese utilities provide different props for resizing elements.\n\n| PROPS                                            | DESCRIPTION                                               |\n| ------------------------------------------------ | --------------------------------------------------------- |\n| <span style="color:salmon">resize</span>         | Add this prop to enable horizontal and vertical resizing. |\n| <span style="color:salmon">resizeVertical</span> | Add this prop to enable only vertical resizing.           |'},{type:"code",content:'import { CodeBlock, Grid, Panel } from \'../\';\n\n<React.Fragment>\n    <Grid childWidthSmall="1-2">\n        <Panel>\n// TODO: Codeblock\n            <CodeBlock resizeVertical>\n                &lt;!-- Resize vertically --&gt;\n                &lt;div uk-grid&gt;\n                    &lt;div class="uk-width-1-2"&gt;...&lt;/div&gt;\n                    &lt;div class="uk-width-1-2"&gt;...&lt;/div&gt;\n                &lt;/div&gt;\n                \n                &lt;div class="uk-child-width-1-2" uk-grid&gt;\n                    &lt;div&gt;&lt;/div&gt;\n                    &lt;div&gt;&lt;/div&gt;\n                &lt;/div&gt;\n            </CodeBlock>\n        </Panel>\n        <Panel>\n            <CodeBlock resize>\n                &lt;!-- Resize vertically --&gt;\n                &lt;div uk-grid&gt;\n                    &lt;div class="uk-width-1-2"&gt;...&lt;/div&gt;\n                    &lt;div class="uk-width-1-2"&gt;...&lt;/div&gt;\n                &lt;/div&gt;\n                \n                &lt;div class="uk-child-width-1-2" uk-grid&gt;\n                    &lt;div&gt;&lt;/div&gt;\n                    &lt;div&gt;&lt;/div&gt;\n                &lt;/div&gt;\n            </CodeBlock>\n        </Panel>\n    </Grid>\n</React.Fragment>',settings:{},evalInContext:i},{type:"markdown",content:'<br /><br /><hr />\n\n### Display\n\n<https://getuikit.com/docs/utility#display>\n\nAdd one of these props to change the display properties of an element.\n\n| PROPS                                                | DESCRIPTION                                                |\n| ---------------------------------------------------- | ---------------------------------------------------------- |\n| <span style="color:salmon">displayBlock</span>       | Forces the element to behave like a block element.         |\n| <span style="color:salmon">displayInline</span>      | Forces the element to behave like an inline element.       |\n| <span style="color:salmon">displayInlineBlock</span> | Forces the element to behave like an inline-block element. |\n\n<br /><br /><hr />\n\n### Inline\n\n<https://getuikit.com/docs/utility#inline>\n\nThese props are often used to create a position context on containers with an image as a child.\nThe container keeps the same size as the image as well as the responsive behavior.\nThat way content that is placed on top of the image with the <a href="#/Position">Position component</a> will not flow out of the image dimensions.\n\n| PROPS                                        | DESCRIPTION                                                                                                           |\n| -------------------------------------------- | --------------------------------------------------------------------------------------------------------------------- |\n| <span style="color:salmon">inline</span>     | Add this prop to apply inline-block behavior to an element, add a max-width of 100% and to create a position context. |\n| <span style="color:salmon">inlineClip</span> | Same as <span style="color:salmon">inline</span>, it but also clips overflowing child elements.                       |'},{type:"code",content:'import { Card, Grid, Image, Panel } from \'../\';\n\n<React.Fragment>\n    <Panel inline>\n        <Image src="https://getuikit.com/docs/images/photo.jpg" width="300" alt="" />\n        // TODO: Overlay\n    </Panel>\n</React.Fragment>',settings:{},evalInContext:i},{type:"markdown",content:'<br /><br /><hr />\n\n### Responsive Objects\n\n<https://getuikit.com/docs/utility#responsive-objects>\n\nIn react-uikit image, canvas, audio and video elements adapt to the width of their parent container by default.\nTo apply responsive behavior to iframes, add the responsive attribute.\nFor other elements or to apply a different behavior, just add one of the following props.\n\n| PROPS                                              | DESCRIPTION                                                                                                                                                                                                                                                                                              |\n| -------------------------------------------------- | -------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------- |\n| <span style="color:salmon">responsiveWidth</span>  | Add this prop to apply the same responsive behavior to any other element. It adjusts the object\'s width according to its parent\'s width, keeping the original aspect ratio.                                                                                                                              |\n| <span style="color:salmon">responsiveHeight</span> | Add this prop to adjust the object\'s height (instead of its width) according to its parent\'s height, keeping the original aspect ratio.                                                                                                                                                                  |\n| <span style="color:salmon">preserveWidth</span>    | Add this prop to avoid the default responsive behavior and preserve the original image dimensions. You can also add the prop to a parent element and it will be applied to all relevant elements content it. If you are embedding Google Maps into your site, you may need this to fix the map\'s images. |\n\n<br /><br /><hr />\n\n### Border Radius\n\n<https://getuikit.com/docs/utility#border-radius>\n\nTo modify the border radius of an element, like an image, add one of the following props.\n\n| PROPS                                           | DESCRIPTION                             |\n| ----------------------------------------------- | --------------------------------------- |\n| <span style="color:salmon">borderRounded</span> | Add this prop to apply rounded corners. |\n| <span style="color:salmon">borderCircle</span>  | Add this prop to apply a circled shape. |\n| <span style="color:salmon">borderPill</span>    | Add this prop to apply a pill shape.    |'},{type:"code",content:'import { Image } from \'../\';\n\n<React.Fragment>\n    <Image borderRounded src="https://getuikit.com/docs/images/avatar.jpg" width="200" height="200" alt="Border rounded" />\n    <Image borderCircle src="https://getuikit.com/docs/images/avatar.jpg" width="200" height="200" alt="Border circle" />\n    <Image borderPill src="https://getuikit.com/docs/images/avatar.jpg" width="200" height="200" alt="Border pill" />\n</React.Fragment>',settings:{},evalInContext:i},{type:"markdown",content:'<br /><br /><hr />\n\n### Box Shadow\n\n<https://getuikit.com/docs/utility#box-shadow>\n\nYou can apply different box shadows to elements. Just add one of the following props.\n\n| PROPS                                             | DESCRIPTION                                      |\n| ------------------------------------------------- | ------------------------------------------------ |\n| <span style="color:salmon">boxShadowSmall</span>  | Add this class to apply a small box shadow.      |\n| <span style="color:salmon">boxShadowMedium</span> | Add this class to apply a medium box shadow.     |\n| <span style="color:salmon">boxShadowLarge</span>  | Add this class to apply a large box shadow.      |\n| <span style="color:salmon">boxShadowXLarge</span> | Add this class to apply a very large box shadow. |'},{type:"code",content:"import { Grid, Panel } from '../';\n\n<React.Fragment>\n    <Grid childWidthSmall=\"1-2\" textCenter>\n        <Panel>\n            <Panel boxShadowSmall padding>Small</Panel>\n        </Panel>\n        <Panel>\n            <Panel boxShadowMedium padding>Medium</Panel>\n        </Panel>\n        <Panel>\n            <Panel boxShadowLarge padding>Large</Panel>\n        </Panel>\n        <Panel>\n            <Panel boxShadowXLarge padding>XLarge</Panel>\n        </Panel>\n    </Grid>\n</React.Fragment>",settings:{},evalInContext:i},{type:"markdown",content:'<br /><br /><hr />\n\n### Transform Origin\n\n<https://getuikit.com/docs/utility#transform-origin>\n\nTo modify the origin of an animation, like scaling, add one of the transformOrigin\\* props.\nThis can be combined with the <a href="#/Animation">Animation component</a>.\n\n| PROPS                                                         | DESCRIPTION                                      |\n| ------------------------------------------------------------- | ------------------------------------------------ |\n| <span style="color:salmon">transformOriginTopLeft</span>      | The transition originates from the top left.     |\n| <span style="color:salmon">transformOriginTopCenter</span>    | The transition originates from the top.          |\n| <span style="color:salmon">transformOriginTopRight</span>     | The transition originates from the top right.    |\n| <span style="color:salmon">transformOriginCenterLeft</span>   | The transition originates from the left.         |\n| <span style="color:salmon">transformOriginCenterRight</span>  | The transition originates from the right.        |\n| <span style="color:salmon">transformOriginBottomLeft</span>   | The transition originates from the bottom left.  |\n| <span style="color:salmon">transformOriginBottomCenter</span> | The transition originates from the bottom.       |\n| <span style="color:salmon">transformOriginBottomRight</span>  | The transition originates from the bottom right. |'},{type:"code",content:"import { Card, Grid, Panel } from '../';\n\n<React.Fragment>\n    <Grid childWidthMedium=\"1-3\">\n        <Panel animationToggle>\n            <Card default body animationScaleUp transformOriginBottomRight>Bottom Right</Card>\n        </Panel>\n        <Panel animationToggle>\n            <Card default body animationScaleUp transformOriginTopCenter>Top Center</Card>\n        </Panel>\n        <Panel animationToggle>\n            <Card default body animationScaleUp transformOriginBottomCenter>Bottom Center</Card>\n        </Panel>\n    </Grid>\n</React.Fragment>",settings:{},evalInContext:i}]},847:function(e,t,n){e.exports={description:"",displayName:"Visibility",methods:[],doclets:{},examples:n(848)}},848:function(e,t,n){var a={"../":n(25),react:n(2),"./Visibility.js":n(211)},o=n(9).default.bind(null,a),i=n(10).default.bind(null,"const React$0 = require('react');\nconst React = React$0['React'] || (React$0.default || React$0);\nconst Visibility$0 = require('./Visibility.js');\nconst Visibility = Visibility$0['Visibility'] || (Visibility$0.default || Visibility$0);",o);e.exports=[{type:"markdown",content:'<https://getuikit.com/docs/visibility>\n\n### Define the width of elements for different viewport sizes.\n\nUse responsive visibility props to display or hide elements on different devices.\n\n<br /><br /><hr />\n\n### Usage\n\nAdd one of these props to hide an element.\n\n| PROPS                                       | DESCRIPTION                                                   |\n| ------------------------------------------- | ------------------------------------------------------------- |\n| <span style="color:salmon">hidden</span>    | Hides the element on any device.                              |\n| <span style="color:salmon">invisible</span> | Hides the element without removing it from the document flow. |\n\n<br /><br /><hr />\n\n### Responsive\n\nThis component provides responsive props to hide or display elements on different viewports.\n\n#### Hidden\n\nUse one of the props to hide the element from screens larger than a specified width.\n\n| PROPS                                          | DESCRIPTION                                                                        |\n| ---------------------------------------------- | ---------------------------------------------------------------------------------- |\n| <span style="color:salmon">hiddenSmall</span>  | Only affects device widths of <span style="color:salmon">640px</span> and larger.  |\n| <span style="color:salmon">hiddenMedium</span> | Only affects device widths of <span style="color:salmon">960px</span> and larger.  |\n| <span style="color:salmon">hiddenLarge</span>  | Only affects device widths of <span style="color:salmon">1200px</span> and larger. |\n| <span style="color:salmon">hiddenXLarge</span> | Only affects device widths of <span style="color:salmon">1600px</span> and larger. |\n\nIn this example the green elements are hidden on screens that are larger than the defined breakpoint.\nResize your browser window to see the effect.'},{type:"code",content:'import { Card, Grid, Panel } from \'../\';\n<React.Fragment>\n    <Grid small childWidth="1-2" childWidthSmall="1-4" textCenter>\n        <Panel panel>\n            <Card default body>Expand</Card>\n        </Panel>\n        <Panel panel>\n            <Card default body>width="1-3"</Card>\n        </Panel>\n        <Panel panel>\n            <Card default body>Expand</Card>\n        </Panel>\n        <Panel panel>\n            <Card default body>Expand</Card>\n        </Panel>\n    </Grid>\n</React.Fragment>',settings:{},evalInContext:i}]},849:function(e,t,n){e.exports={description:"",displayName:"Width",methods:[],doclets:{},examples:n(850)}},850:function(e,t,n){var a={"../":n(25),react:n(2),"./Width.js":n(212)},o=n(9).default.bind(null,a),i=n(10).default.bind(null,"const React$0 = require('react');\nconst React = React$0['React'] || (React$0.default || React$0);\nconst Width$0 = require('./Width.js');\nconst Width = Width$0['Width'] || (Width$0.default || Width$0);",o);e.exports=[{type:"markdown",content:'<https://getuikit.com/docs/width>\n\n### Define the width of elements for different viewport sizes.\n\nReact-uikit\'s width component is often used in combination with grids to split content into responsive columns.\nYou can apply fractions, automatic width or expand units to fill the remaining space and combine these modes.\n\n### Usage\n\nAdd one of the <span style="color:darkturquoise">values</span> to the responsive <span style="color:salmon">width props</span> on an element to determine its size.\nTypically, you would use a grid from the Grid component and its child elements to create the units.\n\n| VALUE                                               | DESCRIPTION                                           |\n| --------------------------------------------------- | ----------------------------------------------------- |\n| <span style="color:darkturquoise">1-1</span>        | Fills 100% of the available width.                    |\n| <span style="color:darkturquoise">1-2</span>        | The element takes up halves of its parent container.  |\n| <span style="color:darkturquoise">1-3 to 2-3</span> | The element takes up thirds of its parent container.  |\n| <span style="color:darkturquoise">1-4 to 3-4</span> | The element takes up fourths of its parent container. |\n| <span style="color:darkturquoise">1-5 to 4-5</span> | The element takes up fifths of its parent container.  |\n| <span style="color:darkturquoise">1-6 to 5-6</span> | The element takes up sixths of its parent container.  |\n\n<span style="color:blue">We remove redundancy into each set of unit classes, so that for instance instead of </span><span style="color:salmon">width="</span><span style="color:darkturquoise">3-6</span><span style="color:salmon">" </span> <span style="color:blue"> you should use </span><span style="color:salmon">width="</span><span style="color:darkturquoise">1-2</span><span style="color:salmon">"</span><br /><br />\n\n### Responsive Width\n\nReact-uikit provides a number of responsive width props.\nBasically they work just like the usual width props, except that they have suffixes width\\* (widthS, widthM, widthL, widthXL) that represent the breakpoint from which they come to effect.\nThese classes can be combined with the Visibility component.\nThis is great to adjust your layout and content for different device sizes.\n\n| PROPS                                         | DESCRIPTION                                                                                                             |\n| --------------------------------------------- | ----------------------------------------------------------------------------------------------------------------------- |\n| <span style="color:salmon">width</span>       | Affects all device widths, grid columns stay side by side.                                                              |\n| <span style="color:salmon">widthSmall</span>  | Affects device widths of <span style="color:salmon">640px</span> and larger. Grid columns will stack on smaller sizes.  |\n| <span style="color:salmon">widthMedium</span> | Affects device widths of <span style="color:salmon">960px</span> and larger. Grid columns will stack on smaller sizes.  |\n| <span style="color:salmon">widthLarge</span>  | Affects device widths of <span style="color:salmon">1200px</span> and larger. Grid columns will stack on smaller sizes. |\n| <span style="color:salmon">widthXLarge</span> | Affects device widths of <span style="color:salmon">1600px</span> and larger. Grid columns will stack on smaller sizes. |'},{type:"code",content:'import { Card, Grid, Panel } from \'../\';\n\n<React.Fragment>\n    <Grid textCenter>\n        <Panel width="1-3">\n            <Card default body>item</Card>\n        </Panel>\n        <Panel width="1-3">\n            <Card default body>item</Card>\n        </Panel>\n        <Panel width="1-3">\n            <Card default body>item</Card>\n        </Panel>\n    </Grid>\n    <Grid textCenter>\n        <Panel width="1-2">\n            <Card default body>item</Card>\n        </Panel>\n        <Panel width="1-2">\n            <Card default body>item</Card>\n        </Panel>\n    </Grid>\n    <Grid textCenter>\n        <Panel width="1-4">\n            <Card default body>item</Card>\n        </Panel>\n        <Panel width="3-4">\n            <Card default body>item</Card>\n        </Panel>\n    </Grid>\n</React.Fragment>',settings:{},evalInContext:i},{type:"markdown",content:'### Auto & Expand\n\nThe Width component provides additional modifiers to give you more flexibility in the distribution of items.\n\n| PROPS                                    | DESCRIPTION                                                            |\n| ---------------------------------------- | ---------------------------------------------------------------------- |\n| <span style="color:salmon">auto</span>   | The item expands only to the width of its own content.                 |\n| <span style="color:salmon">expand</span> | The item expands to fill up the remaining space of the grid container. |'},{type:"code",content:"import { Card, Grid, Panel } from '../';\n<React.Fragment>\n    <Grid textCenter>\n        <Panel widthAuto>\n            <Card default body>auto</Card>\n        </Panel>\n        <Panel widthExpand>\n            <Card default body>expand</Card>\n        </Panel>\n    </Grid>\n</React.Fragment>",settings:{},evalInContext:i},{type:"markdown",content:'### Equal Child Widths\n\nTo create a grid whose child elements\' widths are evenly split, you don\'t have to apply the same props to each list item within the grid.\nJust add the width and child props to the grid itself.\n\n| VALUE                                        | DESCRIPTION                                              |\n| -------------------------------------------- | -------------------------------------------------------- |\n| <span style="color:darkturquoise">1-2</span> | All elements take up half of their parent container.     |\n| <span style="color:darkturquoise">1-3</span> | All elements take up a third of their parent container.  |\n| <span style="color:darkturquoise">1-4</span> | All elements take up a fourth of their parent container. |\n| <span style="color:darkturquoise">1-5</span> | All elements take up a fifth of their parent container.  |\n| <span style="color:darkturquoise">1-6</span> | All elements take up a sixth of their parent container.  |\n\n<span style="color:blue">Use the width prop (</span><span style="color:salmon">width="</span><span style="color:darkturquoise">1-6</span><span style="color:salmon">" </span> <span style="color:blue">), along with the child prop (</span><span style="color:salmon">child</span><span style="color:blue">) on a Grid</span><br /><br />\n\n| PROPS                                    | DESCRIPTION                                                         |\n| ---------------------------------------- | ------------------------------------------------------------------- |\n| <span style="color:salmon">child</span>  | Grid\'s child elements\' are evenly split.                            |\n| <span style="color:salmon">auto</span>   | Divides the grid into equal units depending on the content size.    |\n| <span style="color:salmon">expand</span> | Divides the grid into equal units depending on the available space. |'},{type:"code",content:"import { Card, Grid, Panel } from '../';\n<React.Fragment>\n    <Grid childWidth=\"1-4\" small textCenter>\n        <Panel>\n            <Card default body>Item</Card>\n        </Panel>\n        <Panel>\n            <Card default body>Item</Card>\n        </Panel>\n        <Panel>\n            <Card default body>Item</Card>\n        </Panel>\n        <Panel>\n            <Card default body>Item</Card>\n        </Panel>\n        <Panel>\n            <Card default body>Item</Card>\n        </Panel>\n    </Grid>\n</React.Fragment>",settings:{},evalInContext:i},{type:"markdown",content:"Items that use width props with fractions will break into a new row, if they no longer fit their container's width.\nWhen using one of the expand props, however, the space will be evenly distributed among items that always stay in the same row."},{type:"code",content:"import { Card, Grid, Panel } from '../';\n<React.Fragment>\n    <Grid childWidthExpand small textCenter>\n        <Panel>\n            <Card default body>Item</Card>\n        </Panel>\n        <Panel>\n            <Card default body>Item</Card>\n        </Panel>\n        <Panel>\n            <Card default body>Item</Card>\n        </Panel>\n        <Panel>\n            <Card default body>Item</Card>\n        </Panel>\n        <Panel>\n            <Card default body>Item</Card>\n        </Panel>\n    </Grid>\n</React.Fragment>",settings:{},evalInContext:i},{type:"markdown",content:'### Fixed width\n\nIn addition to the calculated width props, you can also add one of the following props, which apply fixed widths.\n\n| PROPS                                          | DESCRIPTION                                                       |\n| ---------------------------------------------- | ----------------------------------------------------------------- |\n| <span style="color:salmon">widthSmall</span>   | Applies a fixed width of <span style="color:salmon">150px</span>. |\n| <span style="color:salmon">widthMedium</span>  | Applies a fixed width of <span style="color:salmon">300px</span>. |\n| <span style="color:salmon">widthLarge</span>   | Applies a fixed width of <span style="color:salmon">450px</span>. |\n| <span style="color:salmon">widthXLarge</span>  | Applies a fixed width of <span style="color:salmon">600px</span>. |\n| <span style="color:salmon">widthXXLarge</span> | Applies a fixed width of <span style="color:salmon">750px</span>. |'},{type:"code",content:"import { Card, Grid, Panel } from '../';\n<React.Fragment>\n    <Panel widthSmall margin>\n        <Card default body small>widthSmall</Card>\n    </Panel>\n    <Panel widthMedium margin>\n        <Card default body small>widthMedium</Card>\n    </Panel>\n    <Panel widthLarge margin>\n        <Card default body small>widthLarge</Card>\n    </Panel>\n    <Panel widthXLarge margin>\n        <Card default body small>widthXLarge</Card>\n    </Panel>\n    <Panel widthXXLarge>\n        <Card default body small>widthXXLarge</Card>\n    </Panel>\n</React.Fragment>",settings:{},evalInContext:i},{type:"markdown",content:'### Mixing widths\n\nYou can also combine the child and expand or auto on the Grid and the width="1-3" classes for individual items.\nThat way it is possible, for example, to create a grid with one item that has a specific width and all other items expanding to fill the remaining space.'},{type:"code",content:'import { Card, Grid, Panel } from \'../\';\n<React.Fragment>\n    <Grid childWidthExpand small textCenter>\n        <Panel>\n            <Card default body>Expand</Card>\n        </Panel>\n        <Panel width="1-3">\n            <Card default body>width="1-3"</Card>\n        </Panel>\n        <Panel>\n            <Card default body>Expand</Card>\n        </Panel>\n        <Panel>\n            <Card default body>Expand</Card>\n        </Panel>\n    </Grid>\n</React.Fragment>',settings:{},evalInContext:i},{type:"markdown",content:"### Responsive width\n\nReact-uikit provides a number of responsive widths props. Basically they work just like the usual width props,\nexcept that they have suffixes that represent the breakpoint from which they come to effect.\nThese props can be combined with the Visibility component.\nThis is great to adjust your layout and content for different device sizes."},{type:"code",content:'import { Card, Grid, Panel } from \'../\';\n<React.Fragment>\n    <Grid match small textCenter>\n        <Panel widthMedium="1-2">\n            <Card default body>widthMedium="1-2"</Card>\n        </Panel>\n        <Panel widthMedium="1-4">\n            <Card default body>widthMedium="1-4"</Card>\n        </Panel>\n        <Panel widthMedium="1-4">\n            <Card default body>widthMedium="1-4"</Card>\n        </Panel>\n        <Panel widthMedium="1-5" hiddenLarge>\n            <Card default body>widthMedium="1-5"<br />hiddenLarge</Card>\n        </Panel>\n        <Panel widthMedium="1-5" widthLarge="1-3">\n            <Card secondary body>widthMedium="1-5"<br />widthLarge="1-3"</Card>\n        </Panel>\n        <Panel widthMedium="3-5" widthLarge="2-3">\n            <Card default body>widthMedium="3-5"<br />widthLarge="2-3"</Card>\n        </Panel>\n    </Grid>\n\n    <Grid match small textCenter>\n        <Panel widthAutoMedium visibleLarge>\n            <Card primary body>widthAutoMedium<br />visibleLarge</Card>\n        </Panel>\n        <Panel widthMedium="1-3">\n            <Card default body>widthMedium="1-3"</Card>\n        </Panel>\n        <Panel widthExpandMedium>\n            <Card default body>widthExpandMedium</Card>\n        </Panel>\n    </Grid>\n</React.Fragment>',settings:{},evalInContext:i}]},96:function(e,t,n){"use strict";n.r(t);var a=n(2),o=n.n(a),i=n(4),r=n.n(i),l=n(13),s=function(e){return o.a.createElement("div",Object.assign({className:d(e)},l.a.applyHeightAttributes(e)),e.children)},d=function(e){return r()("uk-alert",{"uk-alert":e.xxx}," ")};s.defaultProps={children:void 0},t.default=s},97:function(e,t,n){},98:function(e,t,n){"use strict";n.r(t);var a=n(2),o=n.n(a),i=n(4),r=n.n(i),l=n(13),s=function(e){if(e.close)return o.a.createElement("button",Object.assign({className:d(e)},l.a.applyHeightAttributes(e),{"uk-close":""}),e.children)},d=function(e){return r()(" ",{"uk-xxx":e.xxx}," ")};s.defaultProps={children:void 0},t.default=s},99:function(e,t,n){"use strict";n.r(t);var a=n(2),o=n.n(a),i=n(4),r=n.n(i),l=(n(97),n(13)),s=function(e){return o.a.createElement("div",Object.assign({className:d(e)},l.a.applyHeightAttributes(e),{style:{backgroundImage:"url("+e.Image+")"}}),e.children)},d=function(e){return r()(" uk-section",{"uk-section-default":e.default},{"uk-section-muted":e.muted},{"uk-section-primary":e.primary},{"uk-section-secondary":e.secondary},{"uk-section-xsmall":e.xsmall},{"uk-section-small":e.small},{"uk-section-large":e.large},{"uk-section-xlarge":e.xlarge}," ")};s.defaultProps={default:!1,muted:!1,primary:!1,secondary:!1,xsmall:!1,small:!1,large:!1,xlarge:!1,children:void 0},t.default=s}},[[228,1,2]]]);