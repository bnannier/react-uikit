(window.webpackJsonp=window.webpackJsonp||[]).push([[0],{100:function(e,n,t){"use strict";t.r(n);var a=t(1),o=t.n(a),i=function(e){if("Animation"===o.a.Children.toArray(e.children)[0].type.name)return o.a.cloneElement(e.children,{cls:!0});console.log("Scrollspy requires Animation Component as child to animate sub components.")};i.defaultProps={children:void 0},n.default=i},101:function(e,n,t){"use strict";t.r(n);var a=t(1),o=t.n(a),i=t(3),r=t.n(i),l=(t(64),t(13)),s=t(6),d=function(e){return o.a.createElement("div",Object.assign({className:m(e)+Object(s.a)(e)},l.a.applyHeightAttributes(e),{style:{backgroundImage:"url("+e.Image+")"}}),e.children)},m=function(e){return r()(" uk-section",{"uk-section-default":e.default},{"uk-section-muted":e.muted},{"uk-section-primary":e.primary},{"uk-section-secondary":e.secondary},{"uk-section-xsmall":e.xsmall},{"uk-section-small":e.small},{"uk-section-large":e.large},{"uk-section-xlarge":e.xlarge}," ")};d.defaultProps={default:!1,muted:!1,primary:!1,secondary:!1,xsmall:!1,small:!1,large:!1,xlarge:!1,children:void 0},n.default=d},102:function(e,n,t){"use strict";t.r(n);var a=t(1),o=t.n(a),i=t(3),r=t.n(i),l=t(6),s=function(e){for(var n=[],t=0;t<e.length;t++)n.push(o.a.createElement("th",{key:"header- ".concat(t)},e[t]));return n},d=function(e){for(var n=[],t=0;t<e.length;t++)n.push(o.a.createElement("td",{key:"footer- ".concat(t)},e[t]));return n},m=function(e){for(var n=[],t=0;t<e.length;t++)n.push(o.a.createElement("tr",{key:"body- ".concat(t)},p(e[t])));return n},p=function(e){for(var n=[],t=0;t<e.length;t++)n.push(o.a.createElement("td",{key:"body-row- ".concat(t)},e[t]));return n},c=function(e){return r()(" uk-table",{"uk-table-striped":e.striped},{"uk-table-condensed":e.condensed}," ")};n.default=function(e){return o.a.createElement("table",{className:c(e)+Object(l.a)(e)},function(e){return o.a.createElement(o.a.Fragment,null,o.a.createElement("thead",null,o.a.createElement("tr",null,s(e.header))),o.a.createElement("tfoot",null,o.a.createElement("tr",null,d(e.footer))),o.a.createElement("tbody",null,m(e.body)))}(e.data))}},103:function(e,n,t){"use strict";t.r(n);var a=t(1),o=t.n(a),i=t(0),r=t.n(i),l=t(3),s=t.n(l),d=function(e){return s()(" ",{"uk-panel":e.panel},{"uk-panel-scrollable":e.scrollable}," ")};d.propTypes={panel:r.a.bool,scrollable:r.a.bool},d.defaultProps={panel:!1,scrollable:!1};var m=d,p=t(54),c=t(42),u=function(e){return s()(" ",{"uk-hidden":e.hidden},{"uk-hidden@s":e.hiddenSmall},{"uk-hidden@m":e.hiddenMedium},{"uk-hidden@l":e.hiddenLarge},{"uk-hidden@xl":e.hiddenXLarge},{"uk-visible":e.visible},{"uk-visible@s":e.visibleSmall},{"uk-visible@m":e.visibleMedium},{"uk-visible@l":e.visibleLarge},{"uk-visible@xl":e.visibleXLarge},{"uk-invisible":e.invisible}," ")};u.propTypes={hidden:r.a.bool,hiddenSmall:r.a.bool,hiddenMedium:r.a.bool,hiddenLarge:r.a.bool,hiddenXLarge:r.a.bool,visible:r.a.bool,visibleSmall:r.a.bool,visibleMedium:r.a.bool,visibleLarge:r.a.bool,visibleXLarge:r.a.bool,invisible:r.a.bool},u.defaultProps={hidden:!1,hiddenSmall:!1,hiddenMedium:!1,hiddenLarge:!1,hiddenXLarge:!1,visible:!1,visibleSmall:!1,visibleMedium:!1,visibleLarge:!1,visibleXLarge:!1,invisible:!1};var g=u,h=t(55),f=t(115),y=t(13),b=t(56),x=function(e){return s()(" ",{"uk-float-left":e.floatLeft},{"uk-float-right":e.floatRight},{"uk-clearfix":e.clearFix}," ")};x.propTypes={floatLeft:r.a.bool,floatRight:r.a.bool,clearFix:r.a.bool},x.defaultProps={floatLeft:!1,floatRight:!1,clearFix:!1};var P=x,v=function(e){return s()(" ",{"uk-overflow-hidden":e.overflowHidden},{"uk-overflow-auto":e.overflowAuto}," ")};v.propTypes={overflowHidden:r.a.bool,overflowAuto:r.a.bool},v.defaultProps={overflowHidden:!1,overflowAuto:!1};var k=v,C=function(e){return s()(" ",{"uk-inline":e.inline},{"uk-inline-clip":e.displayInline}," ")};C.propTypes={inline:r.a.bool,inlineClip:r.a.bool},C.defaultProps={inline:!1,inlineClip:!1};var S=C,R=function(e){return s()(" ",{"uk-box-shadow-small":e.boxShadowSmall},{"uk-box-shadow-medium":e.boxShadowMedium},{"uk-box-shadow-large":e.boxShadowLarge},{"uk-box-shadow-xlarge":e.boxShadowXLarge},{"uk-box-shadow-bottom":e.boxShadowBottom},{"uk-box-shadow-hover-small":e.boxShadowHoverSmall},{"uk-box-shadow-hover-medium":e.boxShadowHoverMedium},{"uk-box-shadow-hover-large":e.boxShadowHoverLarge},{"uk-box-shadow-hover-xlarge":e.boxShadowHoverXLarge}," ")};R.propTypes={boxShadowSmall:r.a.bool,boxShadowMedium:r.a.bool,boxShadowLarge:r.a.bool,boxShadowXLarge:r.a.bool,boxShadowBottom:r.a.bool,boxShadowHoverSmall:r.a.bool,boxShadowHoverMedium:r.a.bool,boxShadowHoverLarge:r.a.bool,boxShadowHoverXLarge:r.a.bool},R.defaultProps={boxShadowSmall:!1,boxShadowMedium:!1,boxShadowLarge:!1,boxShadowXLarge:!1,boxShadowBottom:!1,boxShadowHoverSmall:!1,boxShadowHoverMedium:!1,boxShadowHoverLarge:!1,boxShadowHoverXLarge:!1};var w=R,L=function(e){return s()(" ",{"uk-padding":e.padding},{"uk-padding-small":e.paddingSmall},{"uk-padding-large":e.paddingLarge},{"uk-padding-remove":e.paddingRemove},{"uk-padding-remove-top":e.paddingRemoveTop},{"uk-padding-remove-bottom":e.paddingRemoveBottom},{"uk-padding-remove-left":e.paddingRemoveLeft},{"uk-padding-remove-right":e.paddingRemoveRight},{"uk-padding-remove-vertical":e.paddingRemoveVerticle},{"uk-padding-remove-horizontal":e.paddingRemoveHorizontal}," ")};L.propTypes={padding:r.a.bool,paddingSmall:r.a.bool,paddingLarge:r.a.bool,paddingRemove:!1,paddingRemoveTop:!1,paddingRemoveBottom:!1,paddingRemoveLeft:!1,paddingRemoveRight:!1,paddingRemoveVerticle:!1,paddingRemoveHorizontal:!1},L.defaultProps={padding:!1,paddingSmall:!1,paddingLarge:!1,paddingRemove:!1,paddingRemoveTop:!1,paddingRemoveBottom:!1,paddingRemoveLeft:!1,paddingRemoveRight:!1,paddingRemoveVerticle:!1,paddingRemoveHorizontal:!1};var j=L,I=t(46),A=function(e){return s()(" ",{"uk-light":e.light},{"uk-dark":e.dark})};A.propTypes={light:r.a.bool,dark:r.a.bool},A.defaultProps={light:!1,dark:!1};var T=A,O=t(116),_=function(e){return s()(" ",{"uk-overlay":e.overlay},{"uk-overlay-default":e.overlayDefault},{"uk-overlay-primary":e.overlayPrimary}," ")};_.propTypes={overlay:r.a.bool,overlayDefault:r.a.bool,overlayPrimary:r.a.bool},_.defaultProps={overlay:!1,overlayDefault:!1,overlayPrimary:!1};var E=_,M=t(114),B=t(6),F=function(e){return s()(" ",{"uk-drag":e.drag},{"uk-dragover":e.dragOver}," ")};F.propTypes={drag:r.a.bool,dragOver:r.a.bool},F.defaultProps={drag:!1,dragOver:!1};var G=F,D=function(e){return e.overlayIcon?o.a.createElement("span",Object.assign({className:$(e)+Object(B.a)(e)},Object(I.a)(e),y.a.applyHeightAttributes(e),{"uk-overlay-icon":""}),e.children):o.a.createElement("div",Object.assign({className:$(e)+Object(B.a)(e)},Object(I.a)(e),y.a.applyHeightAttributes(e)),e.children)},$=function(e){return(m(e)+Object(p.a)(e)+Object(c.a)(e)+g(e)+Object(h.a)(e)+Object(f.a)(e)+y.a.applyHeightClasses(e)+Object(b.a)(e)+P(e)+k(e)+S(e)+w(e)+j(e)+T(e)+Object(O.a)(e)+E(e)+G(e)+Object(M.a)(e)).trim()};D.defaultProps={animationToggle:!1,overlayIcon:!1,children:void 0},n.default=D},104:function(e,n,t){"use strict";t.r(n);var a=t(1),o=t.n(a),i=t(3),r=t.n(i),l=(t(64),t(42)),s=t(0),d=t.n(s),m=function(e){return r()(" ",{"uk-align-left":e.alignLeft},{"uk-align-center":e.alignCenter},{"uk-align-right":e.alignRight},{"uk-align-left@s":e.alignLeftSmall},{"uk-align-right@s":e.alignRightSmall},{"uk-align-left@m":e.alignLeftMedium},{"uk-align-right@m":e.alignRightMedium},{"uk-align-left@l":e.alignLeftLarge},{"uk-align-right@l":e.alignRightLarge},{"uk-align-left@xl":e.alignLeftXLarge},{"uk-align-right@xl":e.alignRightXLarge}," ")};m.propTypes={alignLeft:d.a.bool,alignCenter:d.a.bool,alignRight:d.a.bool,alignLeftSmall:d.a.bool,alignRightSmall:d.a.bool,alignLeftMedium:d.a.bool,alignRightMedium:d.a.bool,alignLeftLarge:d.a.bool,alignRightLarge:d.a.bool,alignLeftXLarge:d.a.bool,alignRightXLarge:d.a.bool},m.defaultProps={alignLeft:!1,alignCenter:!1,alignRight:!1,alignLeftSmall:!1,alignRightSmall:!1,alignLeftMedium:!1,alignRightMedium:!1,alignLeftLarge:!1,alignRightLarge:!1,alignLeftXLarge:!1,alignRightXLarge:!1};var p=m,c=function(e){return r()(" ",{"uk-border-rounded":e.borderRounded},{"uk-border-circle":e.borderCircle},{"uk-border-pill":e.borderPill}," ")};c.propTypes={borderRounded:d.a.bool,borderCircle:d.a.bool,borderPill:d.a.bool},c.defaultProps={borderRounded:!1,borderCircle:!1,borderPill:!1};var u=c,g=t(13),h=t(6),f=function(e){return r()(" ",{"uk-blend-multiply":e.blendMultiply},{"uk-blend-screen":e.blendScreen},{"uk-blend-overlay":e.blendOverlay},{"uk-blend-darken":e.blendDarken},{"uk-blend-lighten":e.blendLighten},{"uk-blend-color-dodge":e.blendColorDodge},{"uk-blend-color-burn":e.blendColorBurn},{"uk-blend-hard-light":e.blendHardLight},{"uk-blend-soft-light":e.blendSoftLight},{"uk-blend-difference":e.blendDifference},{"uk-blend-exclusion":e.blendExclusion},{"uk-blend-hue":e.blendHue},{"uk-blend-saturation":e.blendSaturation},{"uk-blend-color":e.blendColor},{"uk-blend-luminosity":e.blendLuminosity}," ")};f.propTypes={blendMultiply:d.a.bool,blendScreen:d.a.bool,blendOverlay:d.a.bool,blendDarken:d.a.bool,blendLighten:d.a.bool,blendColorDodge:d.a.bool,blendColorBurn:d.a.bool,blendHardLight:d.a.bool,blendSoftLight:d.a.bool,blendDifference:d.a.bool,blendExclusion:d.a.bool,blendHue:d.a.bool,blendSaturation:d.a.bool,blendColor:d.a.bool,blendLuminosity:d.a.bool},f.defaultProps={blendMultiply:!1,blendScreen:!1,blendOverlay:!1,blendDarken:!1,blendLighten:!1,blendColorDodge:!1,blendColorBurn:!1,blendHardLight:!1,blendSoftLight:!1,blendDifference:!1,blendExclusion:!1,blendHue:!1,blendSaturation:!1,blendColor:!1,blendLuminosity:!1};var y=f,b=function(e){return o.a.createElement("img",Object.assign({className:x(e)+Object(l.a)(e)+p(e)+u(e)+y(e)+Object(h.a)(e)},g.a.applyHeightAttributes(e),{src:e.src,width:e.width,height:e.height,alt:e.alt,"uk-img":"","uk-scrollspy":e.scrollspy}),e.children)},x=function(e){return r()(" ",{"uk-logo-inverse":e.logoInverse}," ")};b.defaultProps={logoInverse:!1,src:"",children:void 0},n.default=b},105:function(e,n,t){"use strict";t.r(n);var a=t(1),o=t.n(a),i=t(3),r=t.n(i),l=t(6),s=function(e){return o.a.createElement("fieldset",{className:d(e)+Object(l.a)(e)},e.children)},d=function(e){return r()("uk-fieldset")};s.defaultProps={children:void 0};var m=s,p=function(e){return o.a.createElement("legend",{className:c(e)+Object(l.a)(e)},e.children)},c=function(e){return r()("uk-legend")};p.defaultProps={children:void 0};var u=p,g=t(226),h=t.n(g),f=function(e){return o.a.createElement("form",null,e.children)};f.defaultProps={children:void 0},f.Fieldset=m,f.Legend=u,f.Input=h.a,n.default=f},106:function(e,n,t){"use strict";t.r(n);var a=t(1),o=t.n(a),i=t(3),r=t.n(i),l=t(13),s=t(6),d=t(0),m=function(e){return r()(" ",{"uk-disabled":e.disable}," ")};m.propTypes={disable:t.n(d).a.bool},m.defaultProps={disable:!1};var p=m,c=function(e){return e.close?o.a.createElement("button",Object.assign({className:u(e)+p(e)+Object(s.a)(e)},l.a.applyHeightAttributes(e),{"uk-close":""}),e.children):o.a.createElement("button",Object.assign({className:u(e)+p(e)+Object(s.a)(e)},l.a.applyHeightAttributes(e)),e.children)},u=function(e){return r()(" ",{"uk-xxx":e.xxx}," ")};c.defaultProps={children:void 0},n.default=c},107:function(e,n,t){"use strict";t.r(n);var a=t(225),o=t(1),i=t.n(o),r=t(3),l=t.n(r),s=t(54),d=function(e){return i.a.createElement("h3",{className:m(e)},e.children)},m=function(e){return l()("uk-card-title")};d.defaultProps={children:void 0};var p=d,c=t(115),u=t(42),g=t(13),h=t(55),f=t(56),y=t(69),b=t(46),x=t(6),P=function(e){return i.a.createElement("div",Object.assign({className:v(e)+Object(s.a)(e)+Object(c.a)(e)+Object(u.a)(e)+g.a.applyHeightClasses(e)+Object(h.a)(e)+Object(f.a)(e)+Object(y.a)(e)+Object(x.a)(e),style:Object(a.a)({},Object(b.a)(e))},g.a.applyHeightAttributes(e)),e.children)},v=function(e){return l()(" uk-card","".concat(e.class),{"uk-card-body":e.body},{"uk-card-default":e.default},{"uk-card-primary":e.primary},{"uk-card-secondary":e.secondary},{"uk-card-hover":e.hover},{"uk-card-small":e.small},{"uk-card-large":e.large}," ")};P.defaultProps={body:!1,default:!1,primary:!1,secondary:!1,hover:!1,children:void 0},P.Title=p,n.default=P},108:function(e,n,t){"use strict";t.r(n);var a=t(1),o=t.n(a),i=t(3),r=t.n(i),l=t(67),s=t.n(l),d=(t(807),t(64),t(0)),m=t.n(d),p=function(e){return r()(" ",{"uk-resize":e.resize},{"uk-resize-vertical":e.resizeVertical}," ")};p.propTypes={resize:m.a.bool,resizeVertical:m.a.bool},p.defaultProps={resize:!1,resizeVertical:!1};var c=p,u=t(6),g=function(e){return Object(a.useEffect)((function(){s.a.highlightAll()}),[]),o.a.createElement("pre",{className:h(e)+c(e)+Object(u.a)(e)},o.a.createElement("code",{className:"language-".concat(e.language)},e.children))},h=function(e){return r()(" ")};g.defaultProps={language:"",children:void 0},n.default=g},109:function(e,n,t){"use strict";t.r(n);var a=t(1),o=t.n(a),i=t(3),r=t.n(i),l=t(54),s=t(56),d=t(42),m=t(55),p=t(6),c=function(e){return o.a.createElement("div",{className:u(e)+Object(p.a)(e)},e.children)},u=function(e){return r()("uk-grid-item-match")};c.defaultProps={children:void 0};var g=c,h=t(13),f=t(46),y=function(e){return o.a.createElement("div",Object.assign({className:x(e)+Object(l.a)(e)+h.a.applyHeightClasses(e)+Object(s.a)(e)+Object(d.a)(e)+Object(m.a)(e)+Object(p.a)(e)},Object(f.a)(e),h.a.applyHeightAttributes(e),{"uk-grid":b(e)}),e.children)},b=function(e){var n=[];return e.masonry&&n.push("masonry:"+e.masonry),e.parallax&&n.push("parallax:"+e.parallax),n.join(";")},x=function(e){return r()(" ",{"uk-grid-small":e.small},{"uk-grid-medium":e.medium},{"uk-grid-large":e.large},{"uk-grid-collapse":e.collapse},{"uk-grid-column-small":e.columnSmall},{"uk-grid-row-small":e.rowSmall},{"uk-grid-column-medium":e.columnMedium},{"uk-grid-row-medium":e.rowMedium},{"uk-grid-column-large":e.columnLarge},{"uk-grid-row-large":e.rowLarge},{"uk-grid-column-collapse":e.columnCollapse},{"uk-grid-row-collapse":e.rowCollapse},{"uk-grid-divider":e.divider},{"uk-grid-match":e.match}," ")};y.defaultProps={small:!1,medium:!1,large:!1,collapse:!1,columnSmall:!1,rowSmall:!1,columnMedium:!1,rowMedium:!1,columnLarge:!1,rowLarge:!1,columnCollapse:!1,rowCollapse:!1,divider:!1,match:!1,masonry:!1,parallax:0,children:void 0},y.ItemMatch=g,n.default=y},110:function(e,n,t){"use strict";t.r(n);var a=t(1),o=t.n(a),i=function(e){return o.a.createElement("li",null,e.children)};i.defaultProps={children:void 0};var r=i,l=function(e){return o.a.createElement("ul",null,e.children)};l.defaultProps={children:void 0},l.Item=r,n.default=l},114:function(e,n,t){"use strict";var a=t(0),o=t.n(a),i=t(3),r=t.n(i),l=function(e){return r()(" ",{"uk-responsive-width":e.responsiveWidth},{"uk-responsive-height":e.responsiveHeight},{"uk-preserve-width":e.preserveWidth}," ")};l.propTypes={responsiveWidth:o.a.bool,responsiveHeight:o.a.bool,preserveWidth:o.a.bool},l.defaultProps={responsiveWidth:!1,responsiveHeight:!1,preserveWidth:!1},n.a=l},115:function(e,n,t){"use strict";var a=t(0),o=t.n(a),i=t(3),r=t.n(i),l=function(e){return r()(" ",{"uk-background-default":e.backgroundDefault},{"uk-background-muted":e.backgroundMuted},{"uk-background-primary":e.backgroundPrimary},{"uk-background-secondary":e.backgroundSecondary}," ")};l.propTypes={backgroundDefault:o.a.bool,backgroundMuted:o.a.bool,backgroundPrimary:o.a.bool,backgroundSecondary:o.a.bool},l.defaultProps={backgroundDefault:!1,backgroundMuted:!1,backgroundPrimary:!1,backgroundSecondary:!1},n.a=l},116:function(e,n,t){"use strict";var a=t(0),o=t.n(a),i=t(3),r=t.n(i),l=function(e){return r()(" ",{"uk-position-top":e.positionTop},{"uk-position-bottom":e.positionBottom},{"uk-position-left":e.positionLeft},{"uk-position-right":e.positionRight},{"uk-position-top-left":e.positionTopLeft},{"uk-position-top-center":e.positionTopCenter},{"uk-position-top-right":e.positionTopRight},{"uk-position-center-left":e.positionCenterLeft},{"uk-position-center":e.positionCenter},{"uk-position-center-right":e.positionCenterRight},{"uk-position-bottom-left":e.positionBottomLeft},{"uk-position-bottom-center":e.positionBottomCenter},{"uk-position-bottom-right":e.positionBottomRight},{"uk-position-cover":e.positionCover},{"uk-position-center-left-out":e.positionCenterLeftOut},{"uk-position-center-right-out":e.positionCenterRightOut},{"uk-position-small":e.positionSmall},{"uk-position-medium":e.positionMedium},{"uk-position-large":e.positionLarge},{"uk-position-relative":e.positionRelative},{"uk-position-absolute":e.positionAbsolute},{"uk-position-fixed":e.positionFixed},{"uk-position-z-index":e.positionZIndex}," ")};l.propTypes={positionTop:o.a.bool,positionBottom:o.a.bool,positionLeft:o.a.bool,positionRight:o.a.bool,positionTopLeft:o.a.bool,positionTopCenter:o.a.bool,positionTopRight:o.a.bool,positionCenterLeft:o.a.bool,positionCenter:o.a.bool,positionCenterRight:o.a.bool,positionBottomLeft:o.a.bool,positionBottomCenter:o.a.bool,positionBottomRight:o.a.bool,positionCover:o.a.bool,positionCenterLeftOut:!1,positionCenterRightOut:!1,positionSmall:!1,positionMedium:!1,positionLarge:!1,positionRelative:!1,positionAbsolute:!1,positionFixed:!1,positionZIndex:!1},l.defaultProps={positionTop:!1,positionBottom:!1,positionLeft:!1,positionRight:!1,positionTopLeft:!1,positionTopCenter:!1,positionTopRight:!1,positionCenterLeft:!1,positionCenter:!1,positionCenterRight:!1,positionBottomLeft:!1,positionBottomCenter:!1,positionBottomRight:!1,positionCover:!1,positionCenterLeftOut:!1,positionCenterRightOut:!1,positionSmall:!1,positionMedium:!1,positionLarge:!1,positionRelative:!1,positionAbsolute:!1,positionFixed:!1,positionZIndex:!1},n.a=l},13:function(e,n,t){"use strict";var a=t(0),o=t.n(a),i=t(3),r=t.n(i),l=t(227),s={Panel:"div",Card:".uk-card"},d=function(e){return r()(" ",{"uk-height-1-1":e.height1_1},{"uk-height-small":e.heightSmall},{"uk-height-max-small":e.heightMaxSmall},{"uk-height-medium":e.heightMedium},{"uk-height-max-medium":e.heightMaxMedium},{"uk-height-large":e.heightLarge},{"uk-height-max-large":e.heightMaxLarge}," ")};d.propTypes={height1_1:o.a.bool,heightSmall:o.a.bool,heightMaxSmall:o.a.bool,heightMedium:o.a.bool,heightMaxMedium:o.a.bool,heightLarge:o.a.bool,heightMaxLarge:o.a.bool},d.defaultProps={height1_1:!1,heightSmall:!1,heightMaxSmall:!1,heightMedium:!1,heightMaxMedium:!1,heightLarge:!1,heightMaxLarge:!1};var m=function(e){var n=[],t=[],a={};return e.heightViewportOffsetTop&&n.push("offset-top:"+e.heightViewportOffsetTop),e.heightViewportOffsetBottom&&n.push("offset-bottom:"+e.heightViewportOffsetBottom),e.heightViewportExpand&&n.push("expand:"+e.heightViewportExpand),e.heightViewportMinHeight&&n.push("min-height:"+e.heightViewportMinHeight),n.length?a["uk-height-viewport"]=n.join(";"):e.heightViewport&&(a["uk-height-viewport"]=""),e.heightMatchTarget&&t.push("target:"+function(e){for(var n=e,t=0,a=Object.entries(s);t<a.length;t++){var o=a[t],i=Object(l.a)(o,2),r=i[0],d=i[1];n=n.replace(r,d)}return n}(e.heightMatchTarget)),e.heightMatchRow&&t.push("row:"+e.heightMatchRow),t.length?a["uk-height-match"]=t.join(";"):e.heightMatch&&(a["uk-height-match"]=""),a};m.propTypes={heightViewport:o.a.bool,heightViewportOffsetTop:o.a.bool,heightViewportOffsetBottom:o.a.string,heightViewportExpand:o.a.bool,heightViewportMinHeight:o.a.bool,heightMatch:o.a.bool,heightMatchTarget:o.a.string,heightMatchRow:o.a.bool},m.defaultProps={heightViewport:!1,heightViewportOffsetTop:void 0,heightViewportOffsetBottom:void 0,heightViewportExpand:void 0,heightViewportMinHeight:void 0,heightMatch:!1,heightMatchTarget:void 0,heightMatchRow:void 0},n.a={applyHeightClasses:d,applyHeightAttributes:m}},14:function(e,n,t){"use strict";t.r(n),t(64);var a=t(94),o=t(95),i=t(106),r=t(107),l=t(108),s=t(105),d=t(109),m=t(96),p=t(104),c=t(97),u=t(110),g=t(98),h=t(103),f=t(99),y=t(100),b=t(101),x=t(102);t.d(n,"Alert",(function(){return a.default})),t.d(n,"Animation",(function(){return o.default})),t.d(n,"Button",(function(){return i.default})),t.d(n,"Card",(function(){return r.default})),t.d(n,"CodeBlock",(function(){return l.default})),t.d(n,"Form",(function(){return s.default})),t.d(n,"Grid",(function(){return d.default})),t.d(n,"Icon",(function(){return m.default})),t.d(n,"Image",(function(){return p.default})),t.d(n,"Link",(function(){return c.default})),t.d(n,"List",(function(){return u.default})),t.d(n,"Overflow",(function(){return g.default})),t.d(n,"Panel",(function(){return h.default})),t.d(n,"Paragraph",(function(){return f.default})),t.d(n,"Scrollspy",(function(){return y.default})),t.d(n,"Section",(function(){return b.default})),t.d(n,"Table",(function(){return x.default}))},198:function(e,n,t){"use strict";t.r(n);var a=t(1),o=t.n(a);n.default=function(e){return o.a.createElement("div",null)}},199:function(e,n,t){"use strict";t.r(n);var a=t(1),o=t.n(a);n.default=function(e){return o.a.createElement("div",null)}},200:function(e,n,t){"use strict";t.r(n);var a=t(1),o=t.n(a),i=t(3),r=t.n(i),l=t(13),s=t(6),d=function(e){return o.a.createElement("div",Object.assign({className:m(e)+Object(s.a)(e)},l.a.applyHeightAttributes(e)),e.children)},m=function(e){return r()(" uk-container",{"uk-container-xsmall":e.xsmall},{"uk-container-small":e.small},{"uk-container-large":e.large},{"uk-container-expand":e.expand}," ")};d.defaultProps={xsmall:!1,small:!1,large:!1,expand:!1,children:void 0},n.default=d},201:function(e,n,t){"use strict";t.r(n);var a=t(1),o=t.n(a);n.default=function(e){return o.a.createElement("div",null)}},202:function(e,n,t){"use strict";t.r(n);var a=t(1),o=t.n(a);n.default=function(e){return o.a.createElement("div",null)}},203:function(e,n,t){"use strict";t.r(n);var a=t(1),o=t.n(a);n.default=function(e){return o.a.createElement("div",null)}},204:function(e,n,t){"use strict";t.r(n);var a=t(1),o=t.n(a);n.default=function(e){return o.a.createElement("div",null)}},205:function(e,n,t){"use strict";t.r(n);var a=t(1),o=t.n(a);n.default=function(e){return o.a.createElement("div",null)}},206:function(e,n,t){"use strict";t.r(n);var a=t(1),o=t.n(a);n.default=function(e){return o.a.createElement("div",null)}},207:function(e,n,t){"use strict";t.r(n);var a=t(1),o=t.n(a);n.default=function(e){return o.a.createElement("div",null)}},208:function(e,n,t){"use strict";t.r(n);var a=t(1),o=t.n(a);n.default=function(e){return o.a.createElement("div",null)}},209:function(e,n,t){"use strict";t.r(n);var a=t(1),o=t.n(a);n.default=function(e){return o.a.createElement("div",null)}},210:function(e,n,t){"use strict";t.r(n);var a=t(1),o=t.n(a);n.default=function(e){return o.a.createElement("div",null)}},211:function(e,n,t){"use strict";t.r(n);var a=t(1),o=t.n(a);n.default=function(e){return o.a.createElement("div",null)}},226:function(e,n){},228:function(e,n,t){t(229),e.exports=t(868)},229:function(e,n,t){},382:function(e,n,t){var a={"./Binary_Property/ASCII.js":383,"./Binary_Property/ASCII_Hex_Digit.js":384,"./Binary_Property/Alphabetic.js":385,"./Binary_Property/Any.js":386,"./Binary_Property/Assigned.js":387,"./Binary_Property/Bidi_Control.js":388,"./Binary_Property/Bidi_Mirrored.js":389,"./Binary_Property/Case_Ignorable.js":390,"./Binary_Property/Cased.js":391,"./Binary_Property/Changes_When_Casefolded.js":392,"./Binary_Property/Changes_When_Casemapped.js":393,"./Binary_Property/Changes_When_Lowercased.js":394,"./Binary_Property/Changes_When_NFKC_Casefolded.js":395,"./Binary_Property/Changes_When_Titlecased.js":396,"./Binary_Property/Changes_When_Uppercased.js":397,"./Binary_Property/Dash.js":398,"./Binary_Property/Default_Ignorable_Code_Point.js":399,"./Binary_Property/Deprecated.js":400,"./Binary_Property/Diacritic.js":401,"./Binary_Property/Emoji.js":402,"./Binary_Property/Emoji_Component.js":403,"./Binary_Property/Emoji_Modifier.js":404,"./Binary_Property/Emoji_Modifier_Base.js":405,"./Binary_Property/Emoji_Presentation.js":406,"./Binary_Property/Extended_Pictographic.js":407,"./Binary_Property/Extender.js":408,"./Binary_Property/Grapheme_Base.js":409,"./Binary_Property/Grapheme_Extend.js":410,"./Binary_Property/Hex_Digit.js":411,"./Binary_Property/IDS_Binary_Operator.js":412,"./Binary_Property/IDS_Trinary_Operator.js":413,"./Binary_Property/ID_Continue.js":414,"./Binary_Property/ID_Start.js":415,"./Binary_Property/Ideographic.js":416,"./Binary_Property/Join_Control.js":417,"./Binary_Property/Logical_Order_Exception.js":418,"./Binary_Property/Lowercase.js":419,"./Binary_Property/Math.js":420,"./Binary_Property/Noncharacter_Code_Point.js":421,"./Binary_Property/Pattern_Syntax.js":422,"./Binary_Property/Pattern_White_Space.js":423,"./Binary_Property/Quotation_Mark.js":424,"./Binary_Property/Radical.js":425,"./Binary_Property/Regional_Indicator.js":426,"./Binary_Property/Sentence_Terminal.js":427,"./Binary_Property/Soft_Dotted.js":428,"./Binary_Property/Terminal_Punctuation.js":429,"./Binary_Property/Unified_Ideograph.js":430,"./Binary_Property/Uppercase.js":431,"./Binary_Property/Variation_Selector.js":432,"./Binary_Property/White_Space.js":433,"./Binary_Property/XID_Continue.js":434,"./Binary_Property/XID_Start.js":435,"./General_Category/Cased_Letter.js":436,"./General_Category/Close_Punctuation.js":437,"./General_Category/Connector_Punctuation.js":438,"./General_Category/Control.js":439,"./General_Category/Currency_Symbol.js":440,"./General_Category/Dash_Punctuation.js":441,"./General_Category/Decimal_Number.js":442,"./General_Category/Enclosing_Mark.js":443,"./General_Category/Final_Punctuation.js":444,"./General_Category/Format.js":445,"./General_Category/Initial_Punctuation.js":446,"./General_Category/Letter.js":447,"./General_Category/Letter_Number.js":448,"./General_Category/Line_Separator.js":449,"./General_Category/Lowercase_Letter.js":450,"./General_Category/Mark.js":451,"./General_Category/Math_Symbol.js":452,"./General_Category/Modifier_Letter.js":453,"./General_Category/Modifier_Symbol.js":454,"./General_Category/Nonspacing_Mark.js":455,"./General_Category/Number.js":456,"./General_Category/Open_Punctuation.js":457,"./General_Category/Other.js":458,"./General_Category/Other_Letter.js":459,"./General_Category/Other_Number.js":460,"./General_Category/Other_Punctuation.js":461,"./General_Category/Other_Symbol.js":462,"./General_Category/Paragraph_Separator.js":463,"./General_Category/Private_Use.js":464,"./General_Category/Punctuation.js":465,"./General_Category/Separator.js":466,"./General_Category/Space_Separator.js":467,"./General_Category/Spacing_Mark.js":468,"./General_Category/Surrogate.js":469,"./General_Category/Symbol.js":470,"./General_Category/Titlecase_Letter.js":471,"./General_Category/Unassigned.js":472,"./General_Category/Uppercase_Letter.js":473,"./Script/Adlam.js":474,"./Script/Ahom.js":475,"./Script/Anatolian_Hieroglyphs.js":476,"./Script/Arabic.js":477,"./Script/Armenian.js":478,"./Script/Avestan.js":479,"./Script/Balinese.js":480,"./Script/Bamum.js":481,"./Script/Bassa_Vah.js":482,"./Script/Batak.js":483,"./Script/Bengali.js":484,"./Script/Bhaiksuki.js":485,"./Script/Bopomofo.js":486,"./Script/Brahmi.js":487,"./Script/Braille.js":488,"./Script/Buginese.js":489,"./Script/Buhid.js":490,"./Script/Canadian_Aboriginal.js":491,"./Script/Carian.js":492,"./Script/Caucasian_Albanian.js":493,"./Script/Chakma.js":494,"./Script/Cham.js":495,"./Script/Cherokee.js":496,"./Script/Common.js":497,"./Script/Coptic.js":498,"./Script/Cuneiform.js":499,"./Script/Cypriot.js":500,"./Script/Cyrillic.js":501,"./Script/Deseret.js":502,"./Script/Devanagari.js":503,"./Script/Dogra.js":504,"./Script/Duployan.js":505,"./Script/Egyptian_Hieroglyphs.js":506,"./Script/Elbasan.js":507,"./Script/Elymaic.js":508,"./Script/Ethiopic.js":509,"./Script/Georgian.js":510,"./Script/Glagolitic.js":511,"./Script/Gothic.js":512,"./Script/Grantha.js":513,"./Script/Greek.js":514,"./Script/Gujarati.js":515,"./Script/Gunjala_Gondi.js":516,"./Script/Gurmukhi.js":517,"./Script/Han.js":518,"./Script/Hangul.js":519,"./Script/Hanifi_Rohingya.js":520,"./Script/Hanunoo.js":521,"./Script/Hatran.js":522,"./Script/Hebrew.js":523,"./Script/Hiragana.js":524,"./Script/Imperial_Aramaic.js":525,"./Script/Inherited.js":526,"./Script/Inscriptional_Pahlavi.js":527,"./Script/Inscriptional_Parthian.js":528,"./Script/Javanese.js":529,"./Script/Kaithi.js":530,"./Script/Kannada.js":531,"./Script/Katakana.js":532,"./Script/Kayah_Li.js":533,"./Script/Kharoshthi.js":534,"./Script/Khmer.js":535,"./Script/Khojki.js":536,"./Script/Khudawadi.js":537,"./Script/Lao.js":538,"./Script/Latin.js":539,"./Script/Lepcha.js":540,"./Script/Limbu.js":541,"./Script/Linear_A.js":542,"./Script/Linear_B.js":543,"./Script/Lisu.js":544,"./Script/Lycian.js":545,"./Script/Lydian.js":546,"./Script/Mahajani.js":547,"./Script/Makasar.js":548,"./Script/Malayalam.js":549,"./Script/Mandaic.js":550,"./Script/Manichaean.js":551,"./Script/Marchen.js":552,"./Script/Masaram_Gondi.js":553,"./Script/Medefaidrin.js":554,"./Script/Meetei_Mayek.js":555,"./Script/Mende_Kikakui.js":556,"./Script/Meroitic_Cursive.js":557,"./Script/Meroitic_Hieroglyphs.js":558,"./Script/Miao.js":559,"./Script/Modi.js":560,"./Script/Mongolian.js":561,"./Script/Mro.js":562,"./Script/Multani.js":563,"./Script/Myanmar.js":564,"./Script/Nabataean.js":565,"./Script/Nandinagari.js":566,"./Script/New_Tai_Lue.js":567,"./Script/Newa.js":568,"./Script/Nko.js":569,"./Script/Nushu.js":570,"./Script/Nyiakeng_Puachue_Hmong.js":571,"./Script/Ogham.js":572,"./Script/Ol_Chiki.js":573,"./Script/Old_Hungarian.js":574,"./Script/Old_Italic.js":575,"./Script/Old_North_Arabian.js":576,"./Script/Old_Permic.js":577,"./Script/Old_Persian.js":578,"./Script/Old_Sogdian.js":579,"./Script/Old_South_Arabian.js":580,"./Script/Old_Turkic.js":581,"./Script/Oriya.js":582,"./Script/Osage.js":583,"./Script/Osmanya.js":584,"./Script/Pahawh_Hmong.js":585,"./Script/Palmyrene.js":586,"./Script/Pau_Cin_Hau.js":587,"./Script/Phags_Pa.js":588,"./Script/Phoenician.js":589,"./Script/Psalter_Pahlavi.js":590,"./Script/Rejang.js":591,"./Script/Runic.js":592,"./Script/Samaritan.js":593,"./Script/Saurashtra.js":594,"./Script/Sharada.js":595,"./Script/Shavian.js":596,"./Script/Siddham.js":597,"./Script/SignWriting.js":598,"./Script/Sinhala.js":599,"./Script/Sogdian.js":600,"./Script/Sora_Sompeng.js":601,"./Script/Soyombo.js":602,"./Script/Sundanese.js":603,"./Script/Syloti_Nagri.js":604,"./Script/Syriac.js":605,"./Script/Tagalog.js":606,"./Script/Tagbanwa.js":607,"./Script/Tai_Le.js":608,"./Script/Tai_Tham.js":609,"./Script/Tai_Viet.js":610,"./Script/Takri.js":611,"./Script/Tamil.js":612,"./Script/Tangut.js":613,"./Script/Telugu.js":614,"./Script/Thaana.js":615,"./Script/Thai.js":616,"./Script/Tibetan.js":617,"./Script/Tifinagh.js":618,"./Script/Tirhuta.js":619,"./Script/Ugaritic.js":620,"./Script/Vai.js":621,"./Script/Wancho.js":622,"./Script/Warang_Citi.js":623,"./Script/Yi.js":624,"./Script/Zanabazar_Square.js":625,"./Script_Extensions/Adlam.js":626,"./Script_Extensions/Ahom.js":627,"./Script_Extensions/Anatolian_Hieroglyphs.js":628,"./Script_Extensions/Arabic.js":629,"./Script_Extensions/Armenian.js":630,"./Script_Extensions/Avestan.js":631,"./Script_Extensions/Balinese.js":632,"./Script_Extensions/Bamum.js":633,"./Script_Extensions/Bassa_Vah.js":634,"./Script_Extensions/Batak.js":635,"./Script_Extensions/Bengali.js":636,"./Script_Extensions/Bhaiksuki.js":637,"./Script_Extensions/Bopomofo.js":638,"./Script_Extensions/Brahmi.js":639,"./Script_Extensions/Braille.js":640,"./Script_Extensions/Buginese.js":641,"./Script_Extensions/Buhid.js":642,"./Script_Extensions/Canadian_Aboriginal.js":643,"./Script_Extensions/Carian.js":644,"./Script_Extensions/Caucasian_Albanian.js":645,"./Script_Extensions/Chakma.js":646,"./Script_Extensions/Cham.js":647,"./Script_Extensions/Cherokee.js":648,"./Script_Extensions/Common.js":649,"./Script_Extensions/Coptic.js":650,"./Script_Extensions/Cuneiform.js":651,"./Script_Extensions/Cypriot.js":652,"./Script_Extensions/Cyrillic.js":653,"./Script_Extensions/Deseret.js":654,"./Script_Extensions/Devanagari.js":655,"./Script_Extensions/Dogra.js":656,"./Script_Extensions/Duployan.js":657,"./Script_Extensions/Egyptian_Hieroglyphs.js":658,"./Script_Extensions/Elbasan.js":659,"./Script_Extensions/Elymaic.js":660,"./Script_Extensions/Ethiopic.js":661,"./Script_Extensions/Georgian.js":662,"./Script_Extensions/Glagolitic.js":663,"./Script_Extensions/Gothic.js":664,"./Script_Extensions/Grantha.js":665,"./Script_Extensions/Greek.js":666,"./Script_Extensions/Gujarati.js":667,"./Script_Extensions/Gunjala_Gondi.js":668,"./Script_Extensions/Gurmukhi.js":669,"./Script_Extensions/Han.js":670,"./Script_Extensions/Hangul.js":671,"./Script_Extensions/Hanifi_Rohingya.js":672,"./Script_Extensions/Hanunoo.js":673,"./Script_Extensions/Hatran.js":674,"./Script_Extensions/Hebrew.js":675,"./Script_Extensions/Hiragana.js":676,"./Script_Extensions/Imperial_Aramaic.js":677,"./Script_Extensions/Inherited.js":678,"./Script_Extensions/Inscriptional_Pahlavi.js":679,"./Script_Extensions/Inscriptional_Parthian.js":680,"./Script_Extensions/Javanese.js":681,"./Script_Extensions/Kaithi.js":682,"./Script_Extensions/Kannada.js":683,"./Script_Extensions/Katakana.js":684,"./Script_Extensions/Kayah_Li.js":685,"./Script_Extensions/Kharoshthi.js":686,"./Script_Extensions/Khmer.js":687,"./Script_Extensions/Khojki.js":688,"./Script_Extensions/Khudawadi.js":689,"./Script_Extensions/Lao.js":690,"./Script_Extensions/Latin.js":691,"./Script_Extensions/Lepcha.js":692,"./Script_Extensions/Limbu.js":693,"./Script_Extensions/Linear_A.js":694,"./Script_Extensions/Linear_B.js":695,"./Script_Extensions/Lisu.js":696,"./Script_Extensions/Lycian.js":697,"./Script_Extensions/Lydian.js":698,"./Script_Extensions/Mahajani.js":699,"./Script_Extensions/Makasar.js":700,"./Script_Extensions/Malayalam.js":701,"./Script_Extensions/Mandaic.js":702,"./Script_Extensions/Manichaean.js":703,"./Script_Extensions/Marchen.js":704,"./Script_Extensions/Masaram_Gondi.js":705,"./Script_Extensions/Medefaidrin.js":706,"./Script_Extensions/Meetei_Mayek.js":707,"./Script_Extensions/Mende_Kikakui.js":708,"./Script_Extensions/Meroitic_Cursive.js":709,"./Script_Extensions/Meroitic_Hieroglyphs.js":710,"./Script_Extensions/Miao.js":711,"./Script_Extensions/Modi.js":712,"./Script_Extensions/Mongolian.js":713,"./Script_Extensions/Mro.js":714,"./Script_Extensions/Multani.js":715,"./Script_Extensions/Myanmar.js":716,"./Script_Extensions/Nabataean.js":717,"./Script_Extensions/Nandinagari.js":718,"./Script_Extensions/New_Tai_Lue.js":719,"./Script_Extensions/Newa.js":720,"./Script_Extensions/Nko.js":721,"./Script_Extensions/Nushu.js":722,"./Script_Extensions/Nyiakeng_Puachue_Hmong.js":723,"./Script_Extensions/Ogham.js":724,"./Script_Extensions/Ol_Chiki.js":725,"./Script_Extensions/Old_Hungarian.js":726,"./Script_Extensions/Old_Italic.js":727,"./Script_Extensions/Old_North_Arabian.js":728,"./Script_Extensions/Old_Permic.js":729,"./Script_Extensions/Old_Persian.js":730,"./Script_Extensions/Old_Sogdian.js":731,"./Script_Extensions/Old_South_Arabian.js":732,"./Script_Extensions/Old_Turkic.js":733,"./Script_Extensions/Oriya.js":734,"./Script_Extensions/Osage.js":735,"./Script_Extensions/Osmanya.js":736,"./Script_Extensions/Pahawh_Hmong.js":737,"./Script_Extensions/Palmyrene.js":738,"./Script_Extensions/Pau_Cin_Hau.js":739,"./Script_Extensions/Phags_Pa.js":740,"./Script_Extensions/Phoenician.js":741,"./Script_Extensions/Psalter_Pahlavi.js":742,"./Script_Extensions/Rejang.js":743,"./Script_Extensions/Runic.js":744,"./Script_Extensions/Samaritan.js":745,"./Script_Extensions/Saurashtra.js":746,"./Script_Extensions/Sharada.js":747,"./Script_Extensions/Shavian.js":748,"./Script_Extensions/Siddham.js":749,"./Script_Extensions/SignWriting.js":750,"./Script_Extensions/Sinhala.js":751,"./Script_Extensions/Sogdian.js":752,"./Script_Extensions/Sora_Sompeng.js":753,"./Script_Extensions/Soyombo.js":754,"./Script_Extensions/Sundanese.js":755,"./Script_Extensions/Syloti_Nagri.js":756,"./Script_Extensions/Syriac.js":757,"./Script_Extensions/Tagalog.js":758,"./Script_Extensions/Tagbanwa.js":759,"./Script_Extensions/Tai_Le.js":760,"./Script_Extensions/Tai_Tham.js":761,"./Script_Extensions/Tai_Viet.js":762,"./Script_Extensions/Takri.js":763,"./Script_Extensions/Tamil.js":764,"./Script_Extensions/Tangut.js":765,"./Script_Extensions/Telugu.js":766,"./Script_Extensions/Thaana.js":767,"./Script_Extensions/Thai.js":768,"./Script_Extensions/Tibetan.js":769,"./Script_Extensions/Tifinagh.js":770,"./Script_Extensions/Tirhuta.js":771,"./Script_Extensions/Ugaritic.js":772,"./Script_Extensions/Vai.js":773,"./Script_Extensions/Wancho.js":774,"./Script_Extensions/Warang_Citi.js":775,"./Script_Extensions/Yi.js":776,"./Script_Extensions/Zanabazar_Square.js":777,"./index.js":778,"./unicode-version.js":779};function o(e){var n=i(e);return t(n)}function i(e){if(!t.o(a,e)){var n=new Error("Cannot find module '"+e+"'");throw n.code="MODULE_NOT_FOUND",n}return a[e]}o.keys=function(){return Object.keys(a)},o.resolve=i,e.exports=o,o.id=382},42:function(e,n,t){"use strict";var a=t(0),o=t.n(a),i=t(3),r=t.n(i),l=function(e){return r()(" ",{"uk-margin":e.margin},{"uk-margin-top":e.marginTop},{"uk-margin-bottom":e.marginBottom},{"uk-margin-left":e.marginLeft},{"uk-margin-right":e.marginRight},{"uk-margin-small":e.marginSmall},{"uk-margin-small-top":e.marginTopSmall},{"uk-margin-small-bottom":e.marginBottomSmall},{"uk-margin-small-left":e.marginLeftSmall},{"uk-margin-small-right":e.marginRightSmall},{"uk-margin-medium":e.marginMedium},{"uk-margin-medium-top":e.marginTopMedium},{"uk-margin-medium-bottom":e.marginBottomMedium},{"uk-margin-medium-left":e.marginLeftMedium},{"uk-margin-medium-right":e.marginRightMedium},{"uk-margin-large":e.marginLarge},{"uk-margin-large-top":e.marginTopLarge},{"uk-margin-large-bottom":e.marginBottomLarge},{"uk-margin-large-left":e.marginLeftLarge},{"uk-margin-large-right":e.marginRightLarge},{"uk-margin-xlarge":e.marginXLarge},{"uk-margin-xlarge-top":e.marginTopXLarge},{"uk-margin-xlarge-bottom":e.marginBottomXLarge},{"uk-margin-xlarge-left":e.marginLeftXLarge},{"uk-margin-xlarge-right":e.marginRightXLarge},{"uk-margin-remove":e.marginRemove},{"uk-margin-remove-top":e.marginRemoveTop},{"uk-margin-remove-bottom":e.marginRemoveBottom},{"uk-margin-remove-left":e.marginRemoveLeft},{"uk-margin-remove-right":e.marginRemoveRight},{"uk-margin-remove-vertical":e.marginRemoveVertical},{"uk-margin-remove-adjacent":e.marginRemoveAdjacent},{"uk-margin-remove-first-child":e.marginRemoveFirstChild},{"uk-margin-remove-last-child":e.marginRemoveLastChild},{"uk-margin-remove-left@s":e.marginRemoveLeftSmall},{"uk-margin-remove-right@s":e.marginRemoveRightSmall},{"uk-margin-remove-left@m":e.marginRemoveLeftMedium},{"uk-margin-remove-right@m":e.marginRemoveRightMedium},{"uk-margin-remove-left@l":e.marginRemoveLeftLarge},{"uk-margin-remove-right@l":e.marginRemoveRightLarge},{"uk-margin-remove-left@xl":e.marginRemoveLeftXLarge},{"uk-margin-remove-right@xl":e.marginRemoveRightXLarge},{"uk-margin-auto":e.marginAuto},{"uk-margin-auto-top":e.marginAutoTop},{"uk-margin-auto-bottom":e.marginAutoBottom},{"uk-margin-auto-left":e.marginAutoLeft},{"uk-margin-auto-right":e.marginAutoRight},{"uk-margin-auto-vertical":e.marginAutoVertical},{"uk-margin-auto@s":e.marginAutoSmall},{"uk-margin-auto-top@s":e.marginAutoTopSmall},{"uk-margin-auto-bottom@s":e.marginAutoBottomSmall},{"uk-margin-auto-left@s":e.marginAutoLeftSmall},{"uk-margin-auto-right@s":e.marginAutoRightSmall},{"uk-margin-auto-vertical@s":e.marginAutoVerticalSmall},{"uk-margin-auto@m":e.marginAutoMedium},{"uk-margin-auto-top@m":e.marginAutoTopMedium},{"uk-margin-auto-bottom@m":e.marginAutoBottomMedium},{"uk-margin-auto-left@m":e.marginAutoLeftMedium},{"uk-margin-auto-right@m":e.marginAutoRightMedium},{"uk-margin-auto-vertical@m":e.marginAutoVerticalMedium},{"uk-margin-auto@l":e.marginAutoLarge},{"uk-margin-auto-top@l":e.marginAutoTopLarge},{"uk-margin-auto-bottom@l":e.marginAutoBottomLarge},{"uk-margin-auto-left@l":e.marginAutoLeftLarge},{"uk-margin-auto-right@l":e.marginAutoRightLarge},{"uk-margin-auto-vertical@l":e.marginAutoVerticalLarge},{"uk-margin-auto@xl":e.marginAutoXLarge},{"uk-margin-auto-top@xl":e.marginAutoTopXLarge},{"uk-margin-auto-bottom@xl":e.marginAutoBottomXLarge},{"uk-margin-auto-left@xl":e.marginAutoLeftXLarge},{"uk-margin-auto-right@xl":e.marginAutoRightXLarge},{"uk-margin-auto-vertical@xl":e.marginAutoVerticalXLarge}," ")};l.propTypes={margin:o.a.bool,marginTop:o.a.bool,marginBottom:o.a.bool,marginLeft:o.a.bool,marginRight:o.a.bool,marginSmall:o.a.bool,marginTopSmall:o.a.bool,marginBottomSmall:o.a.bool,marginLeftSmall:o.a.bool,marginRightSmall:o.a.bool,marginMedium:o.a.bool,marginTopMedium:o.a.bool,marginBottomMedium:o.a.bool,marginLeftMedium:o.a.bool,marginRightMedium:o.a.bool,marginLarge:o.a.bool,marginTopLarge:o.a.bool,marginBottomLarge:o.a.bool,marginLeftLarge:o.a.bool,marginRightLarge:o.a.bool,marginXLarge:o.a.bool,marginTopXLarge:o.a.bool,marginBottomXLarge:o.a.bool,marginLeftXLarge:o.a.bool,marginRightXLarge:o.a.bool,marginRemove:o.a.bool,marginRemoveTop:o.a.bool,marginRemoveBottom:o.a.bool,marginRemoveLeft:o.a.bool,marginRemoveRight:o.a.bool,marginRemoveVertical:o.a.bool,marginRemoveAdjacent:o.a.bool,marginRemoveFirstChild:o.a.bool,marginRemoveLastChild:o.a.bool,marginRemoveLeftSmall:o.a.bool,marginRemoveRightSmall:o.a.bool,marginRemoveLeftMedium:o.a.bool,marginRemoveRightMedium:o.a.bool,marginRemoveLeftLarge:o.a.bool,marginRemoveRightLarge:o.a.bool,marginRemoveLeftXLarge:o.a.bool,marginRemoveRightXLarge:o.a.bool,marginAuto:o.a.bool,marginAutoTop:o.a.bool,marginAutoBottom:o.a.bool,marginAutoLeft:o.a.bool,marginAutoRight:o.a.bool,marginAutoVertical:o.a.bool,marginAutoSmall:o.a.bool,marginAutoTopSmall:o.a.bool,marginAutoBottomSmall:o.a.bool,marginAutoLeftSmall:o.a.bool,marginAutoRightSmall:o.a.bool,marginAutoVerticalSmall:o.a.bool,marginAutoMedium:o.a.bool,marginAutoTopMedium:o.a.bool,marginAutoBottomMedium:o.a.bool,marginAutoLeftMedium:o.a.bool,marginAutoRightMedium:o.a.bool,marginAutoVerticalMedium:o.a.bool,marginAutoLarge:o.a.bool,marginAutoTopLarge:o.a.bool,marginAutoBottomLarge:o.a.bool,marginAutoLeftLarge:o.a.bool,marginAutoRightLarge:o.a.bool,marginAutoVerticalLarge:o.a.bool,marginAutoXLarge:o.a.bool,marginAutoTopXLarge:o.a.bool,marginAutoBottomXLarge:o.a.bool,marginAutoLeftXLarge:o.a.bool,marginAutoRightXLarge:o.a.bool,marginAutoVerticalXLarge:o.a.bool},l.defaultProps={margin:!1,marginTop:!1,marginBottom:!1,marginLeft:!1,marginRight:!1,marginSmall:!1,marginTopSmall:!1,marginBottomSmall:!1,marginLeftSmall:!1,marginRightSmall:!1,marginMedium:!1,marginMediumTop:!1,marginMediumBottom:!1,marginMediumLeft:!1,marginMediumRight:!1,marginLarge:!1,marginTopLarge:!1,marginBottomLarge:!1,marginLeftLarge:!1,marginRightLarge:!1,marginXLarge:!1,marginTopXLarge:!1,marginBottomXLarge:!1,marginLeftXLarge:!1,marginRightXLarge:!1,marginRemove:!1,marginRemoveTop:!1,marginRemoveBottom:!1,marginRemoveLeft:!1,marginRemoveRight:!1,marginRemoveVertical:!1,marginRemoveAdjacent:!1,marginRemoveFirstChild:!1,marginRemoveLastChild:!1,marginRemoveLeftSmall:!1,marginRemoveRightSmall:!1,marginRemoveLeftMedium:!1,marginRemoveRightMedium:!1,marginRemoveLeftLarge:!1,marginRemoveRightLarge:!1,marginRemoveLeftXLarge:!1,marginRemoveRightXLarge:!1,marginAuto:!1,marginAutoTop:!1,marginAutoBottom:!1,marginAutoLeft:!1,marginAutoRight:!1,marginAutoVertical:!1,marginAutoSmall:!1,marginAutoTopSmall:!1,marginAutoBottomSmall:!1,marginAutoLeftSmall:!1,marginAutoRightSmall:!1,marginAutoVerticalSmall:!1,marginAutoMedium:!1,marginAutoTopMedium:!1,marginAutoBottomMedium:!1,marginAutoLeftMedium:!1,marginAutoRightMedium:!1,marginAutoVerticalMedium:!1,marginAutoLarge:!1,marginAutoTopLarge:!1,marginAutoBottomLarge:!1,marginAutoLeftLarge:!1,marginAutoRightLarge:!1,marginAutoVerticalLarge:!1,marginAutoXLarge:!1,marginAutoTopXLarge:!1,marginAutoBottomXLarge:!1,marginAutoLeftXLarge:!1,marginAutoRightXLarge:!1,marginAutoVerticalXLarge:!1},n.a=l},46:function(e,n,t){"use strict";var a=t(0),o=function(e){var n={};return e.height&&(n.height=e.height),n};o.propTypes={height:t.n(a).a.string},o.defaultProps={height:void 0},n.a=o},54:function(e,n,t){"use strict";var a=t(5),o=t(0),i=t.n(o),r=t(3),l=t.n(r),s=function(e){return l()(" ",Object(a.a)({},"uk-width-".concat(e.width),e.width),Object(a.a)({},"uk-width-small",!0===e.widthSmall),Object(a.a)({},"uk-width-".concat(e.widthSmall,"@s"),"string"==typeof e.widthSmall),Object(a.a)({},"uk-width-medium",!0===e.widthMedium),Object(a.a)({},"uk-width-".concat(e.widthMedium,"@m"),"string"==typeof e.widthMedium),Object(a.a)({},"uk-width-large",!0===e.widthLarge),Object(a.a)({},"uk-width-".concat(e.widthLarge,"@l"),"string"==typeof e.widthLarge),Object(a.a)({},"uk-width-xlarge",!0===e.widthXLarge),Object(a.a)({},"uk-width-".concat(e.widthXLarge,"@xl"),"string"==typeof e.widthXLarge),Object(a.a)({},"uk-width-xxlarge",!0===e.widthXXLarge),Object(a.a)({},"uk-width-auto",e.widthAuto),Object(a.a)({},"uk-width-auto@s",e.widthAutoSmall),Object(a.a)({},"uk-width-auto@m",e.widthAutoMedium),Object(a.a)({},"uk-width-auto@l",e.widthAutoLarge),Object(a.a)({},"uk-width-auto@xl",e.widthAutoXLarge),Object(a.a)({},"uk-width-expand",e.widthExpand),Object(a.a)({},"uk-width-expand@s",e.widthExpandSmall),Object(a.a)({},"uk-width-expand@m",e.widthExpandMedium),Object(a.a)({},"uk-width-expand@l",e.widthExpandLarge),Object(a.a)({},"uk-width-expand@xl",e.widthExpandXLarge),Object(a.a)({},"uk-child-width-".concat(e.childWidth),e.childWidth),Object(a.a)({},"uk-child-width-small",!0===e.childWidthSmall),Object(a.a)({},"uk-child-width-".concat(e.childWidthSmall,"@s"),"string"==typeof e.childWidthSmall),Object(a.a)({},"uk-child-width-medium",!0===e.childWidthMedium),Object(a.a)({},"uk-child-width-".concat(e.childWidthMedium,"@m"),"string"==typeof e.childWidthMedium),Object(a.a)({},"uk-child-width-large",!0===e.childWidthLarge),Object(a.a)({},"uk-child-width-".concat(e.childWidthLarge,"@l"),"string"==typeof e.childWidthLarge),Object(a.a)({},"uk-child-width-xlarge",!0===e.childWidthXLarge),Object(a.a)({},"uk-child-width-".concat(e.childWidthXLarge,"@xl"),"string"==typeof e.childWidthXLarge),Object(a.a)({},"uk-child-width-xxlarge",!0===e.widthXXLarge),Object(a.a)({},"uk-child-width-auto",e.childWidthAuto),Object(a.a)({},"uk-child-width-auto@s",e.childWidthAutoSmall),Object(a.a)({},"uk-child-width-auto@m",e.childWidthAutoMedium),Object(a.a)({},"uk-child-width-auto@l",e.childWidthAutoLarge),Object(a.a)({},"uk-child-width-auto@xl",e.childWidthAutoXLarge),Object(a.a)({},"uk-child-width-expand",e.childWidthExpand),Object(a.a)({},"uk-child-width-expand@s",e.childWidthExpandSmall),Object(a.a)({},"uk-child-width-expand@m",e.childWidthExpandMedium),Object(a.a)({},"uk-child-width-expand@l",e.childWidthExpandLarge),Object(a.a)({},"uk-child-width-expand@xl",e.childWidthExpandXLarge)," ")};s.propTypes={width:i.a.string,widthSmall:i.a.oneOfType([i.a.string,i.a.bool]),widthMedium:i.a.oneOfType([i.a.string,i.a.bool]),widthLarge:i.a.oneOfType([i.a.string,i.a.bool]),widthXLarge:i.a.oneOfType([i.a.string,i.a.bool]),widthXXLarge:i.a.bool,widthAuto:i.a.bool,widthAutoSmall:i.a.bool,widthAutoMedium:i.a.bool,widthAutoLarge:i.a.bool,widthAutoXLarge:i.a.bool,widthExpand:i.a.bool,widthExpandSmall:i.a.bool,widthExpandMedium:i.a.bool,widthExpandLarge:i.a.bool,widthExpandXLarge:i.a.bool,childWidth:i.a.string,childWidthSmall:i.a.string,childWidthMedium:i.a.string,childWidthLarge:i.a.string,childWidthXLarge:i.a.string,childWidthXXLarge:i.a.string,childWidthAuto:i.a.bool,childWidthExpand:i.a.bool},s.defaultProps={width:"",widthSmall:"",widthMedium:"",widthLarge:"",widthXLarge:"",widthXXLarge:"",widthAuto:!1,widthAutoSmall:!1,widthAutoMedium:!1,widthAutoLarge:!1,widthAutoXLarge:!1,widthExpand:!1,widthExpandSmall:!1,widthExpandMedium:!1,widthExpandLarge:!1,widthExpandXLarge:!1,childWidth:"",childWidthSmall:"",childWidthMedium:"",childWidthLarge:"",childWidthXLarge:"",childWidthXXLarge:"",childWidthAuto:!1,childWidthAutoSmall:!1,childWidthAutoMedium:!1,childWidthAutoLarge:!1,childWidthAutoXLarge:!1,childWidthExpand:!1,childWidthExpandSmall:!1,childWidthExpandMedium:!1,childWidthExpandLarge:!1,childWidthExpandXLarge:!1},n.a=s},55:function(e,n,t){"use strict";var a=t(0),o=t.n(a),i=t(3),r=t.n(i),l=function(e){return r()(" ",{"uk-flex":e.flex},{"uk-flex-left":e.flexLeft},{"uk-flex-center":e.flexCenter},{"uk-flex-right":e.flexRight},{"uk-flex-between":e.flexBetween},{"uk-flex-around":e.flexAround},{"uk-flex@s":e.flexSmall},{"uk-flex-left@s":e.flexLeftSmall},{"uk-flex-center@s":e.flexCenterSmall},{"uk-flex-right@s":e.flexRightSmall},{"uk-flex-between@s":e.flexBetweenSmall},{"uk-flex-around@s":e.flexAroundSmall},{"uk-flex@m":e.flexMedium},{"uk-flex-left@m":e.flexLeftMedium},{"uk-flex-center@m":e.flexCenterMedium},{"uk-flex-right@m":e.flexRightMedium},{"uk-flex-between@m":e.flexBetweenMedium},{"uk-flex-around@m":e.flexAroundMedium},{"uk-flex@l":e.flexLarge},{"uk-flex-left@l":e.flexLeftLarge},{"uk-flex-center@l":e.flexCenterLarge},{"uk-flex-right@l":e.flexRightLarge},{"uk-flex-between@l":e.flexBetweenLarge},{"uk-flex-around@l":e.flexAroundLarge},{"uk-flex@xl":e.flexXLarge},{"uk-flex-left@xl":e.flexLeftXLarge},{"uk-flex-center@xl":e.flexCenterXLarge},{"uk-flex-right@xl":e.flexRightXLarge},{"uk-flex-between@xl":e.flexBetweenXLarge},{"uk-flex-around@xl":e.flexAroundXLarge},{"uk-flex-inline":e.flexInline},{"uk-flex-stretch":e.flexStretch},{"uk-flex-top":e.flexTop},{"uk-flex-middle":e.flexMiddle},{"uk-flex-bottom":e.flexBottom},{"uk-flex-row":e.flexRow},{"uk-flex-row-reverse":e.flexRowReverse},{"uk-flex-column":e.flexColumn},{"uk-flex-column-reverse":e.flexColumnReverse},{"uk-flex-wrap":e.flexWrap},{"uk-flex-wrap-reverse":e.flexWrapReverse},{"uk-flex-nowrap":e.flexNoWrap},{"uk-flex-wrap-":e.flexWrapStretch},{"uk-flex-wrap-between":e.flexWrapBetween},{"uk-flex-wrap-around":e.flexWrapAround},{"uk-flex-wrap-top":e.flexWrapTop},{"uk-flex-wrap-middle":e.flexWrapMiddle},{"uk-flex-wrap-bottom":e.flexWrapBottom},{"uk-flex-first":e.flexFirst},{"uk-flex-first@s":e.flexFirstSmall},{"uk-flex-first@m":e.flexFirstMedium},{"uk-flex-first@l":e.flexFirstLarge},{"uk-flex-first@xl":e.flexFirstXLarge},{"uk-flex-last":e.flexLast},{"uk-flex-last@s":e.flexLastSmall},{"uk-flex-last@m":e.flexLastMedium},{"uk-flex-last@l":e.flexLastLarge},{"uk-flex-last@xl":e.flexLastXLarge},{"uk-flex-none":e.flexNone},{"uk-flex-auto":e.flexAuto},{"uk-flex-1":e.flex1}," ")};l.propTypes={flex:o.a.bool,flexLeft:o.a.bool,flexCenter:o.a.bool,flexRight:o.a.bool,flexBetween:o.a.bool,flexAround:o.a.bool,flexSmall:o.a.bool,flexLeftSmall:o.a.bool,flexCenterSmall:o.a.bool,flexRightSmall:o.a.bool,flexBetweenSmall:o.a.bool,flexAroundSmall:o.a.bool,flexMedium:o.a.bool,flexLeftMedium:o.a.bool,flexCenterMedium:o.a.bool,flexRightMedium:o.a.bool,flexBetweenMedium:o.a.bool,flexAroundMedium:o.a.bool,flexLarge:o.a.bool,flexLeftLarge:o.a.bool,flexCenterLarge:o.a.bool,flexRightLarge:o.a.bool,flexBetweenLarge:o.a.bool,flexAroundLarge:o.a.bool,flexXLarge:o.a.bool,flexLeftXLarge:o.a.bool,flexCenterXLarge:o.a.bool,flexRightXLarge:o.a.bool,flexBetweenXLarge:o.a.bool,flexAroundXLarge:o.a.bool,flexInline:o.a.bool,flexStretch:o.a.bool,flexTop:o.a.bool,flexMiddle:o.a.bool,flexBottom:o.a.bool,flexRow:o.a.bool,flexRowReverse:o.a.bool,flexColumn:o.a.bool,flexColumnReverse:o.a.bool,flexWrap:o.a.bool,flexWrapReverse:o.a.bool,flexNoWrap:o.a.bool,flexWrapStretch:o.a.bool,flexWrapBetween:o.a.bool,flexWrapAround:o.a.bool,flexWrapTop:o.a.bool,flexWrapMiddle:o.a.bool,flexWrapBottom:o.a.bool,flexFirst:o.a.bool,flexFirstSmall:o.a.bool,flexFirstMedium:o.a.bool,flexFirstLarge:o.a.bool,flexFirstXLarge:o.a.bool,flexLast:o.a.bool,flexLastSmall:o.a.bool,flexLastMedium:o.a.bool,flexLastLarge:o.a.bool,flexLastXLarge:o.a.bool,flexNone:o.a.bool,flexAuto:o.a.bool,flex1:o.a.bool},l.defaultProps={flex:!1,flexLeft:!1,flexCenter:!1,flexRight:!1,flexBetween:!1,flexAround:!1,flexSmall:!1,flexLeftSmall:!1,flexCenterSmall:!1,flexRightSmall:!1,flexBetweenSmall:!1,flexAroundSmall:!1,flexMedium:!1,flexLeftMedium:!1,flexCenterMedium:!1,flexRightMedium:!1,flexBetweenMedium:!1,flexAroundMedium:!1,flexLarge:!1,flexLeftLarge:!1,flexCenterLarge:!1,flexRightLarge:!1,flexBetweenLarge:!1,flexAroundLarge:!1,flexXLarge:!1,flexLeftXLarge:!1,flexCenterXLarge:!1,flexRightXLarge:!1,flexBetweenXLarge:!1,flexAroundXLarge:!1,flexInline:!1,flexStretch:!1,flexTop:!1,flexMiddle:!1,flexBottom:!1,flexRow:!1,flexRowReverse:!1,flexColumn:!1,flexColumnReverse:!1,flexWrap:!1,flexWrapReverse:!1,flexNoWrap:!1,flexWrapStretch:!1,flexWrapBetween:!1,flexWrapAround:!1,flexWrapTop:!1,flexWrapMiddle:!1,flexWrapBottom:!1,flexFirst:!1,flexFirstSmall:!1,flexFirstMedium:!1,flexFirstLarge:!1,flexFirstXLarge:!1,flexLast:!1,flexLastSmall:!1,flexLastMedium:!1,flexLastLarge:!1,flexLastXLarge:!1,flexNone:!1,flexAuto:!1,flex1:!1},n.a=l},56:function(e,n,t){"use strict";var a=t(0),o=t.n(a),i=t(3),r=t.n(i),l=function(e){return r()(" ",{"uk-text-left":e.textLeft},{"uk-text-right":e.textRight},{"uk-text-center":e.textCenter},{"uk-text-justify":e.textJustify}," ")};l.propTypes={textLeft:o.a.bool,textRight:o.a.bool,textCenter:o.a.bool,textJustify:o.a.bool},l.defaultProps={textLeft:!1,textRight:!1,textCenter:!1,textJustify:!1},n.a=l},6:function(e,n,t){"use strict";var a=t(3),o=t.n(a),i=t(114);n.a=function(e){return o()(Object(i.a)(e))}},64:function(e,n,t){},69:function(e,n,t){"use strict";var a=t(0),o=t.n(a),i=t(3),r=t.n(i),l=function(e){return r()(" ",{"uk-transform-origin-top-left":e.transformOriginTopLeft},{"uk-transform-origin-top-center":e.transformOriginTopCenter},{"uk-transform-origin-top-right":e.transformOriginTopRight},{"uk-transform-origin-center-left":e.transformOriginCenterLeft},{"uk-transform-origin-center-right":e.transformOriginCenterRight},{"uk-transform-origin-bottom-left":e.transformOriginBottomLeft},{"uk-transform-origin-bottom-center":e.transformOriginBottomCenter},{"uk-transform-origin-bottom-right":e.transformOriginBottomRight},{"uk-transform-center":e.transformCenter}," ")};l.propTypes={transformOriginTopLeft:o.a.bool,transformOriginTopCenter:o.a.bool,transformOriginTopRight:o.a.bool,transformOriginCenterLeft:o.a.bool,transformOriginCenterRight:o.a.bool,transformOriginBottomLeft:o.a.bool,transformOriginBottomCenter:o.a.bool,transformOriginBottomRight:o.a.bool,transformCenter:o.a.bool},l.defaultProps={transformOriginTopLeft:!1,transformOriginTopCenter:!1,transformOriginTopRight:!1,transformOriginCenterLeft:!1,transformOriginCenterRight:!1,transformOriginBottomLeft:!1,transformOriginBottomCenter:!1,transformOriginBottomRight:!1,transformCenter:!1},n.a=l},805:function(e,n,t){e.exports={doclets:{},displayName:"Alert",description:"",methods:[],props:[{type:{name:"node"},required:!1,description:"Pass children elements to this element",defaultValue:{value:"undefined",computed:!0},tags:{},name:"children"}],examples:t(806)}},806:function(e,n,t){var a={"../":t(14),react:t(1),"./Alert.js":t(94)},o=t(8).default.bind(null,a),i=t(9).default.bind(null,"const React$0 = require('react');\nconst React = React$0['React'] || (React$0.default || React$0);\nconst Alert$0 = require('./Alert.js');\nconst Alert = Alert$0['Alert'] || (Alert$0.default || Alert$0);",o);e.exports=[{type:"markdown",content:"<https://getuikit.com/docs/alert>\n\n### Display success, warning and error messages.\n\n### Usage\n\nA basic Alert component."},{type:"code",content:"import { Alert } from '../';\n\n    <Alert>Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua.</Alert>",settings:{},evalInContext:i},{type:"markdown",content:'### Close Button\n\nTo create a close button and enable its functionality, add the close props to a <a href="#/Button">Button</a> component inside the alert box.'},{type:"code",content:"import { Alert } from '../';\n\n<React.Fragment>\n    <Alert>Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua.</Alert>\n</React.Fragment>",settings:{},evalInContext:i},{type:"markdown",content:"| PROP | DESCRIPTION                                                     |\n| ---- | --------------------------------------------------------------- |\n| body | Add this prop to a Card component to define the Card component. |"}]},807:function(e,n,t){},808:function(e,n,t){e.exports={doclets:{},displayName:"Align",description:"",methods:[],props:[],examples:t(809)}},809:function(e,n,t){var a={"../":t(14),react:t(1),"./Align.js":t(198)},o=t(8).default.bind(null,a),i=t(9).default.bind(null,"const React$0 = require('react');\nconst React = React$0['React'] || (React$0.default || React$0);\nconst Align$0 = require('./Align.js');\nconst Align = Align$0['Align'] || (Align$0.default || Align$0);",o);e.exports=[{type:"markdown",content:'<https://getuikit.com/docs/align>\n\n#### Control the alignment of inline elements depending on the viewport size.\n\n### Usage\n\nTo align images or other elements with spacing between the text and the element, add one of these classes.\n\n| PROPS                                         | DESCRIPTION                                                         |\n| --------------------------------------------- | ------------------------------------------------------------------- |\n| <span style="color:salmon">alignLeft</span>   | Floats the element to the left and creates right and bottom margin. |\n| <span style="color:salmon">alignCenter</span> | Floats the element to the right and creates left and bottom margin. |\n| <span style="color:salmon">alignRight</span>  | Centers the element and creates bottom margin.                      |'},{type:"code",content:"import { Image, Panel } from '../';\n\n<React.Fragment>\n    <Panel>\n\n        <p>Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat.</p>\n        <p>Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum. Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua.</p>\n    </Panel>\n</React.Fragment>",settings:{},evalInContext:i},{type:"markdown",content:'### Responsive Align\n\nReact-uikit provides a number of responsive alignment props.\nBasically, they work just like the usual alignment props, except that they have suffixes that represent the breakpoint from which they come to effect.\n\n| PROPS                                                                                                     | DESCRIPTION                                                                        |\n| --------------------------------------------------------------------------------------------------------- | ---------------------------------------------------------------------------------- |\n| <span style="color:salmon">alignLeftSmall</span><br /><span style="color:salmon">alignRightSmall</span>   | Only affects device widths of <span style="color:salmon">640px</span> and higher.  |\n| <span style="color:salmon">alignLeftMedium</span><br /><span style="color:salmon">alignRightMedium</span> | Only affects device widths of <span style="color:salmon">960px</span> and higher.  |\n| <span style="color:salmon">alignLeftLarge</span><br /><span style="color:salmon">alignRightLarge</span>   | Only affects device widths of <span style="color:salmon">1200px</span> and higher. |\n| <span style="color:salmon">alignLeftXLarge</span><br /><span style="color:salmon">alignRightXLarge</span> | Only affects device widths of <span style="color:salmon">1600px</span> and higher. |'},{type:"code",content:'import { Image, Panel } from \'../\';\n\n<React.Fragment>\n    <Panel>\n        <Image alignCenter alignRightMedium marginRemoveAdjacent width={225} height={150} src="https://getuikit.com/docs/images/light.jpg" alt="Image" />\n        <p>Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat.</p>\n        <p>Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum. Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua.</p>\n    </Panel>\n</React.Fragment>',settings:{},evalInContext:i}]},810:function(e,n,t){e.exports={doclets:{},displayName:"Animation",description:"",methods:[],props:[{type:{name:"bool"},required:!1,description:"The sub component fades in",defaultValue:{value:"false",computed:!1},tags:{},name:"fade"},{type:{name:"bool"},required:!1,description:"Allows the sub component to scale",defaultValue:{value:"false",computed:!1},tags:{},name:"scale"},{type:{name:"bool"},required:!1,description:"The sub component fades in and scales up",defaultValue:{value:"false",computed:!1},tags:{},name:"up"},{type:{name:"bool"},required:!1,description:"The sub component fades in and scales down",defaultValue:{value:"false",computed:!1},tags:{},name:"down"},{type:{name:"bool"},required:!1,description:"Allows the sub component to fade and slide",defaultValue:{value:"false",computed:!1},tags:{},name:"slide"},{type:{name:"bool"},required:!1,description:"Allows the sub component to set the origin",defaultValue:{value:"false",computed:!1},tags:{},name:"origin"},{type:{name:"bool"},required:!1,description:"The sub component fades and slides in from the top by its own height or width",defaultValue:{value:"false",computed:!1},tags:{},name:"top"},{type:{name:"bool"},required:!1,description:"The sub component fades and slides in from the bottom by its own height or width",defaultValue:{value:"false",computed:!1},tags:{},name:"bottom"},{type:{name:"bool"},required:!1,description:"The sub component fades and slides in from the left by its own height or width",defaultValue:{value:"false",computed:!1},tags:{},name:"left"},{type:{name:"bool"},required:!1,description:"The sub component fades and slides in from the right by its own height or width",defaultValue:{value:"false",computed:!1},tags:{},name:"right"},{type:{name:"bool"},required:!1,description:"The sub component fades and slides in from the top, bottom, left or right with a smaller distance which is specified by a fixed pixel value",defaultValue:{value:"false",computed:!1},tags:{},name:"small"},{type:{name:"bool"},required:!1,description:"The sub component fades and slides in from the top, bottom, left or right with a medium distance which is specified by a fixed pixel value",defaultValue:{value:"false",computed:!1},tags:{},name:"medium"},{type:{name:"bool"},required:!1,description:"The sub component scales very slowly up without fading in",defaultValue:{value:"false",computed:!1},tags:{},name:"kenBurns"},{type:{name:"bool"},required:!1,description:"The sub component shakes",defaultValue:{value:"false",computed:!1},tags:{},name:"shake"},{type:{name:"bool"},required:!1,description:"The SVG sub component strokes are drawn",defaultValue:{value:"false",computed:!1},tags:{},name:"stroke"},{type:{name:"bool"},required:!1,description:"Reverse any animation",defaultValue:{value:"false",computed:!1},tags:{},name:"reverse"},{type:{name:"bool"},required:!1,description:"Play animations at a faster speed",defaultValue:{value:"false",computed:!1},tags:{},name:"fast"},{type:{name:"bool"},required:!1,description:"Apply ScrollSpy related feature",defaultValue:{value:"false",computed:!1},tags:{},name:"cls"},{type:{name:"node"},required:!1,description:"Sub components to be passed in",defaultValue:{value:"undefined",computed:!0},tags:{},name:"children"}],examples:t(811)}},811:function(e,n,t){var a={"../":t(14),react:t(1),"./Animation.js":t(95)},o=t(8).default.bind(null,a),i=t(9).default.bind(null,"const React$0 = require('react');\nconst React = React$0['React'] || (React$0.default || React$0);\nconst Animation$0 = require('./Animation.js');\nconst Animation = Animation$0['Animation'] || (Animation$0.default || Animation$0);",o);e.exports=[{type:"markdown",content:'<https://getuikit.com/docs/animation>\n\n#### A collection of smooth animations to use within your page.\n\n### Fade Modifier\n\n| PROPS                                  | DESCRIPTION           |\n| -------------------------------------- | --------------------- |\n| <span style="color:salmon">fade</span> | The element fades in. |'},{type:"code",content:'import { Animation, Card, Grid } from \'../\';\n\n<React.Fragment>\n    <Grid childWidth="1-2" childWidthSmall="1-4" match>\n        <Animation fade>\n            <Card default body textCenter>Fade</Card>\n        </Animation>\n    </Grid>\n</React.Fragment>',settings:{},evalInContext:i},{type:"markdown",content:'### Scale Modifier\n\n| PROPS                                        | DESCRIPTION                           |\n| -------------------------------------------- | ------------------------------------- |\n| <span style="color:salmon">scale up</span>   | The element fades in and scales up.   |\n| <span style="color:salmon">scale down</span> | The element fades in and scales down. |'},{type:"code",content:'import { Animation, Card, Grid } from \'../\';\n\n<React.Fragment>\n    <Grid childWidth="1-2" childWidthSmall="1-4" match>\n        <Animation scale up>\n            <Card default body textCenter>Scale Up</Card>\n        </Animation>\n        <Animation scale down>\n            <Card default body textCenter>Scale Down</Card>\n        </Animation>\n    </Grid>\n</React.Fragment>',settings:{},evalInContext:i},{type:"markdown",content:'### Shake Modifier\n\n| PROPS                                   | DESCRIPTION         |\n| --------------------------------------- | ------------------- |\n| <span style="color:salmon">shake</span> | The element shakes. |'},{type:"code",content:'import { Animation, Card, Grid } from \'../\';\n\n<React.Fragment>\n    <Grid childWidth="1-2" childWidthSmall="1-4" match>\n        <Animation shake>\n            <Card default body textCenter>Shake</Card>\n        </Animation>\n    </Grid>\n</React.Fragment>',settings:{},evalInContext:i},{type:"markdown",content:'### Slide Modifier\n\n| PROPS                                          | DESCRIPTION                                      |\n| ---------------------------------------------- | ------------------------------------------------ |\n| <span style="color:salmon">slide left</span>   | The element fades and slides in from the left.   |\n| <span style="color:salmon">slide top</span>    | The element fades and slides in from the top.    |\n| <span style="color:salmon">slide bottom</span> | The element fades and slides in from the bottom. |\n| <span style="color:salmon">slide right</span>  | The element fades and slides in from the right.  |'},{type:"code",content:'import { Animation, Card, Grid } from \'../\';\n\n<React.Fragment>\n    <Grid childWidth="1-2" childWidthSmall="1-4" match>\n        <Animation slide left>\n            <Card default body textCenter>Slide Left</Card>\n        </Animation>\n        <Animation slide top>\n            <Card default body textCenter>Slide Top</Card>\n        </Animation>\n        <Animation slide bottom>\n            <Card default body textCenter>Slide Bottom</Card>\n        </Animation>\n        <Animation slide right>\n            <Card default body textCenter>Slide Right</Card>\n        </Animation>\n    </Grid>\n</React.Fragment>',settings:{},evalInContext:i},{type:"markdown",content:'### Reverse Modifier\n\n| PROPS                                                  | DESCRIPTION                                                |\n| ------------------------------------------------------ | ---------------------------------------------------------- |\n| <span style="color:salmon">reverse slide left</span>   | The element fades and slides in from the middle to left.   |\n| <span style="color:salmon">reverse slide top</span>    | The element fades and slides in from the middle to top.    |\n| <span style="color:salmon">reverse slide bottom</span> | The element fades and slides in from the middle to bottom. |\n| <span style="color:salmon">reverse slide right</span>  | The element fades and slides in from the middle to right.  |'},{type:"code",content:'import { Animation, Card, Grid } from \'../\';\n\n<React.Fragment>\n    <Grid childWidth="1-2" childWidthSmall="1-4" match>\n        <Animation reverse slide left>\n            <Card default body textCenter>Reverse Slide Left</Card>\n        </Animation>\n        <Animation reverse slide top>\n            <Card default body textCenter>Reverse Slide Top</Card>\n        </Animation>\n        <Animation reverse slide bottom>\n            <Card default body textCenter>Reverse Slide Bottom</Card>\n        </Animation>\n        <Animation reverse slide right>\n            <Card default body textCenter>Reverse Slide Right</Card>\n        </Animation>\n    </Grid>\n</React.Fragment>',settings:{},evalInContext:i},{type:"markdown",content:'### Slide Duration Modifier\n\n| PROPS                                    | DESCRIPTION                                   |\n| ---------------------------------------- | --------------------------------------------- |\n| <span style="color:salmon">small</span>  | The element fades and slides in from the top. |\n| <span style="color:salmon">medium</span> | The element fades and slides in from the top. |'},{type:"code",content:'import { Animation, Card, Grid } from \'../\';\n\n<React.Fragment>\n    <Grid childWidth="1-2" childWidthSmall="1-4" match>\n        <Animation small slide left>\n            <Card default body textCenter>Slide Left Small</Card>\n        </Animation>\n        <Animation small slide top>\n            <Card default body textCenter>Slide Top Small</Card>\n        </Animation>\n        <Animation small slide bottom>\n            <Card default body textCenter>Slide Bottom Small</Card>\n        </Animation>\n        <Animation small slide right>\n            <Card default body textCenter>Slide Right Small</Card>\n        </Animation>\n        <Animation medium slide left>\n            <Card default body textCenter>Slide Left Medium</Card>\n        </Animation>\n        <Animation medium slide top>\n            <Card default body textCenter>Slide Top Medium</Card>\n        </Animation>\n        <Animation medium slide bottom>\n            <Card default body textCenter>Slide Bottom Medium</Card>\n        </Animation>\n        <Animation medium slide right>\n            <Card default body textCenter>Slide Right Medium</Card>\n        </Animation>\n    </Grid>\n</React.Fragment>',settings:{},evalInContext:i},{type:"markdown",content:'### Fast Modifier\n\n| PROPS                                  | DESCRIPTION                                                             |\n| -------------------------------------- | ----------------------------------------------------------------------- |\n| <span style="color:salmon">fast</span> | To play animations at a faster speed, add the fast prop to the element. |'},{type:"code",content:"import { Animation, Card, Panel } from '../';\n\n<React.Fragment>\n    <Panel widthSmall=\"1-3\">\n        <Animation fade fast>\n            <Card default body>Fade Fast</Card>\n        </Animation>\n    </Panel>\n</React.Fragment>",settings:{},evalInContext:i},{type:"markdown",content:'### Origin Modifiers\n\n| PROPS                                                  | DESCRIPTION                                  |\n| ------------------------------------------------------ | -------------------------------------------- |\n| <span style="color:salmon">origin top left</span>      | Animation originates from the top left.      |\n| <span style="color:salmon">origin top center</span>    | Animation originates from the top center.    |\n| <span style="color:salmon">origin top right</span>     | Animation originates from the top right.     |\n| <span style="color:salmon">origin bottom left</span>   | Animation originates from the bottom left.   |\n| <span style="color:salmon">origin bottom center</span> | Animation originates from the bottom center. |\n| <span style="color:salmon">origin bottom right</span>  | Animation originates from the bottom right.  |'},{type:"code",content:'import { Animation, Card, Grid, Paragraph } from \'../\';\n\n<React.Fragment>\n    <Grid childWidthSmall="1-3">\n        <Animation sclae up origin top left>\n            <Card default body>\n                <Paragraph textCenter>Origin Top Left</Paragraph>\n            </Card>\n        </Animation>\n        <Animation sclae up origin top center>\n            <Card default body>\n                <Paragraph textCenter>Origin Top Center</Paragraph>\n            </Card>\n        </Animation>\n        <Animation sclae up origin top right>\n            <Card default body>\n                <Paragraph textCenter>Origin Top Right</Paragraph>\n            </Card>\n        </Animation>\n    </Grid>\n    <Grid childWidthSmall="1-3">\n        <Animation sclae up origin bottom left>\n            <Card default body>\n                <Paragraph textCenter>Origin Bottom Left</Paragraph>\n            </Card>\n        </Animation>\n        <Animation sclae up origin bottom center>\n            <Card default body>\n                <Paragraph textCenter>Origin Bottom Center</Paragraph>\n            </Card>\n        </Animation>\n        <Animation sclae up origin bottom right>\n            <Card default body>\n                <Paragraph textCenter>Origin Bottom Right</Paragraph>\n            </Card>\n        </Animation>\n    </Grid>\n</React.Fragment>',settings:{},evalInContext:i},{type:"markdown",content:'### Ken Burns Modifier\n\n| PROPS                                              | DESCRIPTION                                              |\n| -------------------------------------------------- | -------------------------------------------------------- |\n| <span style="color:salmon">kenBurns</span>         | Adds the Ken Burns effect with the kenBurns prop.        |\n| <span style="color:salmon">kenBurns reverse</span> | Adds the reverse Ken Burns effect with the reverse prop. |'},{type:"code",content:'import { Animation, Grid, Image, Overflow, Panel, Scrollspy } from \'../\';\n\n<React.Fragment>\n    <Grid small childWidthSmall="1-2">\n        <Panel>\n            <Overflow hidden>\n                <Scrollspy>\n                    <Animation kenBurns>\n                        <Image src="https://getuikit.com/docs/images/dark.jpg" alt="Example image" />\n                    </Animation>\n                </Scrollspy>\n            </Overflow>\n        </Panel>\n        <Panel>\n            <Overflow hidden>\n                <Scrollspy>\n                    <Animation kenBurns reverse>\n                        <Image src="https://getuikit.com/docs/images/dark.jpg" alt="Example image" />\n                    </Animation>\n                </Scrollspy>\n            </Overflow>\n        </Panel>\n    </Grid>\n</React.Fragment>',settings:{},evalInContext:i}]},812:function(e,n,t){e.exports={doclets:{},displayName:"Background",description:"",methods:[],props:[],examples:t(813)}},813:function(e,n,t){var a={react:t(1),"./Background.js":t(199)},o=t(8).default.bind(null,a);t(9).default.bind(null,"const React$0 = require('react');\nconst React = React$0['React'] || (React$0.default || React$0);\nconst Background$0 = require('./Background.js');\nconst Background = Background$0['Background'] || (Background$0.default || Background$0);",o),e.exports=[{type:"markdown",content:"<https://getuikit.com/docs/background>"}]},814:function(e,n,t){e.exports={doclets:{},displayName:"Button",description:"",methods:[],props:[{type:{name:"node"},required:!1,description:"Pass children elements to this element",defaultValue:{value:"undefined",computed:!0},tags:{},name:"children"}],examples:t(815)}},815:function(e,n,t){var a={react:t(1),"./Button.js":t(106)},o=t(8).default.bind(null,a);t(9).default.bind(null,"const React$0 = require('react');\nconst React = React$0['React'] || (React$0.default || React$0);\nconst Button$0 = require('./Button.js');\nconst Button = Button$0['Button'] || (Button$0.default || Button$0);",o),e.exports=[{type:"markdown",content:"<https://getuikit.com/docs/button>"}]},816:function(e,n,t){e.exports={doclets:{},displayName:"Card",description:"",methods:[],props:[{type:{name:"bool"},required:!1,description:"Add this props to the card to create padding between the card and its content",defaultValue:{value:"false",computed:!1},tags:{},name:"body"},{type:{name:"bool"},required:!1,description:"Add this prop to create a visually styled box",defaultValue:{value:"false",computed:!1},tags:{},name:"default"},{type:{name:"bool"},required:!1,description:"Add this prop to modify the card and emphasize it with a primary color",defaultValue:{value:"false",computed:!1},tags:{},name:"primary"},{type:{name:"bool"},required:!1,description:"Add this prop to modify the card and give it a secondary background color",defaultValue:{value:"false",computed:!1},tags:{},name:"secondary"},{type:{name:"bool"},required:!1,description:"Creates a hover effect on the card",defaultValue:{value:"false",computed:!1},tags:{},name:"hover"},{type:{name:"node"},required:!1,description:"Pass children elements to this element",defaultValue:{value:"undefined",computed:!0},tags:{},name:"children"}],examples:t(817)}},817:function(e,n,t){var a={react:t(1),"./Card.js":t(107)},o=t(8).default.bind(null,a),i=t(9).default.bind(null,"const React$0 = require('react');\nconst React = React$0['React'] || (React$0.default || React$0);\nconst Card$0 = require('./Card.js');\nconst Card = Card$0['Card'] || (Card$0.default || Card$0);",o);e.exports=[{type:"markdown",content:'<https://getuikit.com/docs/card>\n\n### Usage\n\nThe Card component consists of the card itself, the card body and an optional card title.\nTypically, cards are arranged in grid columns from the Grid component.\n\n| PROP                                   | DESCRIPTION                                                     |\n| -------------------------------------- | --------------------------------------------------------------- |\n| <span style="color:salmon">body</span> | Add this prop to a Card component to define the Card component. |'},{type:"code",content:'<React.Fragment>\n    <Card body default>\n        <Card.Title>Default</Card.Title>\n        <p>Lorem ipsum <a href="#">dolor</a> sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua.</p>\n    </Card>\n</React.Fragment>',settings:{},evalInContext:i},{type:"markdown",content:'### Style modifiers\n\nUIkit includes a number of modifiers that can be used to add a specific style to cards.\n\n| PROP                                        | DESCRIPTION                                                                |\n| ------------------------------------------- | -------------------------------------------------------------------------- |\n| <span style="color:salmon">default</span>   | Add this prop to create a visually styled box.                             |\n| <span style="color:salmon">primary</span>   | Add this prop to modify the card and emphasize it with a primary color.    |\n| <span style="color:salmon">secondary</span> | Add this prop to modify the card and give it a secondary background color. |'},{type:"code",content:"<React.Fragment>\n    <Card body default>\n        <Card.Title>Default</Card.Title>\n        <p>Lorem ipsum dolor sit amet, consectetur adipisicing elit.</p>\n    </Card>\n    <Card body primary>\n        <Card.Title>Primary</Card.Title>\n        <p>Lorem ipsum dolor sit amet, consectetur adipisicing elit.</p>\n    </Card>\n    <Card body secondary>\n        <Card.Title>Secondary</Card.Title>\n        <p>Lorem ipsum dolor sit amet, consectetur adipisicing elit.</p>\n    </Card>\n</React.Fragment>",settings:{},evalInContext:i}]},818:function(e,n,t){e.exports={doclets:{},displayName:"CodeBlock",description:"",methods:[],props:[{type:{name:"string"},required:!1,description:"",defaultValue:{value:'""',computed:!1},tags:{},name:"language"},{type:{name:"node"},required:!1,description:"Pass children elements to this element",defaultValue:{value:"undefined",computed:!0},tags:{},name:"children"}],examples:t(819)}},819:function(e,n,t){var a={react:t(1),"./CodeBlock.js":t(108)},o=t(8).default.bind(null,a);t(9).default.bind(null,"const React$0 = require('react');\nconst React = React$0['React'] || (React$0.default || React$0);\nconst CodeBlock$0 = require('./CodeBlock.js');\nconst CodeBlock = CodeBlock$0['CodeBlock'] || (CodeBlock$0.default || CodeBlock$0);",o),e.exports=[]},820:function(e,n,t){e.exports={doclets:{},displayName:"Container",description:"",methods:[],props:[{type:{name:"bool"},required:!1,description:"Add this prop for a xsmall container",defaultValue:{value:"false",computed:!1},tags:{},name:"xsmall"},{type:{name:"bool"},required:!1,description:"Add this prop for a small container",defaultValue:{value:"false",computed:!1},tags:{},name:"small"},{type:{name:"bool"},required:!1,description:"Add this prop for a large container",defaultValue:{value:"false",computed:!1},tags:{},name:"large"},{type:{name:"bool"},required:!1,description:"Add this prop, if you do not want to limit the container width but still want the dynamic horizontal padding",defaultValue:{value:"false",computed:!1},tags:{},name:"expand"},{type:{name:"node"},required:!1,description:"Pass children elements to this element",defaultValue:{value:"undefined",computed:!0},tags:{},name:"children"}],examples:t(821)}},821:function(e,n,t){var a={react:t(1),"./Container.js":t(200)},o=t(8).default.bind(null,a),i=t(9).default.bind(null,"const React$0 = require('react');\nconst React = React$0['React'] || (React$0.default || React$0);\nconst Container$0 = require('./Container.js');\nconst Container = Container$0['Container'] || (Container$0.default || Container$0);",o);e.exports=[{type:"markdown",content:"<https://getuikit.com/docs/container>\n\n### Usage\n\nUse a Grid class to a block element to give it a max-width and wrap the main content of your website.\nThe element will be centered and have padding on the sides, that adapts automatically for large screens.\n\n### Size modifiers\n\nAdd one of the following classes to the container to apply a different max-width."},{type:"code",content:"<React.Fragment>\n    <Container>Default</Container>\n    <Container xsmall>Extra Small</Container>\n    <Container small>Small</Container>\n    <Container large>Large</Container>\n    <Container expand>Expand</Container>\n</React.Fragment>",settings:{},evalInContext:i}]},822:function(e,n,t){e.exports={doclets:{},displayName:"Flex",description:"",methods:[],props:[],examples:t(823)}},823:function(e,n,t){var a={"../":t(14),react:t(1),"./Flex.js":t(201)},o=t(8).default.bind(null,a),i=t(9).default.bind(null,"const React$0 = require('react');\nconst React = React$0['React'] || (React$0.default || React$0);\nconst Flex$0 = require('./Flex.js');\nconst Flex = Flex$0['Flex'] || (Flex$0.default || Flex$0);",o);e.exports=[{type:"markdown",content:'<https://getuikit.com/docs/flex>\n\n#### Utilize the power of flexbox to create a wide range of layouts.\n\nThe Flex component has an essential role in building layouts in react-uikit.\nA lot of components, for example the Grid as well as horizontal navigations,\nlike the Navbar, Subnav, Breadcrumb, Pagination, Tab and Dotnav are built with\nflexbox and can be used together with the utility props from this component.\n\n### Usage\n\nTo apply the flexbox layout model, use one of the following props.\nBy default, all flex items are aligned to the left, as wide as their content and matched in height.\n\n| PROPS                                        | DESCRIPTION                                                  |\n| -------------------------------------------- | ------------------------------------------------------------ |\n| <span style="color:salmon">flex</span>       | Create the flex container and behave like a block element.   |\n| <span style="color:salmon">flexInline</span> | Create the flex container and behave like an inline element. |'},{type:"code",content:"import { Card, Panel } from '../';\n\n<React.Fragment>\n    <Panel flex>\n        <Card default body>Item 1</Card>\n        <Card default body marginLeft>Item 2</Card>\n        <Card default body marginLeft>Item 3</Card>\n    </Panel>\n</React.Fragment>",settings:{},evalInContext:i},{type:"markdown",content:'### Horizontal Alignment\n\nThese props define the horizontal alignment of flex items and distribute the space between them.\nAdd one or more of them to the flex container in order to configure the alignments of the flex items.\nBy default, flex items are aligned to the left as does the flexLeft props.\n\n| PROPS                                         | DESCRIPTION                                                                                       |\n| --------------------------------------------- | ------------------------------------------------------------------------------------------------- |\n| <span style="color:salmon">flexLeft</span>    | Add this prop to align flex items to the left.                                                    |\n| <span style="color:salmon">flexCenter</span>  | Add this prop to center flex items along the main axis.                                           |\n| <span style="color:salmon">flexRight</span>   | Add this prop to align flex items to the right.                                                   |\n| <span style="color:salmon">flexBetween</span> | Add this prop to distribute items evenly, with equal space between the items along the main axis. |\n| <span style="color:salmon">flexAround</span>  | Add this prop to distribute items evenly with equal space on both sides of each item.             |'},{type:"code",content:"import { Card, Panel } from '../';\n\n<React.Fragment>\n    <Panel flex flexCenter>\n        <Card default body>Item 1</Card>\n        <Card default body marginLeft>Item 2</Card>\n        <Card default body marginLeft>Item 3</Card>\n    </Panel>\n</React.Fragment>",settings:{},evalInContext:i},{type:"markdown",content:'### Responsive Flex\n\nReact-uikit provides a number of responsive flex props for horizontal alignment.\nBasically, they work just like the usual flex alignment props, except that they have suffixes that represent the breakpoint from which they come to effect.\n\n| PROPS                                                                                                                                                                                                                                                                                  | DESCRIPTION                                                                       |\n| -------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------- | --------------------------------------------------------------------------------- |\n| <span style="color:salmon">flexLeftSmall</span><br /><span style="color:salmon">flexCenterSmall</span><br /><span style="color:salmon">flexRightSmall</span><br /><span style="color:salmon">flexBetweenSmall</span><br /><span style="color:salmon">flexAroundSmall</span><br />      | Only affects device widths of <span style="color:salmon">640px</span> and higher. |\n| <span style="color:salmon">flexLeftMedium</span><br /><span style="color:salmon">flexCenterMedium</span><br /><span style="color:salmon">flexRightMedium</span><br /><span style="color:salmon">flexBetweenMedium</span><br /><span style="color:salmon">flexAroundMedium</span><br /> | Only affects device widths of <span style="color:salmon">640px</span> and higher. |\n| <span style="color:salmon">flexLeftLarge</span><br /><span style="color:salmon">flexCenterLarge</span><br /><span style="color:salmon">flexRightLarge</span><br /><span style="color:salmon">flexBetweenLarge</span><br /><span style="color:salmon">flexAroundLarge</span><br />      | Only affects device widths of <span style="color:salmon">640px</span> and higher. |\n| <span style="color:salmon">flexLeftXLarge</span><br /><span style="color:salmon">flexCenterXLarge</span><br /><span style="color:salmon">flexRightXLarge</span><br /><span style="color:salmon">flexBetweenXLarge</span><br /><span style="color:salmon">flexAroundXLarge</span><br /> | Only affects device widths of <span style="color:salmon">640px</span> and higher. |'},{type:"code",content:"import { Card, Panel } from '../';\n\n<React.Fragment>\n    <Panel flex flexCenterMedium flexRightLarge>\n        <Card default body>Item 1</Card>\n        <Card default body marginLeft>Item 2</Card>\n        <Card default body marginLeft>Item 3</Card>\n    </Panel>\n</React.Fragment>",settings:{},evalInContext:i},{type:"markdown",content:'### Vertical alignment\n\nThese props define the vertical alignment of flex items.\nBy default, flex items fill the height of their container as does the flexStretch props.\n\n| PROPS                                         | DESCRIPTION                                                            |\n| --------------------------------------------- | ---------------------------------------------------------------------- |\n| <span style="color:salmon">flexStretch</span> | Add this prop to expand flex items to fill the height of their parent. |\n| <span style="color:salmon">flexTop</span>     | Add this prop to align flex items to the top.                          |\n| <span style="color:salmon">flexMiddle</span>  | Add this prop to center flex items along the cross axis.               |\n| <span style="color:salmon">flexBottom</span>  | Add this prop to align flex items to the bottom.                       |'},{type:"code",content:"import { Card, Panel } from '../';\n\n<React.Fragment>\n    <Panel flex flexMiddle textCenter>\n        <Card default body>Item 1</Card>\n        <Card default body marginLeft>Item 2 <br />...</Card>\n        <Card default body marginLeft>Item 3 <br />... <br />...</Card>\n    </Panel>\n</React.Fragment>",settings:{},evalInContext:i},{type:"markdown",content:'### Direction modifiers\n\nThese props define the axis that flex items are placed on and their direction.\nBy default, items run horizontally from left to right as does the flexRow prop.\n\n| PROPS                                               | DESCRIPTION                                              |\n| --------------------------------------------------- | -------------------------------------------------------- |\n| <span style="color:salmon">flexRow</span>           | Add this prop to lay out flex items as horizontal rows   |\n| <span style="color:salmon">flexRowReverse</span>    | Add this prop to lay out flex items from right to left.  |\n| <span style="color:salmon">flexColumn</span>        | Add this prop to lay out flex items as vertical columns. |\n| <span style="color:salmon">flexColumnReverse</span> | Add this prop to lay out flex items from bottom to top.  |'},{type:"code",content:"import { Card, Panel } from '../';\n\n<React.Fragment>\n    <Panel flex flexColumn width=\"1-3\">\n        <Card default body>Item 1</Card>\n        <Card default body marginTop>Item 2</Card>\n        <Card default body marginTop>Item 3</Card>\n    </Panel>\n</React.Fragment>",settings:{},evalInContext:i},{type:"markdown",content:'### Wrap Modifiers\n\nBy default, flex items are fit into one line and run from left to right.\nAdd one of these props to modify the behavior of wrapping flex items.\n\n| PROPS                                             | DESCRIPTION                                                                                      |\n| ------------------------------------------------- | ------------------------------------------------------------------------------------------------ |\n| <span style="color:salmon">flexWrap</span>        | Add this prop to make flex items wrap into another line when they no longer fit their container. |\n| <span style="color:salmon">flexWrapReverse</span> | Add this prop to change the items\' direction so that they run from right to left.                |\n| <span style="color:salmon">flexNoWrap</span>      | Add this prop to force the flex items into one line. This is the default behavior.               |\n\nThe following props modify the alignment of wrapping flex items.\n\n| PROPS                                             | DESCRIPTION                                                                                                               |\n| ------------------------------------------------- | ------------------------------------------------------------------------------------------------------------------------- |\n| <span style="color:salmon">flexWrapStretch</span> | Add this prop, so that item lines stretch to take up the remaining space                                                  |\n| <span style="color:salmon">flexWrapBetween</span> | Add this prop to distribute item lines evenly, with the first row at the top and last row at the bottom of the container. |\n| <span style="color:salmon">flexWrapAround</span>  | Add this prop to distribute lines evenly with equal space at the top and bottom of each row.                              |\n| <span style="color:salmon">flexWrapTop</span>     | Add this prop to align multiline flex items to the top.                                                                   |\n| <span style="color:salmon">flexWrapMiddle</span>  | Add this prop to vertically center multirow flex items.                                                                   |\n| <span style="color:salmon">flexWrapBottom</span>  | Add this prop to align multiline flex items to the bottom.                                                                |'},{type:"code",content:'import { Card, Panel } from \'../\';\n\n<React.Fragment>\n    <Panel flex flexWrap flexWrapAround backgroundMuted heightMedium textCenter>\n        <Card default body small width="1-3">Item 1</Card>\n        <Card default body small width="1-2" marginLeft>Item 2</Card>\n\n        <Card default body small width="1-3">Item 3</Card>\n        <Card default body small width="1-3" marginLeft>Item 4</Card>\n\n        <Card default body small width="1-2">Item 5</Card>\n        <Card default body small width="1-3" marginLeft>Item 6</Card>\n    </Panel>\n</React.Fragment>',settings:{},evalInContext:i},{type:"markdown",content:'### Item order\n\nBy default, flex items are laid out according to the source order.\nTo display a certain item as the first or last one, just add one of these props.\n\n| PROPS                                                                                                   | DESCRIPTION                                                                   |\n| ------------------------------------------------------------------------------------------------------- | ----------------------------------------------------------------------------- |\n| <span style="color:salmon">flexFirst</span>                                                             | Displays the item as the first one.                                           |\n| <span style="color:salmon">flexLast</span>                                                              | Displays the item as the last one.                                            |\n| <span style="color:salmon">flexFirstSmall</span><br /><span style="color:salmon">flexLastSmall</span>   | Affects device widths of <span style="color:salmon">640px</span> and higher.  |\n| <span style="color:salmon">flexFirstMedium</span><br /><span style="color:salmon">flexLastMedium</span> | Affects device widths of <span style="color:salmon">960px</span> and higher.  |\n| <span style="color:salmon">flexFirstLarge</span><br /><span style="color:salmon">flexLastLarge</span>   | Affects device widths of <span style="color:salmon">1200px</span> and higher. |\n| <span style="color:salmon">flexFirstXLarge</span><br /><span style="color:salmon">flexLastXLarge</span> | Affects device widths of <span style="color:salmon">1600px</span> and higher. |'},{type:"code",content:"import { Card, Panel } from '../';\n\n<React.Fragment>\n    <Panel flex>\n        <Card default body flexLast marginLeft>Item 1</Card>\n        <Card default body flexFirst marginLeft>Item 2</Card>\n        <Card default body marginLeft>Item 3</Card>\n    </Panel>\n</React.Fragment>",settings:{},evalInContext:i},{type:"markdown",content:'### Item dimensions\n\nTo determine how much space a flex item should take up, add one of the following props to the item.\nBy default, items determine their size by their content, but are allowed to shrink.\n\n| PROPS                                      | DESCRIPTION                                            |\n| ------------------------------------------ | ------------------------------------------------------ |\n| <span style="color:salmon">flexNone</span> | The box\'s size is determined by its content.           |\n| <span style="color:salmon">flexAuto</span> | The space is allocated considering the item\'s content. |\n| <span style="color:salmon">flex1</span>    | The space is allocated solely based on flex.           |'},{type:"code",content:'import { Card, Grid, Image, Panel } from \'../\';\n\n<React.Fragment>\n    <Grid flexMiddle>\n        <Panel widthMedium="2-3">\n            <p>Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna.</p>\n        </Panel>\n        <Panel widthMedium="1-3" flexFirst>\n            <Image src="https://getuikit.com/docs/images/light.jpg" alt="Image" />\n        </Panel>\n    </Grid>\n</React.Fragment>',settings:{},evalInContext:i}]},824:function(e,n,t){e.exports={doclets:{},displayName:"Form",description:"",methods:[],props:[{type:{name:"node"},required:!1,description:"Pass children elements to this element",defaultValue:{value:"undefined",computed:!0},tags:{},name:"children"}],examples:t(825)}},825:function(e,n,t){var a={react:t(1),"./Form.js":t(105)},o=t(8).default.bind(null,a),i=t(9).default.bind(null,"const React$0 = require('react');\nconst React = React$0['React'] || (React$0.default || React$0);\nconst Form$0 = require('./Form.js');\nconst Form = Form$0['Form'] || (Form$0.default || Form$0);",o);e.exports=[{type:"markdown",content:'<https://getuikit.com/docs/form>\n\n#### Easily create nice looking forms with different styles and layouts.\n\n### Usage\n\nAdd one of the following props to form controls inside a Form component to define them.\n\n| PROP                                   | DESCRIPTION                                                     |\n| -------------------------------------- | --------------------------------------------------------------- |\n| <span style="color:salmon">body</span> | Add this prop to a Card component to define the Card component. |'},{type:"code",content:"<React.Fragment>\n    <Form>\n        <Form.Fieldset>\n            <Form.Legend>Legend</Form.Legend>\n\n        </Form.Fieldset>\n    </Form>\n</React.Fragment>",settings:{},evalInContext:i}]},826:function(e,n,t){e.exports={doclets:{},displayName:"Grid",description:"",methods:[],props:[{type:{name:"bool"},required:!1,description:"Add this props to apply a small gap.",defaultValue:{value:"false",computed:!1},tags:{},name:"small"},{type:{name:"bool"},required:!1,description:"Add this props to apply a medium gap like the default one, but without a breakpoint.",defaultValue:{value:"false",computed:!1},tags:{},name:"medium"},{type:{name:"bool"},required:!1,description:"Add this props to apply a large gap with breakpoints.",defaultValue:{value:"false",computed:!1},tags:{},name:"large"},{type:{name:"bool"},required:!1,description:"Add this props to remove the grid gap entirely.",defaultValue:{value:"false",computed:!1},tags:{},name:"collapse"},{type:{name:"bool"},required:!1,description:"Add one of these props to apply a small gap to the column or row.",defaultValue:{value:"false",computed:!1},tags:{},name:"columnSmall"},{type:{name:"bool"},required:!1,description:"",defaultValue:{value:"false",computed:!1},tags:{},name:"rowSmall"},{type:{name:"bool"},required:!1,description:"Add one of these props to apply a medium gap to the column or row.",defaultValue:{value:"false",computed:!1},tags:{},name:"columnMedium"},{type:{name:"bool"},required:!1,description:"",defaultValue:{value:"false",computed:!1},tags:{},name:"rowMedium"},{type:{name:"bool"},required:!1,description:"Add one of these props to apply a large gap to the column or row.",defaultValue:{value:"false",computed:!1},tags:{},name:"columnLarge"},{type:{name:"bool"},required:!1,description:"",defaultValue:{value:"false",computed:!1},tags:{},name:"rowLarge"},{type:{name:"bool"},required:!1,description:"Add one of these props to remove the grid gap entirely from the column or row.",defaultValue:{value:"false",computed:!1},tags:{},name:"columnCollapse"},{type:{name:"bool"},required:!1,description:"",defaultValue:{value:"false",computed:!1},tags:{},name:"rowCollapse"},{type:{name:"bool"},required:!1,description:"This prop can be combined with the gap modifiers. As soon as the grid stacks, the divider lines will become horizontal.",defaultValue:{value:"false",computed:!1},tags:{},name:"divider"},{type:{name:"bool"},required:!1,description:"To match the height of the direct child of each cell, add this prop.",defaultValue:{value:"false",computed:!1},tags:{},name:"match"},{type:{name:"bool"},required:!1,description:"If grid cells have different heights, a layout free of gaps can be created by adding this prop.",defaultValue:{value:"false",computed:!1},tags:{},name:"masonry"},{type:{name:"number"},required:!1,description:"To move single columns of a grid at different speeds while scrolling, just add this prop.",defaultValue:{value:"0",computed:!1},tags:{},name:"parallax"},{type:{name:"node"},required:!1,description:"Pass children elements to this element.",defaultValue:{value:"undefined",computed:!0},tags:{},name:"children"}],examples:t(827)}},827:function(e,n,t){var a={"../":t(14),react:t(1),"./Grid.js":t(109)},o=t(8).default.bind(null,a),i=t(9).default.bind(null,"const React$0 = require('react');\nconst React = React$0['React'] || (React$0.default || React$0);\nconst Grid$0 = require('./Grid.js');\nconst Grid = Grid$0['Grid'] || (Grid$0.default || Grid$0);",o);e.exports=[{type:"markdown",content:"<https://getuikit.com/docs/grid>\n\n### Create a fully responsive, fluid and nestable grid layout.\n\nThe Grid system of react-uikit allows you to arrange block elements in columns.\nIt works closely together with the <a href='#/Width' target='blank'>Width component</a> to determine how much space of the container each item will take up,\nand it can also be combined with the <a href='#/Flex' target='blank'>Flex component</a> to align and order grid items.\n\n* * *\n\n### Usage\n\nTo create the grid container, use the Grid component.\nAdd child <a href='#/Grid' target='blank'>Grid components</a> to create the cells.\nBy default, all grid cells are stacked.\nTo place them side by side, add one of the props from the <a href='#/Width' target='blank'>Width component</a>.\nUsing `widthExpand` property will automatically apply equal width to items, regardless of how many there are.\n\nOften cards from the <a href='#/Card' target='blank'>Card component</a> are used inside a grid. This also goes for the following examples for visualization."},{type:"code",content:"import { Card, Grid, Panel } from '../';\n<React.Fragment>\n    <Grid childWidthExpandSmall textCenter>\n        <Panel>\n            <Card default body>Item</Card>\n        </Panel>\n        <Panel>\n            <Card default body>Item</Card>\n        </Panel>\n        <Panel>\n            <Card default body>Item</Card>\n        </Panel>\n    </Grid>\n</React.Fragment>",settings:{},evalInContext:i},{type:"markdown",content:'* * *\n\n### Gap modifiers\n\nThe Grid component comes with a default gap that is decreased automatically from a certain breakpoint usually on a smaller desktop viewport width.\nTo apply a different gap, add one of the following props.\n\n| PROPS                                      | DESCRIPTION                                                                          |\n| ------------------------------------------ | ------------------------------------------------------------------------------------ |\n| <span style="color:salmon">small</span>    | Add this class to apply a small gap.                                                 |\n| <span style="color:salmon">medium</span>   | Add this class to apply a medium gap like the default one, but without a breakpoint. |\n| <span style="color:salmon">large</span>    | Add this class to apply a large gap with breakpoints.                                |\n| <span style="color:salmon">collapse</span> | Add this class to remove the grid gap entirely.                                      |'},{type:"code",content:"import { Card, Grid, Panel } from '../';\n<React.Fragment>\n    <Grid small childWidthExpandSmall textCenter>\n        <Panel>\n            <Card default body>Item</Card>\n        </Panel>\n        <Panel>\n            <Card default body>Item</Card>\n        </Panel>\n        <Panel>\n            <Card default body>Item</Card>\n        </Panel>\n    </Grid>\n    <Grid medium childWidthExpandSmall textCenter>\n        <Panel>\n            <Card default body>Item</Card>\n        </Panel>\n        <Panel>\n            <Card default body>Item</Card>\n        </Panel>\n        <Panel>\n            <Card default body>Item</Card>\n        </Panel>\n    </Grid>\n    <Grid large childWidthExpandSmall textCenter>\n        <Panel>\n            <Card default body>Item</Card>\n        </Panel>\n        <Panel>\n            <Card default body>Item</Card>\n        </Panel>\n        <Panel>\n            <Card default body>Item</Card>\n        </Panel>\n    </Grid>\n    <Grid collapse childWidthExpandSmall textCenter marginTopLarge>\n        <Panel>\n            <Card backgroundMuted body>Item</Card>\n        </Panel>\n        <Panel>\n            <Card backgroundPrimary body>Item</Card>\n        </Panel>\n        <Panel>\n            <Card backgroundSecondary body>Item</Card>\n        </Panel>\n    </Grid>\n</React.Fragment>",settings:{},evalInContext:i},{type:"markdown",content:'* * *\n\n#### Column and Row\n\nTo apply a different gap to just the column or row, add one of the following props.\n\n| PROPS                                                                                     | DESCRIPTION                                                                    |\n| ----------------------------------------------------------------------------------------- | ------------------------------------------------------------------------------ |\n| <div style="color:salmon">columnSmall</div><div style="color:salmon">rowSmall</div>       | Add one of these props to apply a small gap to the column or row.              |\n| <div style="color:salmon">columnMedium</div><div style="color:salmon">rowMedium</div>     | Add one of these props to apply a medium gap to the column or row.             |\n| <div style="color:salmon">columnLarge</div><div style="color:salmon">rowLarge</div>       | Add one of these props to apply a large gap to the column or row.              |\n| <div style="color:salmon">columnCollapse</div><div style="color:salmon">rowCollapse</div> | Add one of these props to remove the grid gap entirely from the column or row. |'},{type:"code",content:"import { Card, Grid, Panel } from '../';\n<React.Fragment>\n    <Grid columnSmall rowLarge childWidthSmall=\"1-3\" textCenter>\n        <Panel>\n            <Card default body>Item</Card>\n        </Panel>\n        <Panel>\n            <Card default body>Item</Card>\n        </Panel>\n        <Panel>\n            <Card default body>Item</Card>\n        </Panel>\n        <Panel>\n            <Card default body>Item</Card>\n        </Panel>\n        <Panel>\n            <Card default body>Item</Card>\n        </Panel>\n        <Panel>\n            <Card default body>Item</Card>\n        </Panel>\n    </Grid>\n</React.Fragment>",settings:{},evalInContext:i},{type:"markdown",content:"* * *\n\n### Nested grid\n\nYou can easily extend your grid layout with nested grids."},{type:"code",content:'import { Card, Grid, Panel } from \'../\';\n<React.Fragment>\n    <Grid childWidth="1-2" textCenter>\n        <Panel>\n            <Card default body>Item</Card>\n        </Panel>\n        <Grid childWidth="1-2" textCenter>\n            <Panel>\n                <Card primary body>Item</Card>\n            </Panel>\n            <Panel>\n                <Card primary body>Item</Card>\n            </Panel>\n        </Grid>\n    </Grid>\n</React.Fragment>',settings:{},evalInContext:i},{type:"markdown",content:"* * *\n\n### Divider modifier\n\nAdd the `divider` prop to separate grid cells with lines. This class can be combined with the gap modifiers. As soon as the grid stacks, the divider lines will become horizontal."},{type:"code",content:"import { Card, Grid, Panel } from '../';\n<React.Fragment>\n    <Grid divider childWidthExpandSmall>\n        <Card>Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua.</Card>\n        <Card>Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat.</Card>\n        <Card>Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur.</Card>\n    </Grid>\n</React.Fragment>",settings:{},evalInContext:i},{type:"markdown",content:"* * *\n\n### Match height\n\nTo match the height of the direct child of each cell, add the `match` prop. This is needed to match the height of cards from the <a href='#/Card' target='blank'>Card component</a>."},{type:"code",content:"import { Card, Grid, Panel } from '../';\n<React.Fragment>\n    <Grid match childWidthExpandSmall textCenter>\n        <Panel>\n            <Card default body>Item</Card>\n        </Panel>\n        <Panel>\n            <Card default body>Item<br/>...</Card>\n        </Panel>\n        <Panel>\n            <Card default body>Item<br/>...<br/>...</Card>\n        </Panel>\n    </Grid>\n</React.Fragment>",settings:{},evalInContext:i},{type:"markdown",content:"* * *\n\n#### Match only one cell\n\nYou can also match the height of the direct child of just one cell. To do so, use Grid.ItemMatch component to the grid item whose child you want to match."},{type:"code",content:"import { Card, Grid, Panel } from '../';\n<React.Fragment>\n    <Grid childWidthExpandSmall textCenter>\n        <Grid.ItemMatch>\n            <Card default body>\n                <h3>Heading</h3>\n                <p>\n                    Lorem ipsum dolor sit amet.\n                </p>\n            </Card>\n        </Grid.ItemMatch>\n        <Panel>\n            <h3>Heading</h3>\n            <p>\n                Lorem ipsum dolor sit amet, consectetur adipisicing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat.\n            </p>\n        </Panel>\n    </Grid>\n</React.Fragment>",settings:{},evalInContext:i},{type:"markdown",content:"* * *\n\n#### Targets\n\nFor a more specific selection of the elements whose heights should be matched, add the target: SELECTOR option to the <a href='#/Height' target='blank'>Height component</a>.\nIMPORTANT!TODO Fix this part once <a href='#/Height' target='blank'>Height component</a> is ready"},{type:"code",content:"import { Card, Grid, Panel } from '../';\n<React.Fragment>\n    <Grid childWidthExpandSmall textCenter>\n        <Grid.ItemMatch>\n            <Card default body>\n                <h3>Heading</h3>\n                <p>\n                    Lorem ipsum dolor sit amet.\n                </p>\n            </Card>\n        </Grid.ItemMatch>\n        <Panel>\n            <h3>Heading</h3>\n            <p>\n                Lorem ipsum dolor sit amet, consectetur adipisicing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat.\n            </p>\n        </Panel>\n    </Grid>\n</React.Fragment>",settings:{},evalInContext:i},{type:"markdown",content:"* * *\n\n### Grid and width\n\nThe grid is mostly used in combination with the <a href='#/Width' target='blank'>Width component</a>. This allows for great flexibility when determining the column widths."},{type:"code",content:"import { Card, Grid, Panel } from '../';\n<React.Fragment>\n    <Grid textCenter>\n        <Panel widthAutoMedium>\n            <Card default body>Auto</Card>\n        </Panel>\n        <Panel widthMedium=\"1-3\">\n            <Card default body>1-3</Card>\n        </Panel>\n        <Panel widthExpandMedium>\n            <Card default body>Expand</Card>\n        </Panel>\n    </Grid>\n</React.Fragment>",settings:{},evalInContext:i},{type:"markdown",content:"* * *\n\n#### Child width\n\nIf the grid columns are evenly split, you can add one of the `childWidth*` props to the grid container instead of adding a class to each of the items."},{type:"code",content:'import { Card, Grid, Panel } from \'../\';\n<React.Fragment>\n    <Grid childWidthSmall="1-2" childWidthMedium="1-3" textCenter>\n        <Panel>\n            <Card default body>Item</Card>\n        </Panel>\n        <Panel>\n            <Card default body>Item</Card>\n        </Panel>\n        <Panel>\n            <Card default body>Item</Card>\n        </Panel>\n    </Grid>\n</React.Fragment>',settings:{},evalInContext:i},{type:"markdown",content:"For more detailed information, take a look at the <a href='#/Width' target='blank'>Width component</a>.\n\n* * *\n\n### Grid and flex\n\nYou can easily combine the grid with the <a href='#/Flex' target='blank'>Flex component</a>.\nThat way you can modify the items' alignment, ordering, direction and wrapping.\nThis allows you, for example, to flip the cells' display order for wider viewports.\nAll this works together with the gap and divider modifiers."},{type:"code",content:"import { Card, Grid, Panel } from '../';\n<React.Fragment>\n    <Grid small childWidthSmall=\"1-4\" flexCenter textCenter>\n        <Panel>\n            <Card default body>Item 1</Card>\n        </Panel>\n        <Panel flexLast>\n            <Card secondary body>Item 2</Card>\n        </Panel>\n        <Panel>\n            <Card default body>Item 3</Card>\n        </Panel>\n        <Panel>\n            <Card default body>Item 4</Card>\n        </Panel>\n        <Panel flexFirst>\n            <Card primary body>Item 5</Card>\n        </Panel>\n        <Panel>\n            <Card default body>Item 6</Card>\n        </Panel>\n    </Grid>\n</React.Fragment>",settings:{},evalInContext:i},{type:"markdown",content:"* * *\n\n### Masonry\n\nIf grid cells have different heights, a layout free of gaps can be created by adding `masonry` attribute."},{type:"code",content:'import { Card, Grid, Panel } from \'../\';\n<React.Fragment>\n    <Grid small childWidthSmall="1-2" childWidthMedium="1-3" masonry>\n        <Panel>\n            <Card default flex flexCenter flexMiddle height="100px">Item</Card>\n        </Panel>\n        <Panel>\n            <Card default flex flexCenter flexMiddle height="130px">Item</Card>\n        </Panel>\n        <Panel>\n            <Card default flex flexCenter flexMiddle height="150px">Item</Card>\n        </Panel>\n        <Panel>\n            <Card default flex flexCenter flexMiddle height="160px">Item</Card>\n        </Panel>\n        <Panel>\n            <Card default flex flexCenter flexMiddle height="120px">Item</Card>\n        </Panel>\n        <Panel>\n            <Card default flex flexCenter flexMiddle height="140px">Item</Card>\n        </Panel>\n        <Panel>\n            <Card default flex flexCenter flexMiddle height="200px">Item</Card>\n        </Panel>\n        <Panel>\n            <Card default flex flexCenter flexMiddle height="180px">Item</Card>\n        </Panel>\n        <Panel>\n            <Card default flex flexCenter flexMiddle height="140px">Item</Card>\n        </Panel>\n    </Grid>\n</React.Fragment>',settings:{},evalInContext:i},{type:"markdown",content:"NOTE: You can view more examples in the tests for the <a href=\"https://getuikit.com/assets/uikit/tests/grid-masonry.html\">Grid Masonry</a>.\n\n* * *\n\n### Filter and order\n\nGrid items can also be filtered and sorted by category, date or other meta data.\nTake a look at the <a href='#/Filter' target='blank'>Filter component</a>.\n\n* * *\n\n### Parallax\n\nTo move single columns of a grid at different speeds while scrolling, just add `parallax` attribute.\nThe number sets the parallax translation in pixels.\nThis effect can be applied to two types of markup.\nThe following example uses three defined columns with three items each."},{type:"code",content:"import { Card, Grid, Panel } from '../';\n<React.Fragment>\n    <Grid childWidthExpandSmall textCenter parallax={150}>\n        <Panel>\n            <Card default body>Item</Card>\n            <Card default body>Item</Card>\n            <Card default body>Item</Card>\n        </Panel>\n        <Panel>\n            <Card default body>Item</Card>\n            <Card default body>Item</Card>\n            <Card default body>Item</Card>\n        </Panel>\n        <Panel>\n            <Card default body>Item</Card>\n            <Card default body>Item</Card>\n            <Card default body>Item</Card>\n        </Panel>\n    </Grid>\n</React.Fragment>",settings:{},evalInContext:i},{type:"markdown",content:"The parallax effect is also applied if grid columns wrap into the next row, as shown in the next example."},{type:"code",content:'import { Card, Grid, Panel } from \'../\';\n<React.Fragment>\n    <Grid childWidthSmall="1-2" childWidthMedium="1-3" childWidthLarge="1-4"textCenter parallax={150}>\n        <Panel>\n            <Card default body>Item</Card>\n        </Panel>\n        <Panel>\n            <Card default body>Item</Card>\n        </Panel>\n        <Panel>\n            <Card default body>Item</Card>\n        </Panel>\n        <Panel>\n            <Card default body>Item</Card>\n        </Panel>\n        <Panel>\n            <Card default body>Item</Card>\n        </Panel>\n        <Panel>\n            <Card default body>Item</Card>\n        </Panel>\n        <Panel>\n            <Card default body>Item</Card>\n        </Panel>\n        <Panel>\n            <Card default body>Item</Card>\n        </Panel>\n        <Panel>\n            <Card default body>Item</Card>\n        </Panel>\n        <Panel>\n            <Card default body>Item</Card>\n        </Panel>\n        <Panel>\n            <Card default body>Item</Card>\n        </Panel>\n        <Panel>\n            <Card default body>Item</Card>\n        </Panel>\n    </Grid>\n</React.Fragment>',settings:{},evalInContext:i},{type:"markdown",content:"NOTE: You can view more examples in the <a href='#/Grid' target='blank'>Grid Parallax</a> tests.\n\n* * *\n\n### Component options\n\n!TODO! Fix margin and first-column components, those should be general and should not be part of a grid\nAny of these options can be applied to the component attribute. Separate multiple options with a semicolon. <a href='https://getuikit.com/docs/javascript#component-configuration' target='blank'>Learn more</a>\n\n| OPTION                                         | VALUE   | DEFAULT         | DESCRIPTION                                                                                                     |\n| ---------------------------------------------- | ------- | --------------- | --------------------------------------------------------------------------------------------------------------- |\n| <span style=\"color:salmon\">margin</span>       | String  | uk-grid-margin  | This class is added to items that break into the next row, typically to create margin to the previous row.      |\n| <span style=\"color:salmon\">first-column</span> | String  | uk-first-column | This class is added to the first element in each row.                                                           |\n| <span style=\"color:salmon\">masonry</span>      | Boolean | false           | Enables masonry layout for this grid.                                                                           |\n| <span style=\"color:salmon\">parallax</span>     | Number  | 0               | Parallax translation value. The value must be a positive integer. Falsy disables the parallax effect (default). |\n\n* * *\n\n### JavaScript\n\nLearn more about <a href='https://getuikit.com/docs/javascript#programmatic-use' target='blank'>JavaScript components</a>."}]},828:function(e,n,t){e.exports={doclets:{},displayName:"Height",description:"",methods:[],props:[],examples:t(829)}},829:function(e,n,t){var a={"../":t(14),react:t(1),"./Height.js":t(202)},o=t(8).default.bind(null,a),i=t(9).default.bind(null,"const React$0 = require('react');\nconst React = React$0['React'] || (React$0.default || React$0);\nconst Height$0 = require('./Height.js');\nconst Height = Height$0['Height'] || (Height$0.default || Height$0);",o);e.exports=[{type:"markdown",content:'<https://getuikit.com/docs/height>\n\n#### Utilize the power of flexbox to create a wide range of layouts.\n\nDefine the height of elements depending on the viewport or match the heights of different elements.\nReact UIkit\'s <a href=\'#/Height\' target=\'blank\'>Height component</a> offers three ways to set heights: using simple fixed height utility props, depending on the viewport or by matching the heights of different elements.\n\n### Usage\n\nReact UIkit provides a number of useful props to alter an element\'s height.\n\n| PROPS                                                                                       | DESCRIPTION                                                                                 |\n| ------------------------------------------------------------------------------------------- | ------------------------------------------------------------------------------------------- |\n| <div style="color:salmon">height1_1</div>                                                   | This port applies a height of 100%. This only works if the parent element has a set height. |\n| <div style="color:salmon">heightSmall</div><div style="color:salmon">heightMaxSmall</div>   | These prop apply a height or max-height of <span style="color:salmon">150px</span>.         |\n| <div style="color:salmon">heightMedium</div><div style="color:salmon">heightMaxMedium</div> | These prop apply a height or max-height of <span style="color:salmon">300px</span>.         |\n| <div style="color:salmon">heightLarge</div><div style="color:salmon">heightMaxLarge</div>   | These prop apply a height or max-height of <span style="color:salmon">450px</span>.         |'},{type:"code",content:"import { Card, Grid, Panel } from '../';\n\n<React.Fragment>\n    <Grid childWidthSmall=\"1-3\">\n        <Panel>\n            <Card heightSmall default body flex flexCenter flexMiddle>Small</Card>\n        </Panel>\n        <Panel>\n            <Card heightMedium default body flex flexCenter flexMiddle>Medium</Card>\n        </Panel>\n        <Panel>\n           <Card heightLarge default body flex flexCenter flexMiddle>Large</Card>\n        </Panel>\n    </Grid>\n</React.Fragment>",settings:{},evalInContext:i},{type:"markdown",content:'* * *\n\n### Viewport height\n\nAdd the <span style="color:salmon">heightViewport</span> property to create a container that fills the height of the entire viewport.\nYou can change the height behavior by adding the <span style="color:salmon">heightViewportOffsetTop</span>,\n<span style="color:salmon">heightViewportOffsetBottom</span> or <span style="color:salmon">heightViewportExpand</span> prop.\n<a href="https://getuikit.com/docs/javascript#component-configuration">Learn more</a>\n\n| PROPS                                         | VALUE                  | DEFAULT                               | DESCRIPTION                                                                                                                                                                               |\n| --------------------------------------------- | ---------------------- | ------------------------------------- | ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------- |\n| <div style="color:salmon">offset-top</div>    | Boolean                | <div style="color:salmon">false</div> | Subtracts the element\'s top offset from its height.                                                                                                                                       |\n| <div style="color:salmon">offset-bottom</div> | Boolean, Number, Pixel | <div style="color:salmon">false</div> | Subtracts the height (true) of the sibling that immediately follows the element, the given percentage (Number), Pixel (px) value from element\'s own height or the given element\'s height. |\n| <div style="color:salmon">expand</div>        | Boolean                | <div style="color:salmon">false</div> | Expands the element\'s height to make a short page fill the viewport.                                                                                                                      |\n| <div style="color:salmon">min-height</div>    | Number                 | <div style="color:salmon">0</div>     | Sets a minimum height. Useful if all children are positioned absolute.                                                                                                                    |\n\n```html\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>Card</span> <span class="token attr-name">heightViewport</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>Card</span><span class="token punctuation">></span></span>\n\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>Card</span> <span class="token attr-name">heightViewportOffsetTop</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>true<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>Card</span><span class="token punctuation">></span></span>\n\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>Card</span> <span class="token attr-name">heightViewportOffsetBottom</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>20<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>Card</span><span class="token punctuation">></span></span>\n\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>Card</span> <span class="token attr-name">heightViewportExpand</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>true<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>Card</span><span class="token punctuation">></span></span>\n\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>Card</span> <span class="token attr-name">heightViewportMinHeight</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>300<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>Card</span><span class="token punctuation">></span></span>\n```\n\nYou can view examples in the tests for <a href="https://getuikit.com/assets/uikit/tests/height-viewport.html">Height Viewport</a>\nand <a href="https://getuikit.com/assets/uikit/tests/height-expand.html">Height Expand</a>.\n\n* * *\n\n### Match height\n\nTo expand all children of a container to the same height regardless of their content, for example inside a grid, add the <span style="color:salmon">heightMatch</span> prop.\nYou can change the height matching behavior by setting the <span style="color:salmon">heightMatchTarget</span> or <span style="color:salmon">heightMatchRow</span> prop.\n<a href="https://getuikit.com/docs/javascript#component-configuration">Learn more</a>\n\n| PROPS                                             | VALUE   | DEFAULT                              | DESCRIPTION                                                                                                                                                                                                                              |\n| ------------------------------------------------- | ------- | ------------------------------------ | ---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------- |\n| <div style="color:salmon">heightMatchTarget</div> | String  | <div style="color:salmon">> \\*</div> | Elements that should match.                                                                                                                                                                                                              |\n| <div style="color:salmon">heightMatchRow</div>    | Boolean | <div style="color:salmon">true</div> | By default only items in the same row will be matched. For example, once grid columns extend to a width of 100%, their heights will no longer be matched. This makes sense, for example, if they stack vertically in narrower viewports. |\n\n```html\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>Panel</span> <span class="token attr-name">heightMatch</span><span class="token punctuation">></span></span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>Card</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>Card</span><span class="token punctuation">></span></span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>Card</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>Card</span><span class="token punctuation">></span></span>\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>Panel</span><span class="token punctuation">></span></span>\n```\n\nYou can view examples in the tests for <a href="https://getuikit.com/assets/uikit/tests/height-viewport.html">Height Viewport</a>\nand <a href="https://getuikit.com/assets/uikit/tests/height-expand.html">Height Expand</a>.\n\n* * *\n\n#### Match cards\n\nYou can also target and match specific elements inside the container, like cards.\nJust add the <span style="color:salmon">heightMatchTarget="SELECTOR"</span> prop.\n\n```html\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>Grid</span> <span class="token attr-name">heightMatchTarget</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>SELECTOR<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>...<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>Grid</span><span class="token punctuation">></span></span>\n```'},{type:"code",content:'import { Card, Grid, Panel } from \'../\';\n<React.Fragment>\n    <Grid childWidthSmall="1-2" heightMatchTarget=" > Panel > Card">\n        <Panel>\n            <Card default body>Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua.</Card>\n        </Panel>\n        <Panel>\n            <Card default body>Lorem Ipsum</Card>\n        </Panel>\n        <Panel>\n            <Card default body>Lorem ipsum dolor sit amet, consectetur adipiscing elit.</Card>\n        </Panel>\n        <Panel>\n            <Card default body>Lorem Ipsum</Card>\n        </Panel>\n    </Grid>\n</React.Fragment>',settings:{},evalInContext:i},{type:"markdown",content:'* * *\n\n#### Match all\n\n!TODO! Update, once margin and first-column fixed\nIf your grid wraps into multiple rows, only grid columns within the same row are matched.\nTo match grid columns across all rows, just add the <span style="color:salmon">heightMatchRow="false"</span> prop.\n\n```html\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>Grid</span> <span class="token attr-name">heightMatchRow</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>false<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>...<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>Grid</span><span class="token punctuation">></span></span>\n```'},{type:"code",content:'import { Card, Grid, Panel } from \'../\';\n<React.Fragment>\n    <Grid childWidthSmall="1-2" heightMatchTarget=" > Panel > Card" heightMatchRow="false">\n        <Panel class="uk-first-column">\n            <Card default body>Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua.</Card>\n        </Panel>\n        <Panel>\n            <Card default body>Lorem Ipsum</Card>\n        </Panel>\n        <Panel class="uk-grid-margin uk-first-column">\n            <Card default body>Lorem ipsum dolor sit amet, consectetur adipiscing elit.</Card>\n        </Panel>\n        <Panel class="uk-grid-margin">\n            <Card default body>Lorem Ipsum</Card>\n        </Panel>\n    </Grid>\n</React.Fragment>',settings:{},evalInContext:i},{type:"markdown",content:'* * *\n\n### Component options\n\nThe table below lists the available settings of the <span style="color:salmon">heightMatch</span> prop.\n<a href="https://getuikit.com/docs/javascript#component-configuration">Learn more</a>\n\n| PROPS                                             | VALUE        | DEFAULT                              | DESCRIPTION                                                                                 |\n| ------------------------------------------------- | ------------ | ------------------------------------ | ------------------------------------------------------------------------------------------- |\n| <div style="color:salmon">heightMatchTarget</div> | CSS selector | <div style="color:salmon">> \\*</div> | Elements that should match. By default, direct children will match.                         |\n| <div style="color:salmon">heightMatchRow</div>    | Boolean      | <div style="color:salmon">true</div> | If your targets wrap into multiple rows, only grid columns within the same row are matched. |'}]},830:function(e,n,t){e.exports={doclets:{},displayName:"Icon",description:"",methods:[],props:[{type:{name:"bool"},required:!1,description:"",tags:{},name:"heart"},{type:{name:"bool"},required:!1,description:"",tags:{},name:"home"},{type:{name:"node"},required:!1,description:"Pass children elements to this element",defaultValue:{value:"undefined",computed:!0},tags:{},name:"children"}],examples:t(831)}},831:function(e,n,t){var a={react:t(1),"./Icon.js":t(96)},o=t(8).default.bind(null,a);t(9).default.bind(null,"const React$0 = require('react');\nconst React = React$0['React'] || (React$0.default || React$0);\nconst Icon$0 = require('./Icon.js');\nconst Icon = Icon$0['Icon'] || (Icon$0.default || Icon$0);",o),e.exports=[]},832:function(e,n,t){e.exports={doclets:{},displayName:"Image",description:"",methods:[],props:[{type:{name:"bool"},required:!1,description:"",defaultValue:{value:"false",computed:!1},tags:{},name:"logoInverse"},{type:{name:"string"},required:!1,description:"",defaultValue:{value:'""',computed:!1},tags:{},name:"src"},{type:{name:"number"},required:!1,description:"",tags:{},name:"width"},{type:{name:"number"},required:!1,description:"",tags:{},name:"height"},{type:{name:"string"},required:!1,description:"",tags:{},name:"alt"},{type:{name:"node"},required:!1,description:"Pass children elements to this element",defaultValue:{value:"undefined",computed:!0},tags:{},name:"children"}],examples:t(833)}},833:function(e,n,t){var a={react:t(1),"./Image.js":t(104)},o=t(8).default.bind(null,a),i=t(9).default.bind(null,"const React$0 = require('react');\nconst React = React$0['React'] || (React$0.default || React$0);\nconst Image$0 = require('./Image.js');\nconst Image = Image$0['Image'] || (Image$0.default || Image$0);",o);e.exports=[{type:"markdown",content:"<https://getuikit.com/docs/image>\n\n#### Speed up page loading times and decrease traffic by only loading images as they enter the viewport.\n\nThe Image component improves page speed significantly by following these methods:\n\n### Usage\n\nUse a Grid class to a block element to give it a max-width and wrap the main content of your website.\nThe element will be centered and have padding on the sides, that adapts automatically for large screens.\n\n### Size modifiers\n\nAdd one of the following props to the container to apply a different max-width."},{type:"code",content:'<React.Fragment>\n    <Image src="https://getuikit.com/docs/images/light.jpg" alt="Image" />\n</React.Fragment>',settings:{},evalInContext:i}]},834:function(e,n,t){e.exports={doclets:{},displayName:"Inverse",description:"",methods:[],props:[],examples:t(835)}},835:function(e,n,t){var a={"../":t(14),react:t(1),"./Inverse.js":t(203)},o=t(8).default.bind(null,a),i=t(9).default.bind(null,"const React$0 = require('react');\nconst React = React$0['React'] || (React$0.default || React$0);\nconst Inverse$0 = require('./Inverse.js');\nconst Inverse = Inverse$0['Inverse'] || (Inverse$0.default || Inverse$0);",o);e.exports=[{type:"markdown",content:'### Inverse\n\n#### Inverse the style of any component for light or dark backgrounds.\n\n| PROPS                                 | DESCRIPTION                                                                                   |\n| ------------------------------------- | --------------------------------------------------------------------------------------------- |\n| <div style="color:salmon">light</div> | Add the light prop to improve the visibility of objects on dark backgrounds in a light style. |\n| <div style="color:salmon">dark</div>  | When using a dark style, add the dark class to elements on a light background.                |'},{type:"code",content:"import { Button, Grid, Panel, Paragraph } from '../';\n\n<React.Fragment>\n    <Grid childWidthSmall=\"1-2\" >\n        <Panel>\n            <Panel light backgroundSecondary padding>\n                <h3>Light</h3>\n                <Paragraph>Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua.</Paragraph>\n                <Button>Button</Button>\n            </Panel>\n        </Panel>\n        <Panel>\n            <Panel dark backgroundMuted padding>\n                <h3>Dark</h3>\n                <Paragraph>Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua.</Paragraph>\n                <Button>Button</Button>\n            </Panel>\n        </Panel>\n    </Grid>\n</React.Fragment>",settings:{},evalInContext:i}]},836:function(e,n,t){e.exports={doclets:{},displayName:"Link",description:"",methods:[],props:[{type:{name:"bool"},required:!1,description:"",defaultValue:{value:"false",computed:!1},tags:{},name:"logo"},{type:{name:"bool"},required:!1,description:"",defaultValue:{value:"false",computed:!1},tags:{},name:"text"},{type:{name:"bool"},required:!1,description:"If you want the link to a apply a muted style",defaultValue:{value:"false",computed:!1},tags:{},name:"muted"},{type:{name:"string"},required:!1,description:"URL to be passed in",defaultValue:{value:'""',computed:!1},tags:{},name:"href"},{type:{name:"string"},required:!1,description:"",defaultValue:{value:'""',computed:!1},tags:{},name:"left"},{type:{name:"string"},required:!1,description:"",defaultValue:{value:'""',computed:!1},tags:{},name:"top"},{type:{name:"node"},required:!1,description:"Pass children elements to this element",defaultValue:{value:"undefined",computed:!0},tags:{},name:"children"}],examples:t(837)}},837:function(e,n,t){var a={"../":t(14),react:t(1),"./Link.js":t(97)},o=t(8).default.bind(null,a),i=t(9).default.bind(null,"const React$0 = require('react');\nconst React = React$0['React'] || (React$0.default || React$0);\nconst Link$0 = require('./Link.js');\nconst Link = Link$0['Link'] || (Link$0.default || Link$0);",o);e.exports=[{type:"markdown",content:'### Link\n\n<https://getuikit.com/docs/link>\n\n#### Define different styles to integrate links into specific content.\n\n### Muted Modifier\n\nThe Base component determines the default link color.\nIf you want the link to a apply a muted style instead, just add the muted prop to the anchor element.\nYou can also add the prop to a parent element and it will be applied to all Link components inside it.\n\n| PROPS                                  | DESCRIPTION         |\n| -------------------------------------- | ------------------- |\n| <span style="color:salmon">href</span> | URL to be passed in |'},{type:"code",content:'import { Link, Paragraph } from \'../\';\n<React.Fragment>\n    <Link muted href="#">Link</Link>\n    <Paragraph>Lorem ipsum <Link muted href="#">dolor sit</Link> amet, consectetur adipiscing elit, sed do <Link muted href="#">eiusmod</Link> tempor incididunt ut <Link muted href="#">labore et</Link> dolore magna aliqua.</Paragraph>\n</React.Fragment>',settings:{},evalInContext:i},{type:"markdown",content:'<br /><br /> <hr />\n\n### Text Modifier\n\nTo make a link appear like body text and apply a hover effect, add the text prop to the anchor element.\nYou can also add the prop to a parent element and it will be applied to all Link components inside it.\nThis is useful for link lists in the page footer.\n\n| PROPS                                  | DESCRIPTION         |\n| -------------------------------------- | ------------------- |\n| <span style="color:salmon">href</span> | URL to be passed in |'},{type:"code",content:'import { Link, Paragraph } from \'../\';\n<React.Fragment>\n    <Link muted href="#">Link</Link>\n    <Paragraph>Lorem ipsum <Link muted href="#">dolor sit</Link> amet, consectetur adipiscing elit, sed do <Link muted href="#">eiusmod</Link> tempor incididunt ut <Link muted href="#">labore et</Link> dolore magna aliqua.</Paragraph>\n</React.Fragment>',settings:{},evalInContext:i}]},838:function(e,n,t){e.exports={doclets:{},displayName:"List",description:"",methods:[],props:[{type:{name:"node"},required:!1,description:"Pass children elements to this element",defaultValue:{value:"undefined",computed:!0},tags:{},name:"children"}],examples:t(839)}},839:function(e,n,t){var a={react:t(1),"./List.js":t(110)},o=t(8).default.bind(null,a);t(9).default.bind(null,"const React$0 = require('react');\nconst React = React$0['React'] || (React$0.default || React$0);\nconst List$0 = require('./List.js');\nconst List = List$0['List'] || (List$0.default || List$0);",o),e.exports=[]},840:function(e,n,t){e.exports={doclets:{},displayName:"Margin",description:"",methods:[],props:[],examples:t(841)}},841:function(e,n,t){var a={"../":t(14),react:t(1),"./Margin.js":t(204)},o=t(8).default.bind(null,a),i=t(9).default.bind(null,"const React$0 = require('react');\nconst React = React$0['React'] || (React$0.default || React$0);\nconst Margin$0 = require('./Margin.js');\nconst Margin = Margin$0['Margin'] || (Margin$0.default || Margin$0);",o);e.exports=[{type:"markdown",content:'<https://getuikit.com/docs/margin>\n\n#### A collection of utility classes to add spacing between elements.\n\n### Margin\n\nAdd one or more of the following props to any element to create the same vertical and/or horizontal margin that a paragraph usually has.\n\n| PROPS                                          | DESCRIPTION                                                                  |\n| ---------------------------------------------- | ---------------------------------------------------------------------------- |\n| <span style="color:salmon">margin</span>       | Adds margin, if it is preceded by another element, and always bottom margin. |\n| <span style="color:salmon">marginTop</span>    | Adds top margin.                                                             |\n| <span style="color:salmon">marginBottom</span> | Adds bottom margin.                                                          |\n| <span style="color:salmon">marginLeft</span>   | Adds left margin.                                                            |\n| <span style="color:salmon">marginRight</span>  | Adds right margin.                                                           |'},{type:"code",content:"import { Card } from '../';\n\n<React.Fragment>\n    <Card margin default body>Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua.</Card>\n    <Card margin default body>Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua.</Card>\n</React.Fragment>",settings:{},evalInContext:i},{type:"markdown",content:'<br /><br /><hr />\n\n### Small Margin\n\nAdd one of the following props to add small spacing to block elements.\n\n| PROPS                                               | DESCRIPTION                                                                  |\n| --------------------------------------------------- | ---------------------------------------------------------------------------- |\n| <span style="color:salmon">marginSmall</span>       | Adds margin, if it is preceded by another element, and always bottom margin. |\n| <span style="color:salmon">marginTopSmall</span>    | Adds top margin.                                                             |\n| <span style="color:salmon">marginSmallBottom</span> | Adds bottom margin.                                                          |\n| <span style="color:salmon">marginSmallLeft</span>   | Adds left margin.                                                            |\n| <span style="color:salmon">marginSmallRight</span>  | Adds right margin.                                                           |'},{type:"code",content:"import { Card } from '../';\n\n<React.Fragment>\n    <Card marginSmall default body>Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua.</Card>\n    <Card marginSmall default body>Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua.</Card>\n</React.Fragment>",settings:{},evalInContext:i},{type:"markdown",content:'<br /><br /><hr />\n\n### Medium Margin\n\nAdd one of the following props to add medium spacing to block elements.\n\n| PROPS                                                | DESCRIPTION                                                                         |\n| ---------------------------------------------------- | ----------------------------------------------------------------------------------- |\n| <span style="color:salmon">marginMedium</span>       | Adds medium margin, if it is preceded by another element, and always bottom margin. |\n| <span style="color:salmon">marginMediumTop</span>    | Adds medium top margin.                                                             |\n| <span style="color:salmon">marginMediumBottom</span> | Adds medium bottom margin.                                                          |\n| <span style="color:salmon">marginMediumLeft</span>   | Adds medium left margin.                                                            |\n| <span style="color:salmon">marginMediumRight</span>  | Adds medium right margin.                                                           |'},{type:"code",content:"import { Card } from '../';\n\n<React.Fragment>\n    <Card marginMedium default body>Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua.</Card>\n    <Card marginMedium default body>Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua.</Card>\n</React.Fragment>",settings:{},evalInContext:i},{type:"markdown",content:'<br /><br /><hr />\n\n### Large Margin\n\nAdd one of the following props to add large spacing to block elements.\n\n| PROPS                                               | DESCRIPTION                                                                        |\n| --------------------------------------------------- | ---------------------------------------------------------------------------------- |\n| <span style="color:salmon">marginLarge</span>       | Adds large margin, if it is preceded by another element, and always bottom margin. |\n| <span style="color:salmon">marginLargeTop</span>    | Adds large top margin.                                                             |\n| <span style="color:salmon">marginLargeBottom</span> | Adds large bottom margin.                                                          |\n| <span style="color:salmon">marginLargeLeft</span>   | Adds large left margin.                                                            |\n| <span style="color:salmon">marginLargeRight</span>  | Adds large right margin.                                                           |'},{type:"code",content:"import { Card } from '../';\n\n<React.Fragment>\n    <Card marginLarge default body>Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua.</Card>\n    <Card marginLarge default body>Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua.</Card>\n</React.Fragment>",settings:{},evalInContext:i},{type:"markdown",content:'<br /><br /><hr />\n\n### X-Large Margin\n\nAdd one of the following props to add very large spacing to block elements.\n\n| PROPS                                                | DESCRIPTION                                                                         |\n| ---------------------------------------------------- | ----------------------------------------------------------------------------------- |\n| <span style="color:salmon">marginXLarge</span>       | Adds larger margin, if it is preceded by another element, and always bottom margin. |\n| <span style="color:salmon">marginXLargeTop</span>    | Adds larger top margin.                                                             |\n| <span style="color:salmon">marginXLargeBottom</span> | Adds larger bottom margin.                                                          |\n| <span style="color:salmon">marginXLargeLeft</span>   | Adds larger left margin.                                                            |\n| <span style="color:salmon">marginXLargeRight</span>  | Adds larger right margin.                                                           |'},{type:"code",content:"import { Card } from '../';\n\n<React.Fragment>\n    <Card marginXLarge default body>Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua.</Card>\n    <Card marginXLarge default body>Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua.</Card>\n</React.Fragment>",settings:{},evalInContext:i},{type:"markdown",content:'<br /><br /><hr />\n\n### Remove Margin\n\nAdd one of the following props to remove margin from block elements.\n\n| PROPS                                                    | DESCRIPTION                                                |\n| -------------------------------------------------------- | ---------------------------------------------------------- |\n| <span style="color:salmon">marginRemoveSmallLeft</span>  | Removes all margins.                                       |\n| <span style="color:salmon">marginRemoveTop</span>        | Removes top margin.                                        |\n| <span style="color:salmon">marginRemoveBottom</span>     | Removes bottom margin.                                     |\n| <span style="color:salmon">marginRemoveLeft</span>       | Removes left margin.                                       |\n| <span style="color:salmon">marginRemoveRight</span>      | Removes right margin.                                      |\n| <span style="color:salmon">marginRemoveVertical</span>   | Removes all vertical margins.                              |\n| <span style="color:salmon">marginRemoveAdjacent</span>   | Removes the top margin of the directly succeeding element. |\n| <span style="color:salmon">marginRemoveFirstChild</span> | Removes the top margin of the first child element.         |\n| <span style="color:salmon">marginRemoveLastChild</span>  | Removes the bottom margin of the last child element.       |\n\n<br /><br /><hr />\n\n### Responsive Margin\n\nReact-uikit provides a number of responsive props to remove margin.\nBasically, they work just like the usual margin remove props, except that they have suffixes that represent the breakpoint from which they come to effect.\n\n| PROPS                                                                                                                   | DESCRIPTION                                                                   |\n| ----------------------------------------------------------------------------------------------------------------------- | ----------------------------------------------------------------------------- |\n| <span style="color:salmon">marginRemoveSmallLeft</span><br /><span style="color:salmon">marginRemoveSmallRight</span>   | Affects device widths of <span style="color:salmon">640px</span> and larger.  |\n| <span style="color:salmon">marginRemoveMediumLeft</span><br /><span style="color:salmon">marginRemoveMediumRight</span> | Affects device widths of <span style="color:salmon">960px</span> and larger.  |\n| <span style="color:salmon">marginRemoveLargeLeft</span><br /><span style="color:salmon">marginRemoveLargeRight</span>   | Affects device widths of <span style="color:salmon">1200px</span> and larger. |\n| <span style="color:salmon">marginRemoveXLargeLeft</span><br /><span style="color:salmon">marginRemoveXLargeRight</span> | Affects device widths of <span style="color:salmon">1600px</span> and larger. |\n\n<br /><br /><hr />\n\n### Auto Margin\n\nAdd one of the following props to set auto margin. This can be useful to center or otherwise align block elements with a fixed width as well as flex elements.\n\n| PROPS                                                | DESCRIPTION                                                                         |\n| ---------------------------------------------------- | ----------------------------------------------------------------------------------- |\n| <span style="color:salmon">marginAuto</span>         | Sets left and right margin to auto, horizontally centering block and flex elements. |\n| <span style="color:salmon">marginAutoTop</span>      | Sets top margin to auto, pushing block and flex elements to the bottom.             |\n| <span style="color:salmon">marginAutoBottom</span>   | Sets bottom margin to auto, pushing block and flex elements to the top.             |\n| <span style="color:salmon">marginAutoLeft</span>     | Sets left margin to auto, pushing block and flex elements to the right.             |\n| <span style="color:salmon">marginAutoRight</span>    | Sets right margin to auto, pushing block and flex elements to the left              |\n| <span style="color:salmon">marginAutoVerticle</span> | Sets top and bottom margin to auto, vertically centering only flex elements.        |'},{type:"code",content:'import { Card, Panel } from \'../\';\n\n<React.Fragment>\n    <Card margin marginAutoLeft widthSmall="1-2" default body textCenter>Block element</Card>\n    \n    <Panel flex heightMedium backgroundMuted margin textCenter>\n        <Card marginAuto marginAutoVertical widthSmall="1-2" default body>Flex item</Card>\n    </Panel>\n\n</React.Fragment>',settings:{},evalInContext:i},{type:"markdown",content:'<br /><br /><hr />\n\n### Responsive Auto Margin\n\nReact-uikit provides a number of responsive margin auto props.\nBasically, they work just like the usual margin auto classes, except that they have suffixes that represent the breakpoint from which they come to effect.\n\n| PROPS                                                                                                                                                                       | DESCRIPTION                                                                   |\n| --------------------------------------------------------------------------------------------------------------------------------------------------------------------------- | ----------------------------------------------------------------------------- |\n| <span style="color:salmon">marginAutoSmallLeft</span><br /><span style="color:salmon">marginAutoSmall</span><br /><span style="color:salmon">marginAutoSmallRight</span>    | Affects device widths of <span style="color:salmon">640px</span> and larger.  |\n| <span style="color:salmon">marginAutoMediumLeft</span><br /><span style="color:salmon">marginAutoMedium</span><br /><span style="color:salmon">marginAutoMediumRight</span> | Affects device widths of <span style="color:salmon">960px</span> and larger.  |\n| <span style="color:salmon">marginAutoLargeLeft</span><br /><span style="color:salmon">marginAutoLarge</span><br /><span style="color:salmon">marginAutoLargeRight</span>    | Affects device widths of <span style="color:salmon">1200px</span> and larger. |\n| <span style="color:salmon">marginAutoXLargeLeft</span><br /><span style="color:salmon">marginAutoXLarge</span><br /><span style="color:salmon">marginAutoXLargeRight</span> | Affects device widths of <span style="color:salmon">1600px</span> and larger. |'},{type:"code",content:'import { Card, Panel } from \'../\';\n\n<React.Fragment>\n    <Card margin marginAutoRight marginAutoMedium widthSmall="1-2" default body textCenter>Block element</Card>\n    <Card margin marginAuto marginAutoLeftMedium widthSmall="1-2" default body textCenter>Block element</Card>\n    <Card margin marginAutoLeft marginAutoRightMedium widthSmall="1-2" default body textCenter>Block element</Card>\n</React.Fragment>',settings:{},evalInContext:i}]},842:function(e,n,t){e.exports={doclets:{},displayName:"Overflow",description:"",methods:[],props:[{type:{name:"bool"},required:!1,description:"Hide the overflow",defaultValue:{value:"false",computed:!1},tags:{},name:"hidden"},{type:{name:"node"},required:!1,description:"Pass children elements to this element",defaultValue:{value:"undefined",computed:!0},tags:{},name:"children"}],examples:t(843)}},843:function(e,n,t){var a={"../":t(14),react:t(1),"./Overflow.js":t(98)},o=t(8).default.bind(null,a),i=t(9).default.bind(null,"const React$0 = require('react');\nconst React = React$0['React'] || (React$0.default || React$0);\nconst Overflow$0 = require('./Overflow.js');\nconst Overflow = Overflow$0['Overflow'] || (Overflow$0.default || Overflow$0);",o);e.exports=[{type:"markdown",content:"<https://getuikit.com/docs/Grid>\n\n### Usage\n\nxxx\n\n### Style modifiers\n\nHide the overflow"},{type:"code",content:"import { Grid } from '../';\n\n<React.Fragment>\n    <Grid primary>Default size modifier</Grid>\n</React.Fragment>",settings:{},evalInContext:i},{type:"markdown",content:"xxx\n\n### Size modifiers\n\nxxx"},{type:"code",content:"import { Grid } from '../';\n\n<React.Fragment>\n    <Grid primary>Default size modifier</Grid>\n</React.Fragment>",settings:{},evalInContext:i}]},844:function(e,n,t){e.exports={doclets:{},displayName:"Overlay",description:"",methods:[],props:[],examples:t(845)}},845:function(e,n,t){var a={"../":t(14),react:t(1),"./Overlay.js":t(205)},o=t(8).default.bind(null,a),i=t(9).default.bind(null,"const React$0 = require('react');\nconst React = React$0['React'] || (React$0.default || React$0);\nconst Overlay$0 = require('./Overlay.js');\nconst Overlay = Overlay$0['Overlay'] || (Overlay$0.default || Overlay$0);",o);e.exports=[{type:"markdown",content:'### Overlay\n\n<https://getuikit.com/docs/overlay>\n\n#### Create an image overlay, which comes in different styles.\n\nAdd the overlay props to an element following an image to create the overlay panel.\nTo create a position context, add the inline prop from the Utility component to a container element around both.\nFinally, add one of the position\\* prop from the Position component to align the overlay.\n\n| PROPS                                            | DESCRIPTION                                                                        |\n| ------------------------------------------------ | ---------------------------------------------------------------------------------- |\n| <span style="color:salmon">overlay</span>        | Add the overlay prop to an element following an image to create the overlay panel. |\n| <span style="color:salmon">overlayDefault</span> | Used for a simple background color.                                                |\n| <span style="color:salmon">overlayPrimary</span> | Used for a prominent background color.                                             |'},{type:"code",content:'import { Image, Panel, Paragraph } from \'../\';\n\n<React.Fragment>\n    <Panel inline>\n        <Image src="https://getuikit.com/docs/images/photo.jpg" alt="" />\n        <Panel overlay light positionBottom>\n            <Paragraph>Default Lorem ipsum dolor sit amet, consectetur adipiscing elit.</Paragraph>\n        </Panel>\n    </Panel>\n</React.Fragment>',settings:{},evalInContext:i},{type:"markdown",content:"### Style Modifiers\n\nBy default, the overlay has padding, but no additional styling.\nAdd one of these modifier props to add a background color to the overlay."},{type:"code",content:'import { Grid, Image, Panel, Paragraph } from \'../\';\n\n<React.Fragment>\n    <Grid childWidthMedium="1-2">\n        <Panel>\n            <Panel inline>\n                <Image src="https://getuikit.com/docs/images/photo.jpg" alt="" />\n                <Panel overlay overlayDefault positionBottom>\n                    <Paragraph>Default Lorem ipsum dolor sit amet, consectetur adipiscing elit.</Paragraph>\n                </Panel>\n            </Panel>\n        </Panel>\n        <Panel>\n            <Panel inline>\n                <Image src="https://getuikit.com/docs/images/photo.jpg" alt="" />\n                <Panel overlayDefault positionCover></Panel>\n                <Panel overlay positionBottom dark>\n                    <Paragraph>Default Lorem ipsum dolor sit amet, consectetur adipiscing elit.</Paragraph>\n                </Panel>\n            </Panel>\n        </Panel>\n    </Grid>\n</React.Fragment>',settings:{},evalInContext:i},{type:"markdown",content:"### Primary\n\nFor a prominent background color, add the overlayPrimary prop."},{type:"code",content:'import { Grid, Image, Panel, Paragraph } from \'../\';\n\n<React.Fragment>\n    <Grid childWidthMedium="1-2">\n        <Panel>\n            <Panel inline>\n                <Image src="https://getuikit.com/docs/images/photo.jpg" alt="" />\n                <Panel overlay overlayPrimary positionBottom>\n                    <Paragraph>Default Lorem ipsum dolor sit amet, consectetur adipiscing elit.</Paragraph>\n                </Panel>\n            </Panel>\n        </Panel>\n        <Panel>\n            <Panel inline>\n                <Image src="https://getuikit.com/docs/images/photo.jpg" alt="" />\n                <Panel overlayPrimary positionCover></Panel>\n                <Panel overlay positionBottom light>\n                    <Paragraph>Default Lorem ipsum dolor sit amet, consectetur adipiscing elit.</Paragraph>\n                </Panel>\n            </Panel>\n        </Panel>\n    </Grid>\n</React.Fragment>',settings:{},evalInContext:i},{type:"markdown",content:"### Overlay Icon\n\nTo display an overlay icon, add the overlayIcon attribute to a <span> element inside the overlay."},{type:"code",content:'import { Grid, Image, Panel, Paragraph } from \'../\';\n\n<React.Fragment>\n    <Grid childWidthMedium="1-2">\n        <Panel>\n            <Panel inline light>\n                <Image src="https://getuikit.com/docs/images/dark.jpg" alt="" />\n                <Panel positionCenter>\n                    <Panel overlayIcon />\n                </Panel>\n            </Panel>\n        </Panel>\n        <Panel>\n            <Panel inline dark>\n                <Image src="https://getuikit.com/docs/images/photo.jpg" alt="" />\n                <Panel overlayDefault positionCover>\n                    <Panel positionCenter>\n                        <Panel overlayIcon />\n                    </Panel>\n                </Panel>\n            </Panel>\n        </Panel>\n    </Grid>\n</React.Fragment>',settings:{},evalInContext:i},{type:"markdown",content:"### Position\n\nAdd one of the position\\* props from the Position component to align the overlay."},{type:"code",content:'import { Grid, Image, Panel, Paragraph } from \'../\';\n\n<React.Fragment>\n    <Grid childWidthMedium="1-2">\n        <Panel>\n            <Panel inline>\n                <Image src="https://getuikit.com/docs/images/photo.jpg" alt="" />\n                <Panel overlay overlayDefault positionTop>\n                    <Paragraph overlayIcon>Top</Paragraph>\n                </Panel>\n            </Panel>\n        </Panel>\n        <Panel>\n            <Panel inline>\n                <Image src="https://getuikit.com/docs/images/photo.jpg" alt="" />\n                <Panel overlay overlayDefault positionCenter>\n                    <Paragraph overlayIcon>Center</Paragraph>\n                </Panel>\n            </Panel>\n        </Panel>\n    </Grid>\n</React.Fragment>',settings:{},evalInContext:i}]},846:function(e,n,t){e.exports={doclets:{},displayName:"Padding",description:"",methods:[],props:[],examples:t(847)}},847:function(e,n,t){var a={"../":t(14),react:t(1),"./Padding.js":t(206)},o=t(8).default.bind(null,a),i=t(9).default.bind(null,"const React$0 = require('react');\nconst React = React$0['React'] || (React$0.default || React$0);\nconst Padding$0 = require('./Padding.js');\nconst Padding = Padding$0['Padding'] || (Padding$0.default || Padding$0);",o);e.exports=[{type:"markdown",content:'<https://getuikit.com/docs/padding>\n\n#### A collection of utility props to add spacing between elements and their content.\n\n### Usage\n\nTo apply this component, add one of the following props to a block element.\n\n| PROPS                                          | DESCRIPTION |\n| ---------------------------------------------- | ----------- |\n| <span style="color:salmon">padding</span>      |             |\n| <span style="color:salmon">paddingSmall</span> |             |\n| <span style="color:salmon">paddingLarge</span> |             |'},{type:"code",content:"import { Panel } from '../';\n\n<React.Fragment>\n    <Panel padding backgroundMuted widthSmall=\"1-2\">\n        Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua.\n    </Panel>\n</React.Fragment>",settings:{},evalInContext:i},{type:"markdown",content:'<br /><br /><hr />\n\n### Remove Padding\n\nIn some cases you want to remove padding from an element, rather than adding it.\nTo do so, apply one of the following props.\n\n| PROPS                                                     | DESCRIPTION                                     |\n| --------------------------------------------------------- | ----------------------------------------------- |\n| <span style="color:salmon">paddingRemove</span>           | Removes all padding from an element.            |\n| <span style="color:salmon">paddingRemoveTop</span>        | Removes top padding from an element.            |\n| <span style="color:salmon">paddingRemoveBottom</span>     | Removes bottom padding from an element.         |\n| <span style="color:salmon">paddingRemoveLeft</span>       | Removes left padding from an element.           |\n| <span style="color:salmon">paddingRemoveRight</span>      | Removes right padding from an element.          |\n| <span style="color:salmon">paddingRemoveVerticle</span>   | Removes top and bottom padding from an element. |\n| <span style="color:salmon">paddingRemoveHorizontal</span> | Removes left and right padding from an element. |'}]},848:function(e,n,t){e.exports={doclets:{},displayName:"Panel",description:"",methods:[],props:[{type:{name:"bool"},required:!1,description:"To toggle an animation on hover or focus, add the animationToggle prop to a parent element",defaultValue:{value:"false",computed:!1},tags:{},name:"animationToggle"},{type:{name:"bool"},required:!1,description:"To display an overlay icon.",defaultValue:{value:"false",computed:!1},tags:{},name:"overlayIcon"},{type:{name:"node"},required:!1,description:"Pass children elements to this element",defaultValue:{value:"undefined",computed:!0},tags:{},name:"children"}],examples:t(849)}},849:function(e,n,t){var a={"../":t(14),react:t(1),"./Panel.js":t(103)},o=t(8).default.bind(null,a),i=t(9).default.bind(null,"const React$0 = require('react');\nconst React = React$0['React'] || (React$0.default || React$0);\nconst Panel$0 = require('./Panel.js');\nconst Panel = Panel$0['Panel'] || (Panel$0.default || Panel$0);",o);e.exports=[{type:"markdown",content:'### Usage\n\nReact-uikit uses panels to outline certain sections of your content. These can be arranged in grid columns from the Grid component component, for example.\n\n### Panel\n\n| PROPS                                   | DESCRIPTION                                                                                                                                                                      |\n| --------------------------------------- | -------------------------------------------------------------------------------------------------------------------------------------------------------------------------------- |\n| <span style="color:salmon">panel</span> | Add the panel props to a Panel component to create a position context, set box-sizing to border-box, apply a clearfix and to remove the bottom margin of its last child element. |'},{type:"code",content:"import { Card, Grid, Panel } from '../';\n\n<React.Fragment>\n    <Grid childWidthSmall=\"1-3\">\n        <Panel panel>Lorem ipsum dolor sit amet, consectetur adipisicing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua.</Panel>\n        <Panel panel>Lorem ipsum dolor sit amet, consectetur adipisicing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua.</Panel>\n        <Panel panel>Lorem ipsum dolor sit amet, consectetur adipisicing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua.</Panel>\n    </Grid>\n</React.Fragment>",settings:{},evalInContext:i},{type:"markdown",content:'<br /><br /><hr />\n\n### Scrollable Panel\n\n| PROPS                                        | DESCRIPTION                                                                                                                                                                                         |\n| -------------------------------------------- | --------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------- |\n| <span style="color:salmon">scrollable</span> | Add the scrollable props to give the panel a fixed height and make it scrollable, if its content exceeds the height. You can also add one of the .uk-height-\\* classes to apply a different height. |'},{type:"code",content:"import { Card, Grid, Panel } from '../';\n\n<React.Fragment>\n    <Panel panel scrollable>s\n    </Panel>\n</React.Fragment>",settings:{},evalInContext:i}]},850:function(e,n,t){e.exports={doclets:{},displayName:"Paragraph",description:"",methods:[],props:[{type:{name:"bool"},required:!1,description:"With the dropcap prop you can achieve a drop cap in a paragraph",tags:{},name:"dropcap"},{type:{name:"node"},required:!1,description:"Pass children elements to this element",defaultValue:{value:"undefined",computed:!0},tags:{},name:"children"}],examples:t(851)}},851:function(e,n,t){var a={"../":t(14),react:t(1),"./Paragraph.js":t(99)},o=t(8).default.bind(null,a),i=t(9).default.bind(null,"const React$0 = require('react');\nconst React = React$0['React'] || (React$0.default || React$0);\nconst Paragraph$0 = require('./Paragraph.js');\nconst Paragraph = Paragraph$0['Paragraph'] || (Paragraph$0.default || Paragraph$0);",o);e.exports=[{type:"markdown",content:'### Paragraph\n\n| PROPS                                     | DESCRIPTION                                                      |\n| ----------------------------------------- | ---------------------------------------------------------------- |\n| <span style="color:salmon">dropcap</span> | With the dropcap prop you can achieve a drop cap in a paragraph. |'},{type:"code",content:"import { Paragraph } from '../';\n<React.Fragment>\n    <Paragraph dropcap>Dorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum. Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua.</Paragraph>\n</React.Fragment>",settings:{},evalInContext:i}]},852:function(e,n,t){e.exports={doclets:{},displayName:"Position",description:"",methods:[],props:[],examples:t(853)}},853:function(e,n,t){var a={"../":t(14),react:t(1),"./Position.js":t(207)},o=t(8).default.bind(null,a),i=t(9).default.bind(null,"const React$0 = require('react');\nconst React = React$0['React'] || (React$0.default || React$0);\nconst Position$0 = require('./Position.js');\nconst Position = Position$0['Position'] || (Position$0.default || Position$0);",o);e.exports=[{type:"markdown",content:'### Inline\n\n<https://getuikit.com/docs/position>\n\n#### A collection of utility classes to position content.\n\nTo apply this component, add one of the position\\* props to a block element.\nWhen using this component to place content on top of an image, add the inline props from the Utility component to a container element around the image and the element to create a position context.\n\n| PROPS                                            | DESCRIPTION                          |\n| ------------------------------------------------ | ------------------------------------ |\n| <span style="color:salmon">positionTop</span>    | Positions the element at the top.    |\n| <span style="color:salmon">positionBottom</span> | Positions the element at the bottom. |\n| <span style="color:salmon">positionLeft</span>   | Positions the element at the left.   |\n| <span style="color:salmon">positionRight</span>  | Positions the element at the right.  |'},{type:"code",content:'import { Image, Panel } from \'../\';\n\n<React.Fragment>\n    <Panel inline margin>\n        <Image src="https://getuikit.com/docs/images/photo.jpg" alt="" />\n        <Panel positionTop overlay overlayDefault textCenter>Top</Panel>\n        <Panel positionBottom overlay overlayDefault textCenter>Top</Panel>\n        <Panel positionLeft overlay overlayDefault flex flexMiddle>Top</Panel>\n        <Panel positionRight overlay overlayDefault flex flexMiddle>Top</Panel>\n    </Panel>\n</React.Fragment>',settings:{},evalInContext:i},{type:"markdown",content:'### X and Y directions\n\nYou can also apply more specific positions that won\'t spread over one side of the parent container by adding one of the following props.\n\n| PROPS                                                  | DESCRIPTION                                              |\n| ------------------------------------------------------ | -------------------------------------------------------- |\n| <span style="color:salmon">positionTopLeft</span>      | Positions the element at the top left.                   |\n| <span style="color:salmon">positionTopCenter</span>    | Positions the element at the top center.                 |\n| <span style="color:salmon">positionTopRight</span>     | Positions the element at the top right.                  |\n| <span style="color:salmon">positionCenterLeft</span>   | Positions the element vertically centered on the left.   |\n| <span style="color:salmon">positionCenter</span>       | Positions the element vertically centered in the middle. |\n| <span style="color:salmon">positionCenterRight</span>  | Positions the element vertically centered on the right.  |\n| <span style="color:salmon">positionBottomLeft</span>   | Positions the element at the bottom left.                |\n| <span style="color:salmon">positionBottomCenter</span> | Positions the element at the bottom center.              |\n| <span style="color:salmon">positionBottomRight</span>  | Positions the element at the bottom right.               |'},{type:"code",content:'import { Image, Panel } from \'../\';\n\n<React.Fragment>\n    <Panel inline>\n        <Image src="https://getuikit.com/docs/images/photo.jpg" alt="" />\n\n        <Panel positionTopLeft overlay overlayDefault>Top Left</Panel>\n        <Panel positionTopCenter overlay overlayDefault>Top Center</Panel>\n        <Panel positionTopRight overlay overlayDefault>Top Right</Panel>\n        <Panel positionCenterLeft overlay overlayDefault>Center Left</Panel>\n        <Panel positionCenter overlay overlayDefault>Center</Panel>\n        <Panel positionCenterRight overlay overlayDefault>Center Right</Panel>\n        <Panel positionBottomLeft overlay overlayDefault>Bottom Left</Panel>\n        <Panel positionBottomCenter overlay overlayDefault>Bottom Center</Panel>\n        <Panel positionBottomRight overlay overlayDefault>Bottom Right</Panel>\n    </Panel>\n</React.Fragment>',settings:{},evalInContext:i},{type:"markdown",content:'### Cover\n\nIf you want a position element to cover its container, just add the positionCover prop.\n\n| PROPS                                           | DESCRIPTION                                            |\n| ----------------------------------------------- | ------------------------------------------------------ |\n| <span style="color:salmon">positionCover</span> | If you want a position element to cover its container. |'},{type:"code",content:'import { Image, Panel } from \'../\';\n\n<React.Fragment>\n    <Panel inline>\n        <Image src="https://getuikit.com/docs/images/photo.jpg" alt="" />\n        <Panel positionCover overlay overlayDefault flex flexCenter flexMiddle>Cover</Panel>\n    </Panel>\n</React.Fragment>',settings:{},evalInContext:i},{type:"markdown",content:'### Outside\n\nThere are two props to center elements outside on the left and right of the parent container.\nThis is useful to position the Slidenav component outside of an Slideshow or Slider component.\n\n| PROPS                                                    | DESCRIPTION                                                     |\n| -------------------------------------------------------- | --------------------------------------------------------------- |\n| <span style="color:salmon">positionCenterLeftOut</span>  | Positions the element vertically centered outside on the left.  |\n| <span style="color:salmon">positionCenterRightOut</span> | Positions the element vertically centered outside on the right. |'},{type:"code",content:'import { Image, Panel } from \'../\';\n\n<React.Fragment>\n    <Panel inline>\n        <Image src="https://getuikit.com/docs/images/photo.jpg" alt="" />\n        <Panel positionCenterLeftOut overlay overlayPrimary visibleSmall>Out</Panel>\n        <Panel positionCenterRightOut overlay overlayPrimary visibleSmall>Out</Panel>\n    </Panel>\n</React.Fragment>',settings:{},evalInContext:i},{type:"markdown",content:'### Size Modifier\n\nTo apply a small margin to positioned elements, add the positionSmall prop.\n\n| PROPS                                           | DESCRIPTION                                                                 |\n| ----------------------------------------------- | --------------------------------------------------------------------------- |\n| <span style="color:salmon">positionSmall</span> | To apply a small margin to positioned elements, add the positionSmall prop. |'},{type:"code",content:'import { Image, Panel } from \'../\';\n\n<React.Fragment>\n    <Panel inline margin>\n        <Image src="https://getuikit.com/docs/images/photo.jpg" alt="" />\n        <Panel positionSmall positionTopLeft overlay overlayDefault>Top Left</Panel>\n        <Panel positionSmall positionTopCenter overlay overlayDefault>Top Center</Panel>\n        <Panel positionSmall positionTopRight overlay overlayDefault>Top Right</Panel>\n        <Panel positionSmall positionCenterLeft overlay overlayDefault>Center Left</Panel>\n        <Panel positionSmall positionCenter overlay overlayDefault>Center</Panel>\n        <Panel positionSmall positionCenterRight overlay overlayDefault>Center Right</Panel>\n        <Panel positionSmall positionBottomLeft overlay overlayDefault>Bottom Left</Panel>\n        <Panel positionSmall positionBottomCenter overlay overlayDefault>Bottom Center</Panel>\n        <Panel positionSmall positionBottomRight overlay overlayDefault>Bottom Right</Panel>\n    </Panel>\n</React.Fragment>',settings:{},evalInContext:i},{type:"code",content:'import { Image, Panel } from \'../\';\n\n<React.Fragment>\n    <Panel inline margin>\n        <Image src="https://getuikit.com/docs/images/photo.jpg" alt="" />\n        <Panel positionSmall positionTop overlay overlayDefault textCenter>Top</Panel>\n        <Panel positionSmall positionBottom overlay overlayDefault textCenter>Bottom</Panel>\n        <Panel positionSmall positionLeft overlay overlayDefault flex flexMiddle>Left</Panel>\n        <Panel positionSmall positionRight overlay overlayDefault flex flexMiddle>Right</Panel>\n    </Panel>\n</React.Fragment>',settings:{},evalInContext:i},{type:"code",content:'import { Image, Panel } from \'../\';\n\n<React.Fragment>\n    <Panel inline margin>\n        <Image src="https://getuikit.com/docs/images/photo.jpg" alt="" />\n        <Panel positionSmall positionCover overlay overlayDefault flex flexCenter flexMiddle>Cover</Panel>\n    </Panel>\n</React.Fragment>',settings:{},evalInContext:i},{type:"code",content:'import { Image, Panel } from \'../\';\n\n<React.Fragment>\n    <Panel inline margin>\n        <Image src="https://getuikit.com/docs/images/photo.jpg" alt="" />\n        <Panel positionSmall positionCenterLeftOut overlay overlayPrimary visibleSmall>Out</Panel>\n        <Panel positionSmall positionCenterRightOut overlay overlayPrimary visibleSmall>Out</Panel>\n    </Panel>\n</React.Fragment>',settings:{},evalInContext:i},{type:"markdown",content:'### Utility Classes\n\nThis component features a number of general position utility props:\n\n| PROPS                                              | DESCRIPTION                                  |\n| -------------------------------------------------- | -------------------------------------------- |\n| <span style="color:salmon">positionRelative</span> | Add this prop to apply relative positioning. |\n| <span style="color:salmon">positionAbsolute</span> | Add this prop to apply absolute positioning. |\n| <span style="color:salmon">positionFixed</span>    | Add this prop to apply fixed positioning.    |\n| <span style="color:salmon">positionZIndex</span>   | Add this prop to apply a z-index of 1.       |'}]},854:function(e,n,t){e.exports={doclets:{},displayName:"Scrollspy",description:"",methods:[],props:[{type:{name:"bool"},required:!1,description:"The sub component fades in",tags:{},name:"fade"},{type:{name:"node"},required:!1,description:"Sub components to be passed in",defaultValue:{value:"undefined",computed:!0},tags:{},name:"children"}],examples:t(855)}},855:function(e,n,t){var a={"../":t(14),react:t(1),"./Scrollspy.js":t(100)},o=t(8).default.bind(null,a),i=t(9).default.bind(null,"const React$0 = require('react');\nconst React = React$0['React'] || (React$0.default || React$0);\nconst Scrollspy$0 = require('./Scrollspy.js');\nconst Scrollspy = Scrollspy$0['Scrollspy'] || (Scrollspy$0.default || Scrollspy$0);",o);e.exports=[{type:"markdown",content:'<https://getuikit.com/docs/animation>\n\n#### Trigger events and animations while scrolling your page.\n\n### Usage\n\nThe Scrollspy component listens to page scrolling and trigger events based on the scroll position.\nFor example, if you scroll down a page, and an element appears in the viewport for the first time, you can trigger a smooth animation to fade in the element.\n\n| PROPS                              | DESCRIPTION |\n| ---------------------------------- | ----------- |\n| <span style="color:salmon"></span> |             |\n| <span style="color:salmon"></span> |             |'},{type:"code",content:'import { Animation, Card, Grid, Paragraph, Panel, Scrollspy } from \'../\';\n\n<React.Fragment>\n    <Grid match childWidthMedium="1-2">\n        <Panel>\n            <Scrollspy>\n                <Animation slide left>\n                    <Card default body>\n                        <Card.Title class="uk-card-title">Left</Card.Title>\n                        <Paragraph>Lorem ipsum dolor sit amet, consectetur adipiscing elit.</Paragraph>\n                    </Card>\n                </Animation>\n            </Scrollspy>\n        </Panel>\n        <Panel>\n            <Scrollspy>\n                <Animation slide right>\n                    <Card default body>\n                        <Card.Title class="uk-card-title">Right</Card.Title>\n                        <Paragraph>Lorem ipsum dolor sit amet, consectetur adipiscing elit.</Paragraph>\n                    </Card>\n                </Animation>\n            </Scrollspy>\n        </Panel>\n    </Grid>\n</React.Fragment>',settings:{},evalInContext:i}]},856:function(e,n,t){e.exports={doclets:{},displayName:"Section",description:"",methods:[],props:[{type:{name:"bool"},required:!1,description:"Adds the default background color of your site",defaultValue:{value:"false",computed:!1},tags:{},name:"default"},{type:{name:"bool"},required:!1,description:"Adds a muted background color",defaultValue:{value:"false",computed:!1},tags:{},name:"muted"},{type:{name:"bool"},required:!1,description:"Adds a primary background color",defaultValue:{value:"false",computed:!1},tags:{},name:"primary"},{type:{name:"bool"},required:!1,description:"Adds a secondary background color",defaultValue:{value:"false",computed:!1},tags:{},name:"secondary"},{type:{name:"bool"},required:!1,description:"Add this prop to decrease a section's padding to a minimum",defaultValue:{value:"false",computed:!1},tags:{},name:"xsmall"},{type:{name:"bool"},required:!1,description:"Add this prop to decrease a section's padding",defaultValue:{value:"false",computed:!1},tags:{},name:"small"},{type:{name:"bool"},required:!1,description:"Add this prop to increase a section's padding",defaultValue:{value:"false",computed:!1},tags:{},name:"large"},{type:{name:"bool"},required:!1,description:"Add this prop to further increase a section's padding",defaultValue:{value:"false",computed:!1},tags:{},name:"xlarge"},{type:{name:"node"},required:!1,description:"Pass children elements to this element",defaultValue:{value:"undefined",computed:!0},tags:{},name:"children"}],examples:t(857)}},857:function(e,n,t){var a={react:t(1),"./Section.js":t(101)},o=t(8).default.bind(null,a),i=t(9).default.bind(null,"const React$0 = require('react');\nconst React = React$0['React'] || (React$0.default || React$0);\nconst Section$0 = require('./Section.js');\nconst Section = Section$0['Section'] || (Section$0.default || Section$0);",o);e.exports=[{type:"markdown",content:"<https://getuikit.com/docs/section>\n\n### Usage\n\nSections are used to separate the content of a page into differently styled blocks. To apply this component, just add the style modifier props to a container element. You can place a container from the Grid component to modify the width of the content inside sections and add horizontal padding. Note that the padding of a nested container will be reset.\n\n### Style modifiers\n\nTo apply different background colors and paddings, add one of the following classes."},{type:"code",content:'<React.Fragment>\n    <Section>Default</Section>\n    <Section muted>Muted</Section>\n    <Section primary>Primary</Section>\n    <Section secondary>Secondary</Section>\n    <Section secondary image="https://camo.githubusercontent.com/a3dde86ab1e0f8ea7a7222188481b136520f3226/68747470733a2f2f6c68352e676f6f676c6575736572636f6e74656e742e636f6d2f2d494b336f6a4e4c416641492f5552524f717063752d53492f41414141414141414c44382f42476478644339753270492f73323536302f50657363616465726f42656e63682e6a7067">Secondary with image background</Section>\n</React.Fragment>',settings:{},evalInContext:i},{type:"markdown",content:"By default, a section is blank. That is why it is important to add a modifier class for styling. In our example we are using the muted props.\n\n### Size modifiers\n\nYou can add different paddings to each section or remove it altogether."},{type:"code",content:"<React.Fragment>\n    <Section primary>Default size modifier</Section>\n    <Section secondary xsmall>Decrease a section's padding to a minimum using the xsmall size modifier</Section>\n    <Section primary small>Decrease a section's padding using the small size modifier</Section>\n    <Section secondary large>Increase a section's padding using the large size modifier</Section>\n    <Section primary xlarge>Increase a section's padding to a maximum using the xlarge size modifier</Section>\n    <Section secondary removeVertical>Remove a section's padding using the removeVertical size modifier</Section>\n</React.Fragment>",settings:{},evalInContext:i}]},858:function(e,n,t){e.exports={doclets:{},displayName:"Table",description:"",methods:[],props:[{type:{name:"bool"},required:!1,description:"",tags:{},name:"striped"},{type:{name:"bool"},required:!1,description:"",tags:{},name:"condensed"},{type:{name:"object"},required:!1,description:"",tags:{},name:"data"}],examples:t(859)}},859:function(e,n,t){var a={"../":t(14),react:t(1),"./Table.js":t(102)},o=t(8).default.bind(null,a),i=t(9).default.bind(null,"const React$0 = require('react');\nconst React = React$0['React'] || (React$0.default || React$0);\nconst Table$0 = require('./Table.js');\nconst Table = Table$0['Table'] || (Table$0.default || Table$0);",o);e.exports=[{type:"code",content:'import { Panel, Table } from \'../\';\n\nlet data = {\n    header: ["Heading 1","Heading 2","Heading 3","Heading 4","Heading 5","Heading 6","Heading 7","Heading 8"],\n    footer: ["Footer 1","Footer 2","Footer 3","Footer 4","Footer 5","Footer 6","Footer 7","Footer 8"],\n    body: [\n        ["Data 1","Data 2","Data 3","Data 4","Data 5","Data 6","Data 7","Data 8"],\n        ["Data 1","Data 2","Data 3","Data 4","Data 5","Data 6","Data 7","Data 8"],\n        ["Data 1","Data 2","Data 3","Data 4","Data 5","Data 6","Data 7","Data 8"]\n    ]\n};\n\n\n<React.Fragment>\n    <Panel>\n        <Table data={data} />\n    </Panel>\n</React.Fragment>',settings:{},evalInContext:i}]},860:function(e,n,t){e.exports={doclets:{},displayName:"Text",description:"",methods:[],props:[],examples:t(861)}},861:function(e,n,t){var a={react:t(1),"./Text.js":t(208)},o=t(8).default.bind(null,a),i=t(9).default.bind(null,"const React$0 = require('react');\nconst React = React$0['React'] || (React$0.default || React$0);\nconst Text$0 = require('./Text.js');\nconst Text = Text$0['Text'] || (Text$0.default || Text$0);",o);e.exports=[{type:"markdown",content:"<https://getuikit.com/docs/text>\n\nA collection of utility props to style text.\n\n### Style modifiers\n\nReact-uikit offers various text utilities to style your text."},{type:"code",content:"<React.Fragment>\n\n</React.Fragment>",settings:{},evalInContext:i},{type:"markdown",content:"xxx\n\n### Size modifiers\n\nxxx"},{type:"code",content:"<React.Fragment>\n\n</React.Fragment>",settings:{},evalInContext:i}]},862:function(e,n,t){e.exports={doclets:{},displayName:"Utility",description:"",methods:[],props:[],examples:t(863)}},863:function(e,n,t){var a={"../":t(14),react:t(1),"./Utility.js":t(209)},o=t(8).default.bind(null,a),i=t(9).default.bind(null,"const React$0 = require('react');\nconst React = React$0['React'] || (React$0.default || React$0);\nconst Utility$0 = require('./Utility.js');\nconst Utility = Utility$0['Utility'] || (Utility$0.default || Utility$0);",o);e.exports=[{type:"markdown",content:'### Clearing and Floating\n\n<https://getuikit.com/docs/utility#overflow>\n\nFloating elements are taken from the document flow and aligned to the left or right side of their container.\nIt is important to clear floats or in the worst case, you might end up with a scrambled site.\nThe following classes will help you to set up basic layouts.\n\n| PROPS                                        | DESCRIPTION                                                                                                                                                                               |\n| -------------------------------------------- | ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------- |\n| <span style="color:salmon">floatLeft</span>  | Add this prop to float the element to the left.                                                                                                                                           |\n| <span style="color:salmon">floatRight</span> | Add this prop to float the element to the right.                                                                                                                                          |\n| <span style="color:salmon">clearFix</span>   | Add this class to a parent container to clear floats. Alternatively, you can create a new block format context, e.g. by adding the <span style="color:salmon">overflowHidden</span> prop. |'},{type:"code",content:"import { Card, Panel } from '../';\n\n<React.Fragment>\n    <Panel clearFix>\n        <Panel floatRight>\n            <Card default body>Right</Card>\n        </Panel>\n        <Panel floatLeft>\n            <Card default body>Left</Card>\n        </Panel>\n    </Panel>\n</React.Fragment>",settings:{},evalInContext:i},{type:"markdown",content:'<br /><br /><hr />\n\n### Overflow\n\n<https://getuikit.com/docs/utility#overflow>\n\nThese utilities provide different classes to modify an element\'s overflow behavior.\n\n| PROPS                                            | DESCRIPTION                                                                                                                                                          |\n| ------------------------------------------------ | -------------------------------------------------------------------------------------------------------------------------------------------------------------------- |\n| <span style="color:salmon">overflowHidden</span> | Add this prop to clip content that exceeds the dimensions of its container.                                                                                          |\n| <span style="color:salmon">overflowAuto</span>   | Add this prop to create a container that provides a horizontal or vertical scrollbar whenever the elements content it are wider or higher than the container itself. |'},{type:"code",content:'import { Panel, Table } from \'../\';\n\nlet data = {\n    header: ["Heading 1","Heading 2","Heading 3","Heading 4","Heading 5","Heading 6","Heading 7","Heading 8"],\n    footer: ["Footer 1","Footer 2","Footer 3","Footer 4","Footer 5","Footer 6","Footer 7","Footer 8"],\n    body: [\n        ["Data 1","Data 2","Data 3","Data 4","Data 5","Data 6","Data 7","Data 8"],\n        ["Data 1","Data 2","Data 3","Data 4","Data 5","Data 6","Data 7","Data 8"],\n        ["Data 1","Data 2","Data 3","Data 4","Data 5","Data 6","Data 7","Data 8"]\n    ]\n};\n\n\n<React.Fragment>\n    <Panel overflowAuto heightSmall>\n        <Table data={data} />\n    </Panel>\n</React.Fragment>',settings:{},evalInContext:i},{type:"markdown",content:'<br /><br /><hr />\n\n### Resize\n\n<https://getuikit.com/docs/utility#resize>\n\nThese utilities provide different props for resizing elements.\n\n| PROPS                                            | DESCRIPTION                                               |\n| ------------------------------------------------ | --------------------------------------------------------- |\n| <span style="color:salmon">resize</span>         | Add this prop to enable horizontal and vertical resizing. |\n| <span style="color:salmon">resizeVertical</span> | Add this prop to enable only vertical resizing.           |'},{type:"code",content:'import { CodeBlock, Grid, Panel } from \'../\';\n\n<React.Fragment>\n    <Grid childWidthSmall="1-2">\n        <Panel>\n            <CodeBlock resizeVertical language="xml">\n{`\n\x3c!-- Resize vertically --\x3e\n<Grid>\n    <Panel width="1-2">...</Panel>\n    <Panel width="1-2">...</Panel>\n</Grid>\n\n<Grid childWidth="1-2">\n    <Panel></Panel>\n    <Panel></Panel>\n</Grid>\n`}\n            </CodeBlock>\n        </Panel>\n        <Panel>\n            <CodeBlock resize language="xml">\n{`\n\x3c!-- Resize vertically --\x3e\n<Grid>\n    <Panel width="1-2">...</Panel>\n    <Panel width="1-2">...</Panel>\n</Grid>\n\n<Grid childWidth="1-2">\n    <Panel></Panel>\n    <Panel></Panel>\n</Grid>\n`}\n            </CodeBlock>\n        </Panel>\n    </Grid>\n</React.Fragment>',settings:{},evalInContext:i},{type:"markdown",content:'<br /><br /><hr />\n\n### Display\n\n<https://getuikit.com/docs/utility#display>\n\nAdd one of these props to change the display properties of an element.\n\n| PROPS                                                | DESCRIPTION                                                |\n| ---------------------------------------------------- | ---------------------------------------------------------- |\n| <span style="color:salmon">displayBlock</span>       | Forces the element to behave like a block element.         |\n| <span style="color:salmon">displayInline</span>      | Forces the element to behave like an inline element.       |\n| <span style="color:salmon">displayInlineBlock</span> | Forces the element to behave like an inline-block element. |\n\n<br /><br /><hr />\n\n### Inline\n\n<https://getuikit.com/docs/utility#inline>\n\nThese props are often used to create a position context on containers with an image as a child.\nThe container keeps the same size as the image as well as the responsive behavior.\nThat way content that is placed on top of the image with the <a href="#/Position">Position component</a> will not flow out of the image dimensions.\n\n| PROPS                                        | DESCRIPTION                                                                                                           |\n| -------------------------------------------- | --------------------------------------------------------------------------------------------------------------------- |\n| <span style="color:salmon">inline</span>     | Add this prop to apply inline-block behavior to an element, add a max-width of 100% and to create a position context. |\n| <span style="color:salmon">inlineClip</span> | Same as <span style="color:salmon">inline</span>, it but also clips overflowing child elements.                       |'},{type:"code",content:'import { Card, Grid, Image, Panel } from \'../\';\n\n<React.Fragment>\n    <Panel inline>\n        <Image src="https://getuikit.com/docs/images/photo.jpg" width={300} height={0} alt="" />\n        <Panel positionMedium positionCover overlay overlayDefault flex flexCenter flexMiddle>Overlay</Panel>\n    </Panel>\n</React.Fragment>',settings:{},evalInContext:i},{type:"markdown",content:'<br /><br /><hr />\n\n### Responsive Objects\n\n<https://getuikit.com/docs/utility#responsive-objects>\n\nIn react-uikit image, canvas, audio and video elements adapt to the width of their parent container by default.\nTo apply responsive behavior to iframes, add the responsive attribute.\nFor other elements or to apply a different behavior, just add one of the following props.\n\n| PROPS                                              | DESCRIPTION                                                                                                                                                                                                                                                                                              |\n| -------------------------------------------------- | -------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------- |\n| <span style="color:salmon">responsiveWidth</span>  | Add this prop to apply the same responsive behavior to any other element. It adjusts the object\'s width according to its parent\'s width, keeping the original aspect ratio.                                                                                                                              |\n| <span style="color:salmon">responsiveHeight</span> | Add this prop to adjust the object\'s height (instead of its width) according to its parent\'s height, keeping the original aspect ratio.                                                                                                                                                                  |\n| <span style="color:salmon">preserveWidth</span>    | Add this prop to avoid the default responsive behavior and preserve the original image dimensions. You can also add the prop to a parent element and it will be applied to all relevant elements content it. If you are embedding Google Maps into your site, you may need this to fix the map\'s images. |\n\n<br /><br /><hr />\n\n### Border Radius\n\n<https://getuikit.com/docs/utility#border-radius>\n\nTo modify the border radius of an element, like an image, add one of the following props.\n\n| PROPS                                           | DESCRIPTION                             |\n| ----------------------------------------------- | --------------------------------------- |\n| <span style="color:salmon">borderRounded</span> | Add this prop to apply rounded corners. |\n| <span style="color:salmon">borderCircle</span>  | Add this prop to apply a circled shape. |\n| <span style="color:salmon">borderPill</span>    | Add this prop to apply a pill shape.    |'},{type:"code",content:'import { Image } from \'../\';\n\n<React.Fragment>\n    <Image borderRounded src="https://getuikit.com/docs/images/avatar.jpg" width={200} height={200} alt="Border rounded" />\n    <Image borderCircle src="https://getuikit.com/docs/images/avatar.jpg" width={200} height={200} alt="Border circle" />\n    <Image borderPill src="https://getuikit.com/docs/images/avatar.jpg" width={200} height={200} alt="Border pill" />\n</React.Fragment>',settings:{},evalInContext:i},{type:"markdown",content:'<br /><br /><hr />\n\n### Box Shadow\n\n<https://getuikit.com/docs/utility#box-shadow>\n\nYou can apply different box shadows to elements. Just add one of the following props.\n\n| PROPS                                             | DESCRIPTION                                      |\n| ------------------------------------------------- | ------------------------------------------------ |\n| <span style="color:salmon">boxShadowSmall</span>  | Add this class to apply a small box shadow.      |\n| <span style="color:salmon">boxShadowMedium</span> | Add this class to apply a medium box shadow.     |\n| <span style="color:salmon">boxShadowLarge</span>  | Add this class to apply a large box shadow.      |\n| <span style="color:salmon">boxShadowXLarge</span> | Add this class to apply a very large box shadow. |'},{type:"code",content:"import { Grid, Panel } from '../';\n\n<React.Fragment>\n    <Grid childWidthSmall=\"1-2\" textCenter>\n        <Panel>\n            <Panel boxShadowSmall padding>Small</Panel>\n        </Panel>\n        <Panel>\n            <Panel boxShadowMedium padding>Medium</Panel>\n        </Panel>\n        <Panel>\n            <Panel boxShadowLarge padding>Large</Panel>\n        </Panel>\n        <Panel>\n            <Panel boxShadowXLarge padding>XLarge</Panel>\n        </Panel>\n    </Grid>\n</React.Fragment>",settings:{},evalInContext:i},{type:"markdown",content:'#### Box Shadow Bottom\n\nTo apply a box shadow at the bottom of an element so that appears to be hovering, add the boxShadowBottom prop.\nThis can also be combined with one of the other boxShadow\\* modifiers.\n\n| PROPS                                             | DESCRIPTION                                                                       |\n| ------------------------------------------------- | --------------------------------------------------------------------------------- |\n| <span style="color:salmon">boxShadowBottom</span> | To apply a box shadow at the bottom of an element so that appears to be hovering. |'},{type:"code",content:"import { Panel } from '../';\n\n<React.Fragment>\n    <Panel boxShadowBottom boxShadowSmall widthSmall=\"1-2\" textCenter>\n        <Panel backgroundDefault paddingLarge>Box Shadow Bottom</Panel>\n    </Panel>\n</React.Fragment>",settings:{},evalInContext:i},{type:"markdown",content:'#### Box Shadow Hover\n\nTo apply a box shadow on hover, add one of the following props.\nThis can also be used to modify the shadow size on hover. To do so, just combine them with one of the props above.\n\n| PROPS                                                  | DESCRIPTION                                               |\n| ------------------------------------------------------ | --------------------------------------------------------- |\n| <span style="color:salmon">boxShadowHoverSmall</span>  | Add this prop to apply a small box shadow on hover.       |\n| <span style="color:salmon">boxShadowHoverMedium</span> | Add this prop to apply a medium box shadow on hover.      |\n| <span style="color:salmon">boxShadowHoverLarge</span>  | Add this prop to apply a large box shadow on hover.       |\n| <span style="color:salmon">boxShadowHoverXLarge</span> | Add this prop to apply a extra large box shadow on hover. |'},{type:"code",content:"import { Grid, Panel } from '../';\n\n<React.Fragment>\n    <Grid childWidthSmall=\"1-2\" textCenter>\n        <Panel>\n            <Panel boxShadowHoverSmall padding>Hover Small</Panel>\n        </Panel>\n        <Panel>\n            <Panel boxShadowHoverXLarge padding>Hover X-Large</Panel>\n        </Panel>\n        <Panel>\n            <Panel boxShadowSmall boxShadowHoverLarge padding>Small Shadow + Hover Large</Panel>\n        </Panel>\n        <Panel>\n            <Panel boxShadowXLarge boxShadowHoverMedium padding>X-Large Shadow + Hover Medium</Panel>\n        </Panel>\n    </Grid>\n</React.Fragment>",settings:{},evalInContext:i},{type:"markdown",content:'<br /><br /><hr />\n\n### Drop Cap\n\n<https://getuikit.com/docs/utility#drop-cap>\n\n| PROPS                                     | DESCRIPTION                                                     |\n| ----------------------------------------- | --------------------------------------------------------------- |\n| <span style="color:salmon">dropcap</span> | With the dropcap prop you can achieve a drop cap in a paragraph |'},{type:"code",content:"import { Paragraph } from '../';\n<React.Fragment>\n    <Paragraph dropcap>Dorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum. Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua.</Paragraph>\n</React.Fragment>",settings:{},evalInContext:i},{type:"markdown",content:'<br /><br /><hr />\n\n### Logo\n\n<https://getuikit.com/docs/utility#logo>\n\n| PROPS                                  | DESCRIPTION                                                                         |\n| -------------------------------------- | ----------------------------------------------------------------------------------- |\n| <span style="color:salmon">logo</span> | With the logo prop you can easily define your logo, for example within your navbar. |'},{type:"code",content:"import { Link, Panel } from '../';\n\n<React.Fragment>\n    <Link logo href=\"#\">Logo</Link>\n</React.Fragment>",settings:{},evalInContext:i},{type:"code",content:"import { Link, Panel } from '../';\n\n<React.Fragment>\n    <Panel panel padding backgroundSecondary light>\n        <Link logo href=\"#\">Logo</Link>\n    </Panel>\n</React.Fragment>",settings:{},evalInContext:i},{type:"markdown",content:'#### Logo Image\n\nYou can also use an <img> element, for example an SVG, as a logo.\n\n| PROPS                                         | DESCRIPTION                                                                                                         |\n| --------------------------------------------- | ------------------------------------------------------------------------------------------------------------------- |\n| <span style="color:salmon">logoInverse</span> | You can even automatically display alternative logos for light and dark backgrounds by using the Inverse component. |'},{type:"code",content:'import { Grid, Panel, Link, Image } from \'../\';\n\n<React.Fragment>\n    <Grid childWidthExpandSmall="1-2">\n        <Panel>\n            <Panel panel padding backgroundMuted>\n                <Link logo href="#">\n                    <Image src="https://getuikit.com/docs/images/logo-placeholder.svg" alt="" />\n                    <Image logoInverse src="https://getuikit.com/docs/images/logo-placeholder-light.svg" alt="" />\n                </Link>\n            </Panel>\n        </Panel>\n        <Panel>\n            <Panel panel padding backgroundSecondary light>\n                <Link logo href="#">\n                    <Image src="https://getuikit.com/docs/images/logo-placeholder.svg" alt="" />\n                    <Image logoInverse src="https://getuikit.com/docs/images/logo-placeholder-light.svg" alt="" />\n                </Link>\n            </Panel>\n        </Panel>\n    </Grid>\n</React.Fragment>',settings:{},evalInContext:i},{type:"markdown",content:'<br /><br /><hr />\n\n### Blend Modes\n\n<https://getuikit.com/docs/utility#blend-modes>\n\nAdd one of the following props to apply different blend modes to your backgrounds, for example when placing them on images.\nYou can combine these with the Overlay component.\nFor a better understanding of how background blend modes work, take a look at this CSS Tricks article.\n\n| PROPS                                             | DESCRIPTION                                    |\n| ------------------------------------------------- | ---------------------------------------------- |\n| <span style="color:salmon">blendMultiply</span>   | This class sets the blend mode to multiply.    |\n| <span style="color:salmon">blendScreen</span>     | This class sets the blend mode to screen.      |\n| <span style="color:salmon">blendOverlay</span>    | This class sets the blend mode to overlay.     |\n| <span style="color:salmon">blendDarken</span>     | This class sets the blend mode to darken.      |\n| <span style="color:salmon">blendLighten</span>    | This class sets the blend mode to lighten.     |\n| <span style="color:salmon">blendColorDodge</span> | This class sets the blend mode to color dodge. |\n| <span style="color:salmon">blendColorBurn</span>  | This class sets the blend mode to color burn.  |\n| <span style="color:salmon">blendHardLight</span>  | This class sets the blend mode to hard light.  |\n| <span style="color:salmon">blendSoftLight</span>  | This class sets the blend mode to soft light.  |\n| <span style="color:salmon">blendDifference</span> | This class sets the blend mode to difference.  |\n| <span style="color:salmon">blendExclusion</span>  | This class sets the blend mode to exclusion.   |\n| <span style="color:salmon">blendHue</span>        | This class sets the blend mode to hue.         |\n| <span style="color:salmon">blendSaturation</span> | This class sets the blend mode to saturation.  |\n| <span style="color:salmon">blendColor</span>      | This class sets the blend mode to color.       |\n| <span style="color:salmon">blendLuminosity</span> | This class sets the blend mode to luminosity.  |'},{type:"code",content:'import { Grid, Image, Panel, Paragraph } from \'../\';\n\n<React.Fragment>\n    <Grid childWidth="1-2" childWidthSmall="1-3" small light>\n        <Panel>\n            <Panel inline backgroundPrimary>\n                <Image blendMultiply src="https://getuikit.com/docs/images/dark.jpg" alt="Blend Multiply" />\n                <Panel positionCenter>\n                    <Paragraph marginRemove>Multiply</Paragraph>\n                </Panel>\n            </Panel>\n        </Panel>\n        <Panel>\n            <Panel inline backgroundPrimary>\n                <Image blendScreen src="https://getuikit.com/docs/images/dark.jpg" alt="Blend Screen" />\n                <Panel positionCenter>\n                    <Paragraph marginRemove>Screen</Paragraph>\n                </Panel>\n            </Panel>\n        </Panel>\n        <Panel>\n            <Panel inline backgroundPrimary>\n                <Image blendOverlay src="https://getuikit.com/docs/images/dark.jpg" alt="Blend Overlay" />\n                <Panel positionCenter>\n                    <Paragraph marginRemove>Overlay</Paragraph>\n                </Panel>\n            </Panel>\n        </Panel>\n        <Panel>\n            <Panel inline backgroundPrimary>\n                <Image blendDarken src="https://getuikit.com/docs/images/dark.jpg" alt="Blend Darken" />\n                <Panel positionCenter>\n                    <Paragraph marginRemove>Darken</Paragraph>\n                </Panel>\n            </Panel>\n        </Panel>\n        <Panel>\n            <Panel inline backgroundPrimary>\n                <Image blendLighten src="https://getuikit.com/docs/images/dark.jpg" alt="Blend Lighten" />\n                <Panel positionCenter>\n                    <Paragraph marginRemove>Lighten</Paragraph>\n                </Panel>\n            </Panel>\n        </Panel>\n        <Panel>\n            <Panel inline backgroundPrimary>\n                <Image blendColorDodge src="https://getuikit.com/docs/images/dark.jpg" alt="Blend Color Dodge" />\n                <Panel positionCenter>\n                    <Paragraph marginRemove>Color Dodge</Paragraph>\n                </Panel>\n            </Panel>\n        </Panel>\n        <Panel>\n            <Panel inline backgroundPrimary>\n                <Image blendColorBurn src="https://getuikit.com/docs/images/dark.jpg" alt="Blend Color Burn" />\n                <Panel positionCenter>\n                    <Paragraph marginRemove>Color Burn</Paragraph>\n                </Panel>\n            </Panel>\n        </Panel>\n        <Panel>\n            <Panel inline backgroundPrimary>\n                <Image blendHardLight src="https://getuikit.com/docs/images/dark.jpg" alt="Blend Hard Light" />\n                <Panel positionCenter>\n                    <Paragraph marginRemove>Hard Light</Paragraph>\n                </Panel>\n            </Panel>\n        </Panel>\n        <Panel>\n            <Panel inline backgroundPrimary>\n                <Image blendSoftLight src="https://getuikit.com/docs/images/dark.jpg" alt="Blend Soft Light" />\n                <Panel positionCenter>\n                    <Paragraph marginRemove>Soft Light</Paragraph>\n                </Panel>\n            </Panel>\n        </Panel>\n        <Panel>\n            <Panel inline backgroundPrimary>\n                <Image blendDifference src="https://getuikit.com/docs/images/dark.jpg" alt="Blend Difference" />\n                <Panel positionCenter>\n                    <Paragraph marginRemove>Difference</Paragraph>\n                </Panel>\n            </Panel>\n        </Panel>\n        <Panel>\n            <Panel inline backgroundPrimary>\n                <Image blendExclusion src="https://getuikit.com/docs/images/dark.jpg" alt="Blend Exclusion" />\n                <Panel positionCenter>\n                    <Paragraph marginRemove>Exclusion</Paragraph>\n                </Panel>\n            </Panel>\n        </Panel>\n        <Panel>\n            <Panel inline backgroundPrimary>\n                <Image blendHue src="https://getuikit.com/docs/images/dark.jpg" alt="Blend Hue" />\n                <Panel positionCenter>\n                    <Paragraph marginRemove>Hue</Paragraph>\n                </Panel>\n            </Panel>\n        </Panel>\n        <Panel>\n            <Panel inline backgroundPrimary>\n                <Image blendSaturation src="https://getuikit.com/docs/images/dark.jpg" alt="Blend Saturation" />\n                <Panel positionCenter>\n                    <Paragraph marginRemove>Saturation</Paragraph>\n                </Panel>\n            </Panel>\n        </Panel>\n        <Panel>\n            <Panel inline backgroundPrimary>\n                <Image blendColor src="https://getuikit.com/docs/images/dark.jpg" alt="Blend Color" />\n                <Panel positionCenter>\n                    <Paragraph marginRemove>Color</Paragraph>\n                </Panel>\n            </Panel>\n        </Panel>\n        <Panel>\n            <Panel inline backgroundPrimary>\n                <Image blendLuminosity src="https://getuikit.com/docs/images/dark.jpg" alt="Blend Luminosity" />\n                <Panel positionCenter>\n                    <Paragraph marginRemove>Luminosity</Paragraph>\n                </Panel>\n            </Panel>\n        </Panel>\n    </Grid>\n</React.Fragment>',settings:{},evalInContext:i},{type:"markdown",content:'<br /><br /><hr />\n\n### Transform\n\n#### Center\n\n<https://getuikit.com/docs/utility#transform-center>\n\nTo center an element to itself, add the transformCenter prop.\nThis is particularly useful for absolute positioning.\n\n| PROPS                                             | DESCRIPTION                                                   |\n| ------------------------------------------------- | ------------------------------------------------------------- |\n| <span style="color:salmon">transformCenter</span> | To center an element to itself, add the transformCenter prop. |'},{type:"code",content:'import { Image, Link, Panel } from \'../\';\n\n<React.Fragment>\n    <Panel inline>\n        <Image blendLuminosity src="https://getuikit.com/docs/images/light.jpg" alt="Blend Luminosity" />\n        <Link positionAbsolute transformCenter href="#" marker left="50%" top="50%"></Link>\n    </Panel>\n</React.Fragment>',settings:{},evalInContext:i},{type:"markdown",content:'#### Origin\n\n<https://getuikit.com/docs/utility#transform-origin>\n\nTo modify the origin of an animation, like scaling, add one of the transformOrigin\\* props.\nThis can be combined with the <a href="#/Animation">Animation component</a>.\n\n| PROPS                                                         | DESCRIPTION                                      |\n| ------------------------------------------------------------- | ------------------------------------------------ |\n| <span style="color:salmon">transformOriginTopLeft</span>      | The transition originates from the top left.     |\n| <span style="color:salmon">transformOriginTopCenter</span>    | The transition originates from the top.          |\n| <span style="color:salmon">transformOriginTopRight</span>     | The transition originates from the top right.    |\n| <span style="color:salmon">transformOriginCenterLeft</span>   | The transition originates from the left.         |\n| <span style="color:salmon">transformOriginCenterRight</span>  | The transition originates from the right.        |\n| <span style="color:salmon">transformOriginBottomLeft</span>   | The transition originates from the bottom left.  |\n| <span style="color:salmon">transformOriginBottomCenter</span> | The transition originates from the bottom.       |\n| <span style="color:salmon">transformOriginBottomRight</span>  | The transition originates from the bottom right. |'},{type:"code",content:"import { Card, Grid, Panel } from '../';\n\n<React.Fragment>\n    <Grid childWidthMedium=\"1-3\">\n        <Panel animationToggle>\n            <Card default body animationScaleUp transformOriginBottomRight>Bottom Right</Card>\n        </Panel>\n        <Panel animationToggle>\n            <Card default body animationScaleUp transformOriginTopCenter>Top Center</Card>\n        </Panel>\n        <Panel animationToggle>\n            <Card default body animationScaleUp transformOriginBottomCenter>Bottom Center</Card>\n        </Panel>\n    </Grid>\n</React.Fragment>",settings:{},evalInContext:i},{type:"markdown",content:'<br /><br /><hr />\n\n### Disabled\n\n<https://getuikit.com/docs/utility#disabled>\n\nTo disable the click behavior of any element, like a Link, Button or IFrame component, add the disabled prop.\n\n| PROPS                                      | DESCRIPTION                                                                                                   |\n| ------------------------------------------ | ------------------------------------------------------------------------------------------------------------- |\n| <span style="color:salmon">disabled</span> | To disable the click behavior of any element, like a Link, Button or IFrame component, add the disabled prop. |'},{type:"code",content:"import { Button } from '../';\n\n<React.Fragment>\n    <Button disable>Disabled</Button>\n</React.Fragment>",settings:{},evalInContext:i},{type:"markdown",content:'<br /><br /><hr />\n\n### Drag\n\n<https://getuikit.com/docs/utility#drag>\n\nTo apply a move cursor to elements that are being dragged, add the drag prop.\n\n| PROPS                                      | DESCRIPTION                                                                                   |\n| ------------------------------------------ | --------------------------------------------------------------------------------------------- |\n| <span style="color:salmon">drag</span>     | To apply a move cursor to elements that are being dragged, add the drag prop.                 |\n| <span style="color:salmon">dragOver</span> | To create a box shadow on an upload area when dragging a file over it, add the dragOver prop. |'},{type:"code",content:"import { Icon, Panel } from '../';\n\n<React.Fragment>\n    <Panel drag widthSmall padding backgroundMuted textCenter>\n        <Icon move ratio=\"2\" />\n    </Panel>\n</React.Fragment>",settings:{},evalInContext:i}]},864:function(e,n,t){e.exports={doclets:{},displayName:"Visibility",description:"",methods:[],props:[],examples:t(865)}},865:function(e,n,t){var a={"../":t(14),react:t(1),"./Visibility.js":t(210)},o=t(8).default.bind(null,a),i=t(9).default.bind(null,"const React$0 = require('react');\nconst React = React$0['React'] || (React$0.default || React$0);\nconst Visibility$0 = require('./Visibility.js');\nconst Visibility = Visibility$0['Visibility'] || (Visibility$0.default || Visibility$0);",o);e.exports=[{type:"markdown",content:'<https://getuikit.com/docs/visibility>\n\n### Define the width of elements for different viewport sizes.\n\nUse responsive visibility props to display or hide elements on different devices.\n\n<br /><br /><hr />\n\n### Usage\n\nAdd one of these props to hide an element.\n\n| PROPS                                       | DESCRIPTION                                                   |\n| ------------------------------------------- | ------------------------------------------------------------- |\n| <span style="color:salmon">hidden</span>    | Hides the element on any device.                              |\n| <span style="color:salmon">invisible</span> | Hides the element without removing it from the document flow. |\n\n<br /><br /><hr />\n\n### Responsive\n\nThis component provides responsive props to hide or display elements on different viewports.\n\n#### Hidden\n\nUse one of the props to hide the element from screens larger than a specified width.\n\n| PROPS                                          | DESCRIPTION                                                                        |\n| ---------------------------------------------- | ---------------------------------------------------------------------------------- |\n| <span style="color:salmon">hiddenSmall</span>  | Only affects device widths of <span style="color:salmon">640px</span> and larger.  |\n| <span style="color:salmon">hiddenMedium</span> | Only affects device widths of <span style="color:salmon">960px</span> and larger.  |\n| <span style="color:salmon">hiddenLarge</span>  | Only affects device widths of <span style="color:salmon">1200px</span> and larger. |\n| <span style="color:salmon">hiddenXLarge</span> | Only affects device widths of <span style="color:salmon">1600px</span> and larger. |\n\nIn this example the green elements are hidden on screens that are larger than the defined breakpoint.\nResize your browser window to see the effect.'},{type:"code",content:'import { Card, Grid, Panel } from \'../\';\n<React.Fragment>\n    <Grid small childWidth="1-2" childWidthSmall="1-4" textCenter>\n        <Panel panel>\n            <Card default body>Expand</Card>\n        </Panel>\n        <Panel panel>\n            <Card default body>width="1-3"</Card>\n        </Panel>\n        <Panel panel>\n            <Card default body>Expand</Card>\n        </Panel>\n        <Panel panel>\n            <Card default body>Expand</Card>\n        </Panel>\n    </Grid>\n</React.Fragment>',settings:{},evalInContext:i}]},866:function(e,n,t){e.exports={doclets:{},displayName:"Width",description:"",methods:[],props:[],examples:t(867)}},867:function(e,n,t){var a={"../":t(14),react:t(1),"./Width.js":t(211)},o=t(8).default.bind(null,a),i=t(9).default.bind(null,"const React$0 = require('react');\nconst React = React$0['React'] || (React$0.default || React$0);\nconst Width$0 = require('./Width.js');\nconst Width = Width$0['Width'] || (Width$0.default || Width$0);",o);e.exports=[{type:"markdown",content:'<https://getuikit.com/docs/width>\n\n### Define the width of elements for different viewport sizes.\n\nReact-uikit\'s width component is often used in combination with grids to split content into responsive columns.\nYou can apply fractions, automatic width or expand units to fill the remaining space and combine these modes.\n\n### Usage\n\nAdd one of the <span style="color:darkturquoise">values</span> to the responsive <span style="color:salmon">width props</span> on an element to determine its size.\nTypically, you would use a grid from the Grid component and its child elements to create the units.\n\n| VALUE                                               | DESCRIPTION                                           |\n| --------------------------------------------------- | ----------------------------------------------------- |\n| <span style="color:darkturquoise">1-1</span>        | Fills 100% of the available width.                    |\n| <span style="color:darkturquoise">1-2</span>        | The element takes up halves of its parent container.  |\n| <span style="color:darkturquoise">1-3 to 2-3</span> | The element takes up thirds of its parent container.  |\n| <span style="color:darkturquoise">1-4 to 3-4</span> | The element takes up fourths of its parent container. |\n| <span style="color:darkturquoise">1-5 to 4-5</span> | The element takes up fifths of its parent container.  |\n| <span style="color:darkturquoise">1-6 to 5-6</span> | The element takes up sixths of its parent container.  |\n\n<span style="color:blue">We remove redundancy into each set of unit classes, so that for instance instead of </span><span style="color:salmon">width="</span><span style="color:darkturquoise">3-6</span><span style="color:salmon">" </span> <span style="color:blue"> you should use </span><span style="color:salmon">width="</span><span style="color:darkturquoise">1-2</span><span style="color:salmon">"</span><br /><br />\n\n### Responsive Width\n\nReact-uikit provides a number of responsive width props.\nBasically they work just like the usual width props, except that they have suffixes width\\* (widthS, widthM, widthL, widthXL) that represent the breakpoint from which they come to effect.\nThese classes can be combined with the Visibility component.\nThis is great to adjust your layout and content for different device sizes.\n\n| PROPS                                         | DESCRIPTION                                                                                                             |\n| --------------------------------------------- | ----------------------------------------------------------------------------------------------------------------------- |\n| <span style="color:salmon">width</span>       | Affects all device widths, grid columns stay side by side.                                                              |\n| <span style="color:salmon">widthSmall</span>  | Affects device widths of <span style="color:salmon">640px</span> and larger. Grid columns will stack on smaller sizes.  |\n| <span style="color:salmon">widthMedium</span> | Affects device widths of <span style="color:salmon">960px</span> and larger. Grid columns will stack on smaller sizes.  |\n| <span style="color:salmon">widthLarge</span>  | Affects device widths of <span style="color:salmon">1200px</span> and larger. Grid columns will stack on smaller sizes. |\n| <span style="color:salmon">widthXLarge</span> | Affects device widths of <span style="color:salmon">1600px</span> and larger. Grid columns will stack on smaller sizes. |'},{type:"code",content:'import { Card, Grid, Panel } from \'../\';\n\n<React.Fragment>\n    <Grid textCenter>\n        <Panel width="1-3">\n            <Card default body>item</Card>\n        </Panel>\n        <Panel width="1-3">\n            <Card default body>item</Card>\n        </Panel>\n        <Panel width="1-3">\n            <Card default body>item</Card>\n        </Panel>\n    </Grid>\n    <Grid textCenter>\n        <Panel width="1-2">\n            <Card default body>item</Card>\n        </Panel>\n        <Panel width="1-2">\n            <Card default body>item</Card>\n        </Panel>\n    </Grid>\n    <Grid textCenter>\n        <Panel width="1-4">\n            <Card default body>item</Card>\n        </Panel>\n        <Panel width="3-4">\n            <Card default body>item</Card>\n        </Panel>\n    </Grid>\n</React.Fragment>',settings:{},evalInContext:i},{type:"markdown",content:'### Auto & Expand\n\nThe Width component provides additional modifiers to give you more flexibility in the distribution of items.\n\n| PROPS                                    | DESCRIPTION                                                            |\n| ---------------------------------------- | ---------------------------------------------------------------------- |\n| <span style="color:salmon">auto</span>   | The item expands only to the width of its own content.                 |\n| <span style="color:salmon">expand</span> | The item expands to fill up the remaining space of the grid container. |'},{type:"code",content:"import { Card, Grid, Panel } from '../';\n<React.Fragment>\n    <Grid textCenter>\n        <Panel widthAuto>\n            <Card default body>auto</Card>\n        </Panel>\n        <Panel widthExpand>\n            <Card default body>expand</Card>\n        </Panel>\n    </Grid>\n</React.Fragment>",settings:{},evalInContext:i},{type:"markdown",content:'### Equal Child Widths\n\nTo create a grid whose child elements\' widths are evenly split, you don\'t have to apply the same props to each list item within the grid.\nJust add the width and child props to the grid itself.\n\n| VALUE                                        | DESCRIPTION                                              |\n| -------------------------------------------- | -------------------------------------------------------- |\n| <span style="color:darkturquoise">1-2</span> | All elements take up half of their parent container.     |\n| <span style="color:darkturquoise">1-3</span> | All elements take up a third of their parent container.  |\n| <span style="color:darkturquoise">1-4</span> | All elements take up a fourth of their parent container. |\n| <span style="color:darkturquoise">1-5</span> | All elements take up a fifth of their parent container.  |\n| <span style="color:darkturquoise">1-6</span> | All elements take up a sixth of their parent container.  |\n\n<span style="color:blue">Use the width prop (</span><span style="color:salmon">width="</span><span style="color:darkturquoise">1-6</span><span style="color:salmon">" </span> <span style="color:blue">), along with the child prop (</span><span style="color:salmon">child</span><span style="color:blue">) on a Grid</span><br /><br />\n\n| PROPS                                    | DESCRIPTION                                                         |\n| ---------------------------------------- | ------------------------------------------------------------------- |\n| <span style="color:salmon">child</span>  | Grid\'s child elements\' are evenly split.                            |\n| <span style="color:salmon">auto</span>   | Divides the grid into equal units depending on the content size.    |\n| <span style="color:salmon">expand</span> | Divides the grid into equal units depending on the available space. |'},{type:"code",content:"import { Card, Grid, Panel } from '../';\n<React.Fragment>\n    <Grid childWidth=\"1-4\" small textCenter>\n        <Panel>\n            <Card default body>Item</Card>\n        </Panel>\n        <Panel>\n            <Card default body>Item</Card>\n        </Panel>\n        <Panel>\n            <Card default body>Item</Card>\n        </Panel>\n        <Panel>\n            <Card default body>Item</Card>\n        </Panel>\n        <Panel>\n            <Card default body>Item</Card>\n        </Panel>\n    </Grid>\n</React.Fragment>",settings:{},evalInContext:i},{type:"markdown",content:"Items that use width props with fractions will break into a new row, if they no longer fit their container's width.\nWhen using one of the expand props, however, the space will be evenly distributed among items that always stay in the same row."},{type:"code",content:"import { Card, Grid, Panel } from '../';\n<React.Fragment>\n    <Grid childWidthExpand small textCenter>\n        <Panel>\n            <Card default body>Item</Card>\n        </Panel>\n        <Panel>\n            <Card default body>Item</Card>\n        </Panel>\n        <Panel>\n            <Card default body>Item</Card>\n        </Panel>\n        <Panel>\n            <Card default body>Item</Card>\n        </Panel>\n        <Panel>\n            <Card default body>Item</Card>\n        </Panel>\n    </Grid>\n</React.Fragment>",settings:{},evalInContext:i},{type:"markdown",content:'### Fixed width\n\nIn addition to the calculated width props, you can also add one of the following props, which apply fixed widths.\n\n| PROPS                                          | DESCRIPTION                                                       |\n| ---------------------------------------------- | ----------------------------------------------------------------- |\n| <span style="color:salmon">widthSmall</span>   | Applies a fixed width of <span style="color:salmon">150px</span>. |\n| <span style="color:salmon">widthMedium</span>  | Applies a fixed width of <span style="color:salmon">300px</span>. |\n| <span style="color:salmon">widthLarge</span>   | Applies a fixed width of <span style="color:salmon">450px</span>. |\n| <span style="color:salmon">widthXLarge</span>  | Applies a fixed width of <span style="color:salmon">600px</span>. |\n| <span style="color:salmon">widthXXLarge</span> | Applies a fixed width of <span style="color:salmon">750px</span>. |'},{type:"code",content:"import { Card, Grid, Panel } from '../';\n<React.Fragment>\n    <Panel widthSmall margin>\n        <Card default body small>widthSmall</Card>\n    </Panel>\n    <Panel widthMedium margin>\n        <Card default body small>widthMedium</Card>\n    </Panel>\n    <Panel widthLarge margin>\n        <Card default body small>widthLarge</Card>\n    </Panel>\n    <Panel widthXLarge margin>\n        <Card default body small>widthXLarge</Card>\n    </Panel>\n    <Panel widthXXLarge>\n        <Card default body small>widthXXLarge</Card>\n    </Panel>\n</React.Fragment>",settings:{},evalInContext:i},{type:"markdown",content:'### Mixing widths\n\nYou can also combine the child and expand or auto on the Grid and the width="1-3" classes for individual items.\nThat way it is possible, for example, to create a grid with one item that has a specific width and all other items expanding to fill the remaining space.'},{type:"code",content:'import { Card, Grid, Panel } from \'../\';\n<React.Fragment>\n    <Grid childWidthExpand small textCenter>\n        <Panel>\n            <Card default body>Expand</Card>\n        </Panel>\n        <Panel width="1-3">\n            <Card default body>width="1-3"</Card>\n        </Panel>\n        <Panel>\n            <Card default body>Expand</Card>\n        </Panel>\n        <Panel>\n            <Card default body>Expand</Card>\n        </Panel>\n    </Grid>\n</React.Fragment>',settings:{},evalInContext:i},{type:"markdown",content:"### Responsive width\n\nReact-uikit provides a number of responsive widths props. Basically they work just like the usual width props,\nexcept that they have suffixes that represent the breakpoint from which they come to effect.\nThese props can be combined with the Visibility component.\nThis is great to adjust your layout and content for different device sizes."},{type:"code",content:'import { Card, Grid, Panel } from \'../\';\n<React.Fragment>\n    <Grid match small textCenter>\n        <Panel widthMedium="1-2">\n            <Card default body>widthMedium="1-2"</Card>\n        </Panel>\n        <Panel widthMedium="1-4">\n            <Card default body>widthMedium="1-4"</Card>\n        </Panel>\n        <Panel widthMedium="1-4">\n            <Card default body>widthMedium="1-4"</Card>\n        </Panel>\n        <Panel widthMedium="1-5" hiddenLarge>\n            <Card default body>widthMedium="1-5"<br />hiddenLarge</Card>\n        </Panel>\n        <Panel widthMedium="1-5" widthLarge="1-3">\n            <Card secondary body>widthMedium="1-5"<br />widthLarge="1-3"</Card>\n        </Panel>\n        <Panel widthMedium="3-5" widthLarge="2-3">\n            <Card default body>widthMedium="3-5"<br />widthLarge="2-3"</Card>\n        </Panel>\n    </Grid>\n\n    <Grid match small textCenter>\n        <Panel widthAutoMedium visibleLarge>\n            <Card primary body>widthAutoMedium<br />visibleLarge</Card>\n        </Panel>\n        <Panel widthMedium="1-3">\n            <Card default body>widthMedium="1-3"</Card>\n        </Panel>\n        <Panel widthExpandMedium>\n            <Card default body>widthExpandMedium</Card>\n        </Panel>\n    </Grid>\n</React.Fragment>',settings:{},evalInContext:i}]},94:function(e,n,t){"use strict";t.r(n);var a=t(1),o=t.n(a),i=t(3),r=t.n(i),l=t(13),s=t(6),d=function(e){return o.a.createElement("div",Object.assign({className:m(e)+Object(s.a)(e)},l.a.applyHeightAttributes(e)),e.children)},m=function(e){return r()("uk-alert",{"uk-alert":e.xxx}," ")};d.defaultProps={children:void 0},n.default=d},95:function(e,n,t){"use strict";t.r(n);var a=t(1),o=t.n(a),i=t(3),r=t.n(i),l=function(e){return e.cls?o.a.createElement("div",{"uk-scrollspy":"cls: ".concat(d(e),"; repeat: true"),tabIndex:"0"},e.children):o.a.createElement("div",{className:"uk-animation-toggle ",tabIndex:"0"},s(e))},s=function(e){return o.a.Children.map(e.children,(function(n){return o.a.cloneElement(n,{class:d(e)})}))},d=function(e){return r()({"uk-animation-fade":e.fade},{"uk-animation-scale-up":e.scale&&e.up},{"uk-animation-scale-down":e.scale&&e.down},{"uk-animation-slide-top":e.slide&&e.top&&!e.small&&!e.medium},{"uk-animation-slide-bottom":e.slide&&e.bottom&&!e.small&&!e.medium},{"uk-animation-slide-left":e.slide&&e.left&&!e.small&&!e.medium},{"uk-animation-slide-right":e.slide&&e.right&&!e.small&&!e.medium},{"uk-animation-slide-top-small":e.slide&&e.top&&e.small},{"uk-animation-slide-bottom-small":e.slide&&e.bottom&&e.small},{"uk-animation-slide-left-small":e.slide&&e.left&&e.small},{"uk-animation-slide-right-small":e.slide&&e.right&&e.small},{"uk-animation-slide-top-medium":e.slide&&e.top&&e.medium},{"uk-animation-slide-bottom-medium":e.slide&&e.bottom&&e.medium},{"uk-animation-slide-left-medium":e.slide&&e.left&&e.medium},{"uk-animation-slide-right-medium":e.slide&&e.right&&e.medium},{"uk-animation-slide-right-medium":e.slide&&e.right&&e.medium},{"uk-animation-scale-up uk-transform-origin-top-right":e.origin&&e.top&&e.right},{"uk-animation-scale-up uk-transform-origin-top-center":e.origin&&e.top&&e.center},{"uk-animation-scale-up uk-transform-origin-top-left":e.origin&&e.top&&e.left},{"uk-animation-scale-up uk-transform-origin-bottom-right":e.origin&&e.bottom&&e.right},{"uk-animation-scale-up uk-transform-origin-bottom-center":e.origin&&e.bottom&&e.center},{"uk-animation-scale-up uk-transform-origin-bottom-left":e.origin&&e.bottom&&e.left},{"uk-animation-shake":e.shake},{"uk-animation-reverse":e.reverse},{"uk-animation-fast":e.fast},{"uk-animation-kenburns":e.kenBurns})};l.defaultProps={fade:!1,scale:!1,up:!1,down:!1,slide:!1,origin:!1,top:!1,bottom:!1,left:!1,right:!1,small:!1,medium:!1,kenBurns:!1,shake:!1,stroke:!1,reverse:!1,fast:!1,cls:!1,children:void 0},n.default=l},96:function(e,n,t){"use strict";t.r(n);var a=t(1),o=t.n(a),i=t(3),r=t.n(i),l=t(6),s=function(e){return o.a.createElement("i",{className:d(e)+Object(l.a)(e),"uk-icon":"icon: ".concat(m(e),"; ratio: ").concat(e.ratio)},e.children)},d=function(e){return r()(" "," ")},m=function(e){return r()({heart:e.heart},{home:e.home},{move:e.move})};s.defaultProps={children:void 0},n.default=s},97:function(e,n,t){"use strict";t.r(n);var a=t(1),o=t.n(a),i=t(3),r=t.n(i),l=(t(64),t(6)),s=t(69),d=t(116),m=function(e){return e.marker?o.a.createElement("a",{className:p(e)+Object(s.a)(e)+Object(d.a)(e)+Object(l.a)(e),href:e.href,"uk-marker":"",style:{left:e.left,top:e.top}},e.children):o.a.createElement("a",{className:p(e)+Object(s.a)(e)+Object(l.a)(e),href:e.href},e.children)},p=function(e){return r()(" ",{"uk-logo":e.logo},{"uk-link-text":e.text},{"uk-link-muted":e.muted}," ")};m.defaultProps={logo:!1,text:!1,muted:!1,href:"",left:"",top:"",children:void 0},n.default=m},98:function(e,n,t){"use strict";t.r(n);var a=t(1),o=t.n(a),i=t(3),r=t.n(i),l=function(e){return o.a.createElement("div",{className:s(e)},e.children)},s=function(e){return r()("",{"uk-overflow-hidden":e.hidden})};l.defaultProps={hidden:!1,children:void 0},n.default=l},99:function(e,n,t){"use strict";t.r(n);var a=t(1),o=t.n(a),i=t(3),r=t.n(i),l=t(6),s=function(e){return o.a.createElement("p",{className:d(e)+Object(l.a)(e)},e.children)},d=function(e){return r()(" ",{"uk-dropcap":e.dropcap}," ")};s.defaultProps={children:void 0},n.default=s}},[[228,1,2]]]);